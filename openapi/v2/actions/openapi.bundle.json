{
  "openapi": "3.0.3",
  "info": {
    "version": "0.13.7",
    "title": "Actions API",
    "contact": {
      "name": "Supaglue",
      "email": "docs@supaglue.com",
      "url": "https://supaglue.com"
    },
    "description": "#### Introduction\n\nWelcome to the Actions API documentation. You can use this API to perform CRUD on Entity or Object records in third-party providers.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://www.postman.com/supaglue/workspace/supaglue-public/overview)\n\n#### Base API URL\n```\nhttps://api.supaglue.io/actions/v2\n```\n"
  },
  "servers": [
    {
      "url": "https://api.supaglue.io/actions/v2",
      "description": "Supaglue API"
    }
  ],
  "paths": {
    "/entities/{entity_name}": {
      "post": {
        "operationId": "createEntityRecord",
        "summary": "Create Entity record",
        "tags": [
          "EntityRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/create_update_entity_record"
                  }
                },
                "required": [
                  "data"
                ],
                "example": {
                  "data": {
                    "name": "John Doe",
                    "email": "johndoe@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "EntityRecord created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_entity_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                },
                "example": {
                  "record": {
                    "id": "5e13cd1d-ac44-4c02-b5c3-6bfc5d3e0463",
                    "entity": {
                      "id": "55ce9cf8-0e8c-44c4-b4f6-f4740f3e6258",
                      "name": "ApplicationContact"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "entity_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "appcontact"
          }
        }
      ]
    },
    "/entities/{entity_name}/{record_id}": {
      "get": {
        "operationId": "getEntityRecord",
        "summary": "Get Entity Record",
        "tags": [
          "EntityRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Entity record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_record"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateEntityRecord",
        "summary": "Update entity record",
        "tags": [
          "EntityRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/create_update_entity_record"
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity record updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "entity_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "appcontact"
          }
        },
        {
          "name": "record_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/objects/standard/{object_name}": {
      "post": {
        "operationId": "createStandardObjectRecord",
        "summary": "Create Standard Object record",
        "tags": [
          "ObjectRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/create_update_standard_object_record"
                  }
                },
                "required": [
                  "data"
                ],
                "example": {
                  "data": {
                    "Name": "Acme Corp",
                    "Description": "We create the best embedded integration platforms."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Standard ObjectRecord created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_standard_object_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                },
                "example": {
                  "record": {
                    "id": "87809459-af9f-41ee-bf13-b9f24997b42f",
                    "standard_object_name": "Account"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "object_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "Account"
          }
        }
      ]
    },
    "/objects/standard/{object_name}/{record_id}": {
      "get": {
        "operationId": "getStandardObjectRecord",
        "summary": "Get Standard Object record",
        "tags": [
          "ObjectRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Standard object record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/standard_object_record"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "001Fn00023f8oYYIB0",
                      "standard_object_name": "Account",
                      "data": {
                        "Name": "Acme Corp",
                        "Description": "We create the best embedded integration platforms.",
                        "additional_properties": {
                          "IsDomestic__c": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateStandardObjectRecord",
        "summary": "Update Standard Object record",
        "tags": [
          "ObjectRecords"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/create_update_standard_object_record"
                  }
                },
                "required": [
                  "data"
                ],
                "example": {
                  "data": {
                    "Name": "Acme Corp",
                    "Description": "We create the best embedded integration platforms."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Standard object record updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "object_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "Account"
          }
        },
        {
          "name": "record_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/associations": {
      "get": {
        "operationId": "getAssociations",
        "tags": [
          "Associations"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List associations",
        "description": "Get a list of associations",
        "parameters": [
          {
            "name": "source_record_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "source_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "target_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Associations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/association"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "createAssociation",
        "summary": "Create association",
        "tags": [
          "Associations"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_update_association"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Association created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "association": {
                      "$ref": "#/components/schemas/association"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/passthrough": {
      "post": {
        "operationId": "sendPassthroughRequest",
        "tags": [
          "Passthrough"
        ],
        "summary": "Send passthrough request",
        "security": [
          {
            "x-api-key": []
          }
        ],
        "description": "Send request directly to a provider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to send the request to (do not pass the domain)"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE"
                    ],
                    "example": "GET"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Headers to pass to downstream",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "query": {
                    "type": "object",
                    "description": "Query parameters to pass to downstream",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "description": "Body to pass to downstream (can be string or JSON object)",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "additionalProperties": true
                      }
                    ]
                  }
                },
                "required": [
                  "path",
                  "method"
                ],
                "example": {
                  "path": "/crm/v3/schemas",
                  "method": "GET"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Passthrough response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The full URL the request was went to",
                      "example": "https://customcrm.com/api/cars"
                    },
                    "status": {
                      "type": "number",
                      "description": "Status code from the downstream",
                      "example": 200
                    },
                    "headers": {
                      "type": "object",
                      "description": "The response headers from the downstream",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "additionalProperties": true
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": true
                        }
                      ],
                      "description": "The body from the downstream"
                    }
                  },
                  "required": [
                    "url",
                    "status",
                    "headers"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "url": "https://api.hubapi.com/crm/v3/schemas",
                      "status": 200,
                      "headers": {
                        "x-hubspot-ratelimit-remaining": 99
                      },
                      "body": {
                        "results": [
                          {
                            "labels": {
                              "singular": "Contract",
                              "plural": "Contracts"
                            },
                            "requiredProperties": [
                              "name",
                              "description"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    }
  },
  "tags": [
    {
      "name": "EntityRecords",
      "description": "An `Entity Record` is a record of an `Entity`."
    },
    {
      "name": "ObjectRecords",
      "description": "An `Object Record` is a record of an `Object`."
    },
    {
      "name": "Passthrough",
      "description": "Passthrough operations to underlying providers."
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "API key to allow developers to access the API"
      }
    },
    "schemas": {
      "entity_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "ede9f49c-3a38-4ff8-8226-ffd99b89ad5e"
          },
          "entity": {
            "$ref": "#/components/schemas/simple_entity"
          },
          "data": {
            "type": "object",
            "properties": {
              "additional_fields": {
                "type": "object",
                "additionalProperties": true,
                "description": "Any data that is not part of the Entity itself but is mapped by the customer when `allow_additional_field_mappings` is `true` on the Entity."
              }
            },
            "additionalProperties": true,
            "description": "The data, in key:value format",
            "example": {
              "name": "John Doe",
              "email": "johndoe123@supaglue.com",
              "additional_properties": {
                "has_signed_nda": false
              }
            }
          }
        },
        "required": [
          "id",
          "entity",
          "data"
        ]
      },
      "simple_entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "12579e73-8524-4570-9b67-ecbd702c6b19"
          },
          "name": {
            "type": "string",
            "example": "ApplicationContact"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "standard_object_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "standard_object_name": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "additional_fields": {
                "type": "object",
                "additionalProperties": true,
                "description": "Any data that is not part of the Schema itself but is mapped by the customer when `allow_additional_field_mappings` is `true` on the Schema."
              }
            },
            "additionalProperties": true,
            "description": "The data, in key:value format"
          }
        },
        "required": [
          "id",
          "standard_object_name",
          "data"
        ]
      },
      "custom_object_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_object_id": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "properties": {
              "additional_fields": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "custom_object_id",
          "data"
        ],
        "example": {
          "id": "001Fn00023f8oYYIA0",
          "custom_object_id": "Account",
          "data": {
            "Name": "Acme Corp",
            "Description": "We create the best embedded integration platforms."
          }
        }
      },
      "create_update_entity_record": {
        "type": "object",
        "additionalProperties": true,
        "description": "The data (in key:value format) that will be used to create or update an Entity Record."
      },
      "created_entity_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "42579e73-8524-4570-9b67-ecbd702c6b15"
          },
          "entity": {
            "$ref": "#/components/schemas/simple_entity"
          }
        },
        "required": [
          "id",
          "entity"
        ]
      },
      "create_update_standard_object_record": {
        "type": "object",
        "additionalProperties": true,
        "description": "The data (in key:value format) that will be used to create or update an Standard Object Record."
      },
      "created_standard_object_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "standard_object_name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "standard_object_name"
        ]
      },
      "create_update_custom_object_record": {
        "type": "object",
        "additionalProperties": true
      },
      "created_custom_object_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "custom_object_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "custom_object_id"
        ]
      },
      "create_update_association": {
        "type": "object",
        "properties": {
          "association_type_id": {
            "type": "string"
          },
          "source_record": {
            "$ref": "#/components/schemas/simple_entity_record"
          },
          "target_record": {
            "$ref": "#/components/schemas/simple_entity_record"
          }
        },
        "required": [
          "association_type_id",
          "source_record",
          "target_record"
        ]
      },
      "association": {
        "type": "object",
        "properties": {
          "source_record": {
            "$ref": "#/components/schemas/simple_entity_record"
          },
          "target_record": {
            "$ref": "#/components/schemas/simple_entity_record"
          },
          "association_type_id": {
            "type": "string"
          }
        },
        "required": [
          "source_record",
          "target_record",
          "association_type_id"
        ]
      },
      "simple_entity_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "entity_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "entity_id"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "name is a required field on model."
            },
            "problem_type": {
              "type": "string",
              "example": "MISSING_REQUIRED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "irure consectetur"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Missing Required Field"
            }
          },
          "example": [
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "irure consectetur"
              },
              "title": "Missing Required Field"
            },
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "et"
              },
              "title": "Missing Required Field"
            }
          ]
        }
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "An unrecognized field, age, was passed in with request data."
            },
            "problem_type": {
              "type": "string",
              "example": "UNRECOGNIZED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "Lorem ipsum"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Unrecognized Field"
            }
          }
        },
        "example": [
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "Lorem ipsum"
            },
            "title": "Unrecognized Field"
          },
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "in"
            },
            "title": "Unrecognized Field"
          }
        ]
      }
    },
    "parameters": {
      "x-customer-id": {
        "name": "x-customer-id",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "my-customer-1"
        },
        "description": "The customer ID that uniquely identifies the customer in your application",
        "required": true
      },
      "x-provider-name": {
        "name": "x-provider-name",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "salesforce"
        },
        "description": "The provider name",
        "required": true
      }
    }
  }
}