{
  "openapi": "3.0.3",
  "info": {
    "version": "0.13.14",
    "title": "Unified CRM API",
    "contact": {
      "name": "Supaglue",
      "email": "docs@supaglue.com",
      "url": "https://supaglue.com"
    },
    "description": "#### Introduction\n\nWelcome to the Unified Actions API (CRM) documentation. You can use this API to write to third-party providers.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://www.postman.com/supaglue/workspace/supaglue-public/overview)\n\n#### Reading data\nTo read data from third-party providers, refer to the [Managed Syncs](https://docs.supaglue.com/integration-patterns/managed-syncs) feature.\n\n#### Base API URL\n```\nhttps://api.supaglue.io/crm/v2\n```\n"
  },
  "servers": [
    {
      "url": "https://api.supaglue.io/crm/v2",
      "description": "Supaglue API"
    }
  ],
  "paths": {
    "/accounts": {
      "post": {
        "operationId": "createAccount",
        "summary": "Create account",
        "tags": [
          "Accounts"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_account"
                  }
                },
                "required": [
                  "record"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/accounts/{account_id}": {
      "get": {
        "operationId": "getAccount",
        "summary": "Get account",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include_raw_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "addresses": [
                        {
                          "address_type": "BILLING",
                          "city": "San Francisco",
                          "country": "CX",
                          "postal_code": "94107",
                          "state": "CA",
                          "street1": "525 Brannan",
                          "street2": null
                        },
                        {
                          "address_type": "BILLING",
                          "city": "San Francisco",
                          "country": "US",
                          "postal_code": "94107",
                          "state": "CA",
                          "street1": "525 Brannan",
                          "street2": null
                        }
                      ],
                      "description": "Integration API",
                      "id": 1234,
                      "industry": "API's",
                      "last_activity_at": "2022-02-10T00:00:00Z",
                      "name": "Supaglue",
                      "number_of_employees": 276000,
                      "owner_id": "9377fd4d-d420-4e0b-93ea-789078a3eab4",
                      "phone_numbers": [
                        {
                          "phone_number": "+14151234567",
                          "phone_number_type": "mobile"
                        }
                      ],
                      "created_at": "2023-02-27T00:00:00Z",
                      "updated_at": "2023-02-27T00:00:00Z",
                      "website": "https://supaglue.com/"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateAccount",
        "summary": "Update account",
        "tags": [
          "Accounts"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_account"
                  }
                },
                "required": [
                  "record"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "account_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/contacts": {
      "post": {
        "operationId": "createContact",
        "summary": "Create contact",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_contact"
                  }
                },
                "required": [
                  "record"
                ]
              },
              "example": {
                "record": {
                  "first_name": "George",
                  "last_activity_at": "2022-02-10T00:00:00Z",
                  "last_name": "Xing",
                  "account_id": "64571bff-48ea-4469-9fa0-ee1a0bab38bd"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/contacts/{contact_id}": {
      "get": {
        "operationId": "getContact",
        "summary": "Get contact",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include_raw_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateContact",
        "summary": "Update contact",
        "tags": [
          "Contacts"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_contact"
                  }
                },
                "required": [
                  "record"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "record": {
                      "first_name": "George",
                      "last_name": "Xing",
                      "account_id": "0ce05511-adbc-4144-a049-6631c7ea3b04"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "contact_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/leads": {
      "post": {
        "operationId": "createLead",
        "summary": "Create lead",
        "tags": [
          "Leads"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_lead"
                  }
                },
                "required": [
                  "record"
                ]
              },
              "example": {
                "record": {
                  "company": "Supaglue",
                  "first_name": "George",
                  "last_name": "Xing",
                  "lead_source": "API Blogger",
                  "title": "Co-Founder"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/leads/{lead_id}": {
      "get": {
        "operationId": "getLead",
        "summary": "Get lead",
        "tags": [
          "Leads"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include_raw_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Lead",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lead"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateLead",
        "summary": "Update lead",
        "tags": [
          "Leads"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_lead"
                  }
                },
                "required": [
                  "record"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "record": {
                      "company": "Supaglue",
                      "first_name": "George",
                      "last_name": "Xing",
                      "lead_source": "API Blogger",
                      "title": "Co-Founder"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lead updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "lead_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "82de27cb-6f8c-4278-b783-82d1d916eddc"
          }
        }
      ]
    },
    "/opportunities": {
      "post": {
        "operationId": "createOpportunity",
        "summary": "Create opportunity",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_opportunity"
                  }
                },
                "required": [
                  "record"
                ]
              },
              "example": {
                "record": {
                  "amount": 100000,
                  "close_date": "2023-02-27T00:00:00Z",
                  "description": "Wants to use open source unified API for third-party integrations",
                  "name": "Needs Integrations",
                  "stage": "Closed Won",
                  "account_id": "109c88c0-7bf4-4cd8-afbc-b51f9432ca0b"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Opportunity created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "record": {
                      "$ref": "#/components/schemas/created_record"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/opportunities/{opportunity_id}": {
      "get": {
        "operationId": "getOpportunity",
        "summary": "Get opportunity",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include_raw_data"
          }
        ],
        "responses": {
          "200": {
            "description": "Opportunity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/opportunity"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "account": {
                        "id": "a329053d-bf86-4b82-8356-9e897aa7dacc"
                      },
                      "amount": 100000,
                      "close_date": "2023-02-27T00:00:00Z",
                      "description": "Wants to use open source unified API for third-party integrations",
                      "id": 1234,
                      "last_activity_at": "2023-02-27T00:00:00Z",
                      "name": "Needs third-party integrations",
                      "owner": "93b0c2b5-26a8-4b92-b4e5-05d764eb1119",
                      "created_at": "2023-02-27T00:00:00Z",
                      "updated_at": "2023-02-27T00:00:00Z",
                      "stage": "Closed Won"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateOpportunity",
        "summary": "Update opportunity",
        "tags": [
          "Opportunities"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "record": {
                    "$ref": "#/components/schemas/create_update_opportunity"
                  }
                },
                "required": [
                  "record"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opportunity updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "opportunity_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "c9f58083-a370-47b5-ad02-99160ea20372"
          }
        }
      ]
    },
    "/users/{user_id}": {
      "get": {
        "operationId": "getUser",
        "summary": "Get user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/include_raw_data"
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/passthrough": {
      "post": {
        "operationId": "sendPassthroughRequest",
        "tags": [
          "Passthrough"
        ],
        "summary": "Send passthrough request",
        "security": [
          {
            "x-api-key": []
          }
        ],
        "description": "Send request directly to a provider",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to send the request to (do not pass the domain)"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE"
                    ],
                    "example": "GET"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Headers to pass to downstream",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "query": {
                    "type": "object",
                    "description": "Query parameters to pass to downstream",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "description": "Body to pass to downstream (can be string or JSON object)",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "object",
                        "additionalProperties": true
                      }
                    ]
                  }
                },
                "required": [
                  "path",
                  "method"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Passthrough response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The full URL the request was went to",
                      "example": "https://customcrm.com/api/cars"
                    },
                    "status": {
                      "type": "number",
                      "description": "Status code from the downstream",
                      "example": 200
                    },
                    "headers": {
                      "type": "object",
                      "description": "The response headers from the downstream",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "body": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "additionalProperties": true
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": true
                        }
                      ],
                      "description": "The body from the downstream"
                    }
                  },
                  "required": [
                    "url",
                    "status",
                    "headers"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "url": "https://customcrm.com/api/cars",
                      "status": 200,
                      "headers": {
                        "x-requests-limit": 96
                      },
                      "body": []
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "The `Account` Common Object is used to represent a \"company\" in CRMs."
    },
    {
      "name": "Contacts",
      "description": "The `Contact` Common Object is used to represent a \"contact\" in CRMs."
    },
    {
      "name": "Leads",
      "description": "The `Lead` Common Object is used to represent a \"potential customer\" in CRMs."
    },
    {
      "name": "Opportunities",
      "description": "The `Opportunity` Common Object is used to represent a \"deal opportunity\" in CRMs."
    },
    {
      "name": "Users",
      "description": "The `User` Common Object is used to represent a \"user\" that can login to CRMs."
    },
    {
      "name": "Passthrough",
      "description": "Passthrough operations to underlying providers."
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "API key to allow developers to access the API"
      }
    },
    "schemas": {
      "account": {
        "type": "object",
        "properties": {
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Integration API"
          },
          "id": {
            "type": "string",
            "example": 1234
          },
          "industry": {
            "type": "string",
            "nullable": true,
            "example": "API's"
          },
          "last_activity_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Sample Customer"
          },
          "number_of_employees": {
            "type": "integer",
            "nullable": true,
            "example": 276000
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "d8ceb3ff-8b7f-4fa7-b8de-849292f6ca69"
          },
          "owner": {
            "$ref": "#/components/schemas/user"
          },
          "phone_numbers": {
            "$ref": "#/components/schemas/phone_numbers"
          },
          "lifecycle_stage": {
            "$ref": "#/components/schemas/lifecycle_stage"
          },
          "website": {
            "type": "string",
            "nullable": true,
            "example": "https://supaglue.com/"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          }
        },
        "required": [
          "addresses",
          "description",
          "id",
          "industry",
          "last_activity_at",
          "name",
          "number_of_employees",
          "owner_id",
          "phone_numbers",
          "website",
          "lifecycle_stage",
          "created_at",
          "updated_at",
          "is_deleted",
          "last_modified_at"
        ]
      },
      "create_update_account": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Integration API"
          },
          "industry": {
            "type": "string",
            "nullable": true,
            "example": "API's"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Sample Customer"
          },
          "number_of_employees": {
            "type": "integer",
            "nullable": true,
            "example": 276000
          },
          "website": {
            "type": "string",
            "nullable": true,
            "example": "https://supaglue.com/"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "phone_numbers": {
            "$ref": "#/components/schemas/phone_numbers"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "9f3e97fd-4d5d-4efc-959d-bbebfac079f5"
          },
          "lifecycle_stage": {
            "$ref": "#/components/schemas/lifecycle_stage"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/custom_fields"
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "nullable": true,
            "example": "fd089246-09b1-4e3b-a60a-7a76314bbcce"
          },
          "account": {
            "$ref": "#/components/schemas/account"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "23e640fe-6105-4a11-a636-3aa6b6c6e762"
          },
          "owner": {
            "$ref": "#/components/schemas/user"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "email_addresses": {
            "$ref": "#/components/schemas/email_addresses"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "example": "George"
          },
          "id": {
            "type": "string",
            "example": 54312
          },
          "last_activity_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "example": "Xing"
          },
          "phone_numbers": {
            "$ref": "#/components/schemas/phone_numbers"
          },
          "lifecycle_stage": {
            "$ref": "#/components/schemas/lifecycle_stage"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "raw_data": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "required": [
          "account_id",
          "owner_id",
          "description",
          "id",
          "addresses",
          "email_addresses",
          "first_name",
          "last_activity_at",
          "last_name",
          "phone_numbers",
          "lifecycle_stage",
          "created_at",
          "updated_at",
          "is_deleted",
          "last_modified_at"
        ]
      },
      "create_update_contact": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": true,
            "example": "George"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "example": "Xing"
          },
          "account_id": {
            "type": "string",
            "nullable": true,
            "example": "64571bff-48ea-4469-9fa0-ee1a0bab38bd"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "email_addresses": {
            "$ref": "#/components/schemas/email_addresses"
          },
          "phone_numbers": {
            "$ref": "#/components/schemas/phone_numbers"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "9f3e97fd-4d5d-4efc-959d-bbebfac079f5"
          },
          "lifecycle_stage": {
            "$ref": "#/components/schemas/lifecycle_stage"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/custom_fields"
          }
        }
      },
      "lead": {
        "type": "object",
        "properties": {
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "company": {
            "type": "string",
            "nullable": true,
            "example": "Supaglue"
          },
          "converted_account_id": {
            "type": "string",
            "nullable": true,
            "example": "88cc44ca-7a34-4e8b-b0da-51c3aae34daf"
          },
          "converted_account": {
            "$ref": "#/components/schemas/account"
          },
          "converted_contact_id": {
            "type": "string",
            "nullable": true,
            "example": "8c8de778-a219-4d6c-848c-1d57b52149f6"
          },
          "converted_contact": {
            "$ref": "#/components/schemas/contact"
          },
          "converted_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-27T00:00:00Z"
          },
          "email_addresses": {
            "$ref": "#/components/schemas/email_addresses"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "example": "George"
          },
          "id": {
            "type": "string",
            "example": 54312
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "example": "Xing"
          },
          "lead_source": {
            "type": "string",
            "nullable": true,
            "example": "API Blogger"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "62e5e0f7-becd-4ae2-be82-8b4e1d5ed8a2"
          },
          "owner": {
            "$ref": "#/components/schemas/user"
          },
          "phone_numbers": {
            "$ref": "#/components/schemas/phone_numbers"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "example": "Co-Founder"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-10T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-10T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          }
        },
        "required": [
          "addresses",
          "company",
          "converted_account_id",
          "converted_contact_id",
          "converted_date",
          "id",
          "last_name",
          "lead_source",
          "owner_id",
          "phone_numbers",
          "title",
          "created_at",
          "updated_at",
          "is_deleted",
          "last_modified_at"
        ]
      },
      "create_update_lead": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string",
            "nullable": true,
            "example": "Supaglue"
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "example": "George"
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "example": "Xing"
          },
          "lead_source": {
            "type": "string",
            "nullable": true,
            "example": "API Blogger"
          },
          "title": {
            "type": "string",
            "example": "Co-Founder"
          },
          "email_addresses": {
            "$ref": "#/components/schemas/email_addresses"
          },
          "addresses": {
            "$ref": "#/components/schemas/addresses"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "9f3e97fd-4d5d-4efc-959d-bbebfac079f5"
          },
          "converted_contact_id": {
            "type": "string",
            "nullable": true,
            "example": "ad43955d-2b27-4ec3-b38a-0ca07a76d43b"
          },
          "converted_account_id": {
            "type": "string",
            "nullable": true,
            "example": "2e1e6813-0459-47f5-ad4c-3d137c0e1fdd"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/custom_fields"
          }
        }
      },
      "opportunity": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "nullable": true,
            "example": "fd089246-09b1-4e3b-a60a-7a76314bbcce"
          },
          "account": {
            "$ref": "#/components/schemas/account"
          },
          "amount": {
            "type": "integer",
            "nullable": true,
            "example": 100000
          },
          "close_date": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-27T00:00:00Z"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Wants to use open source unified API for third-party integrations"
          },
          "id": {
            "type": "string",
            "example": 54312
          },
          "last_activity_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-27T00:00:00Z"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Needs third-party integrations"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "d8ceb3ff-8b7f-4fa7-b8de-849292f6ca69"
          },
          "owner": {
            "$ref": "#/components/schemas/user"
          },
          "pipeline": {
            "type": "string",
            "nullable": true
          },
          "stage": {
            "type": "string",
            "nullable": true,
            "example": "Closed Won"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "example": "OPEN"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-27T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2023-02-27T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          }
        },
        "required": [
          "account_id",
          "amount",
          "description",
          "id",
          "last_activity_at",
          "name",
          "owner_id",
          "stage",
          "status",
          "pipeline",
          "created_at",
          "updated_at",
          "is_deleted",
          "last_modified_at"
        ]
      },
      "user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": 54312
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "George Xing"
          },
          "email": {
            "type": "string",
            "nullable": true,
            "example": "george@supaglue.com"
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          },
          "is_deleted": {
            "type": "boolean",
            "example": false
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time",
            "example": "2022-02-27T00:00:00Z"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "is_active",
          "created_at",
          "updated_at",
          "is_deleted",
          "last_modified_at"
        ]
      },
      "create_update_opportunity": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "nullable": true,
            "example": 100000
          },
          "close_date": {
            "type": "string",
            "nullable": true,
            "example": "2022-02-10T00:00:00Z"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Wants to use open source unified API for third-party integrations"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "example": "Needs Integrations"
          },
          "stage": {
            "type": "string",
            "example": "Closed Won"
          },
          "account_id": {
            "type": "string",
            "nullable": true,
            "example": "64571bff-48ea-4469-9fa0-ee1a0bab38bd"
          },
          "owner_id": {
            "type": "string",
            "nullable": true,
            "example": "9f3e97fd-4d5d-4efc-959d-bbebfac079f5"
          },
          "pipeline": {
            "type": "string",
            "nullable": true
          },
          "custom_fields": {
            "$ref": "#/components/schemas/custom_fields"
          }
        }
      },
      "errors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "name is a required field on model."
            },
            "problem_type": {
              "type": "string",
              "example": "MISSING_REQUIRED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "irure consectetur"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Missing Required Field"
            }
          },
          "example": [
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "irure consectetur"
              },
              "title": "Missing Required Field"
            },
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "et"
              },
              "title": "Missing Required Field"
            }
          ]
        }
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "An unrecognized field, age, was passed in with request data."
            },
            "problem_type": {
              "type": "string",
              "example": "UNRECOGNIZED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "Lorem ipsum"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Unrecognized Field"
            }
          }
        },
        "example": [
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "Lorem ipsum"
            },
            "title": "Unrecognized Field"
          },
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "in"
            },
            "title": "Unrecognized Field"
          }
        ]
      },
      "created_record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "addresses": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "address_type": {
              "type": "string",
              "enum": [
                "primary",
                "mailing",
                "other",
                "billing",
                "shipping"
              ]
            },
            "city": {
              "type": "string",
              "nullable": true,
              "example": "San Francisco"
            },
            "country": {
              "type": "string",
              "nullable": true,
              "example": "USA"
            },
            "postal_code": {
              "type": "string",
              "nullable": true,
              "example": "94107"
            },
            "state": {
              "type": "string",
              "nullable": true,
              "example": "CA"
            },
            "street_1": {
              "type": "string",
              "nullable": true,
              "example": "525 Brannan"
            },
            "street_2": {
              "type": "string",
              "nullable": true,
              "example": null
            }
          },
          "required": [
            "address_type",
            "city",
            "country",
            "postal_code",
            "state",
            "street_1",
            "street_2"
          ]
        },
        "example": [
          {
            "address_type": "shipping",
            "city": "San Francisco",
            "country": "US",
            "postal_code": "94107",
            "state": "CA",
            "street_1": "525 Brannan",
            "street_2": null
          }
        ]
      },
      "email_addresses": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email_address": {
              "type": "string",
              "example": "hello@supaglue.com"
            },
            "email_address_type": {
              "type": "string",
              "enum": [
                "primary",
                "work",
                "other"
              ]
            }
          },
          "required": [
            "email_address",
            "email_address_type"
          ]
        },
        "example": [
          {
            "email_address": "hello@supaglue.com",
            "email_address_type": "work"
          }
        ]
      },
      "phone_numbers": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "phone_number": {
              "type": "string",
              "nullable": true,
              "example": "+14151234567"
            },
            "phone_number_type": {
              "type": "string",
              "enum": [
                "primary",
                "mobile",
                "fax",
                "other"
              ]
            }
          },
          "required": [
            "phone_number",
            "phone_number_type"
          ]
        },
        "example": [
          {
            "phone_number": "+14151234567",
            "phone_number_type": "primary"
          }
        ]
      },
      "pagination": {
        "type": "object",
        "properties": {
          "next": {
            "type": "string",
            "nullable": true,
            "example": "eyJpZCI6IjQyNTc5ZjczLTg1MjQtNDU3MC05YjY3LWVjYmQ3MDJjNmIxNCIsInJldmVyc2UiOmZhbHNlfQ=="
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "example": "eyJpZCI6IjBjZDhmYmZkLWU5NmQtNDEwZC05ZjQxLWIwMjU1YjdmNGI4NyIsInJldmVyc2UiOnRydWV9"
          },
          "total_count": {
            "type": "number",
            "example": 100
          }
        },
        "required": [
          "next",
          "previous",
          "total_count"
        ]
      },
      "custom_fields": {
        "type": "object",
        "additionalProperties": true,
        "description": "Custom properties to be inserted that are not covered by the common object. Object keys must match exactly to the corresponding provider API."
      },
      "equals_filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "equals"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "contains_filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "contains"
            ]
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "filter": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/equals_filter"
          },
          {
            "$ref": "#/components/schemas/contains_filter"
          }
        ]
      },
      "lifecycle_stage": {
        "type": "string",
        "nullable": true,
        "enum": [
          "subscriber",
          "lead",
          "marketingqualifiedlead",
          "salesqualifiedlead",
          "opportunity",
          "customer",
          "evangelist",
          "other"
        ]
      }
    },
    "parameters": {
      "include_deleted_data": {
        "name": "include_deleted_data",
        "in": "query",
        "schema": {
          "type": "boolean",
          "example": true
        },
        "description": "Whether to include data that was deleted in providers."
      },
      "include_raw_data": {
        "name": "include_raw_data",
        "in": "query",
        "schema": {
          "type": "boolean",
          "example": true
        },
        "description": "Whether to include raw data fetched from the 3rd party provider."
      },
      "created_after": {
        "name": "created_after",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2023-02-23T00:00:00.000Z"
        },
        "description": "If provided, will only return objects created after this datetime"
      },
      "created_before": {
        "name": "created_before",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2023-02-23T00:00:00.000Z"
        },
        "description": "If provided, will only return objects created before this datetime"
      },
      "modified_after": {
        "name": "modified_after",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2023-02-23T00:00:00.000Z"
        },
        "description": "If provided, will only return objects modified after this datetime"
      },
      "modified_before": {
        "name": "modified_before",
        "in": "query",
        "schema": {
          "type": "string",
          "format": "date-time",
          "example": "2023-02-23T00:00:00.000Z"
        },
        "description": "If provided, will only return objects modified before this datetime"
      },
      "cursor": {
        "name": "cursor",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
        },
        "description": "The pagination cursor value"
      },
      "page_size": {
        "name": "page_size",
        "in": "query",
        "schema": {
          "type": "string",
          "example": "3804695"
        },
        "description": "Number of results to return per page"
      },
      "x-customer-id": {
        "name": "x-customer-id",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "my-customer-1"
        },
        "description": "The customer ID that uniquely identifies the customer in your application",
        "required": true
      },
      "x-provider-name": {
        "name": "x-provider-name",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "salesforce"
        },
        "description": "The provider name",
        "required": true
      }
    }
  }
}