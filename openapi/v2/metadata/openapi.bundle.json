{
  "openapi": "3.0.3",
  "info": {
    "version": "0.13.1",
    "title": "Metadata API",
    "contact": {
      "name": "Supaglue",
      "email": "docs@supaglue.com",
      "url": "https://supaglue.com"
    },
    "description": "#### Introduction\n\nWelcome to the Metadata API documentation. You can use this API to operate on Object metadata in third-party providers.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://www.postman.com/supaglue/workspace/supaglue-public/overview)\n\n#### Base API URL\n```\nhttps://api.supaglue.io/metadata/v2\n```\n"
  },
  "servers": [
    {
      "url": "https://api.supaglue.io/metadata/v2",
      "description": "Supaglue API"
    }
  ],
  "paths": {
    "/objects/standard": {
      "get": {
        "operationId": "listStandardObjects",
        "summary": "List standardObjects",
        "tags": [
          "StandardObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "StandardObject",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/standard_object"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/objects/custom": {
      "get": {
        "operationId": "listCustomObjects",
        "summary": "List customObjects",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "CustomObject",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/simple_custom_object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createCustomObject",
        "summary": "Create customObject",
        "tags": [
          "CustomObjects"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/create_update_custom_object"
                  }
                },
                "required": [
                  "object"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CustomObject created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "object": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/objects/custom/{custom_object_id}": {
      "get": {
        "operationId": "getCustomObject",
        "summary": "Get customObject",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "CustomObject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom_object"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateCustomObject",
        "summary": "Update customObject",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/create_update_custom_object"
                  }
                },
                "required": [
                  "object"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CustomObject updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "custom_object_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/association-types": {
      "get": {
        "operationId": "getAssociationTypes",
        "tags": [
          "AssociationTypes"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List associationTypes",
        "description": "Get a list of associationTypes",
        "parameters": [
          {
            "name": "source_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "target_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AssociationTypes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/association_type"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createAssociationType",
        "summary": "Create associationType",
        "tags": [
          "AssociationTypes"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_update_association_type"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AssociationType created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "association_type": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/properties": {
      "get": {
        "operationId": "listProperties",
        "summary": "List properties",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "common",
                "standard",
                "custom"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the object for which you want to list properties."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of properties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/property"
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "name": "x-provider-name",
          "in": "header",
          "schema": {
            "type": "string",
            "example": "salesforce"
          },
          "description": "The provider name",
          "required": true
        }
      ]
    }
  },
  "tags": [
    {
      "name": "CustomObjects",
      "description": "A `Custom Object` is an object that is defined by the user."
    },
    {
      "name": "StandardObjects",
      "description": "A `Standard Object` is an object that is available by default in the provider."
    },
    {
      "name": "AssociationTypes",
      "description": "An `Association Type` is a type of association between two entities."
    },
    {
      "name": "Properties",
      "description": "A `Property` is a field in a Provider Object."
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "API key to allow developers to access the API"
      }
    },
    "schemas": {
      "property": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The name of the property as it appears in the API.",
            "example": "first_name"
          },
          "label": {
            "type": "string",
            "description": "The human-readable name of the property.",
            "example": "First Name"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "standard_object": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ticket"
          }
        },
        "required": [
          "name"
        ]
      },
      "custom_object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "42579f73-8524-4570-9b67-ecbd702c6b14"
          },
          "name": {
            "type": "string",
            "example": "ticket"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Ticket object"
          },
          "labels": {
            "type": "object",
            "properties": {
              "singular": {
                "type": "string",
                "example": "Ticket"
              },
              "plural": {
                "type": "string",
                "example": "Tickets"
              }
            },
            "required": [
              "singular",
              "plural"
            ]
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_object_field"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "labels",
          "fields"
        ]
      },
      "simple_custom_object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "42579f73-8524-4570-9b67-ecbd702c6b14"
          },
          "name": {
            "type": "string",
            "example": "ticket"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "create_update_custom_object": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ticket",
            "description": "In Salesforce, this must end with `__c`."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Ticket object"
          },
          "labels": {
            "type": "object",
            "properties": {
              "singular": {
                "type": "string",
                "example": "Ticket"
              },
              "plural": {
                "type": "string",
                "example": "Tickets"
              }
            },
            "required": [
              "singular",
              "plural"
            ]
          },
          "primary_field_key_name": {
            "type": "string",
            "description": "The key name of the \"primary\" field. For example, in HubSpot, this is the field that will be displayed for a record in the UI by default. For Salesforce, this will be referenced as the \"Name\" field.",
            "example": "ticket_id"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_object_field"
            }
          }
        },
        "required": [
          "name",
          "description",
          "labels",
          "primary_field_key_name",
          "fields"
        ]
      },
      "create_update_association_type": {
        "type": "object",
        "properties": {
          "source_entity_id": {
            "type": "string"
          },
          "target_entity_id": {
            "type": "string"
          },
          "key_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/association_type_cardinality"
          }
        },
        "required": [
          "source_entity_id",
          "target_entity_id",
          "key_name",
          "display_name",
          "cardinality"
        ]
      },
      "object_type": {
        "type": "string",
        "enum": [
          "common",
          "standard",
          "custom"
        ]
      },
      "association_type_cardinality": {
        "type": "string",
        "enum": [
          "ONE_TO_MANY"
        ]
      },
      "association_type_cardinality_or_unknown": {
        "type": "string",
        "enum": [
          "ONE_TO_MANY",
          "UNKNOWN"
        ]
      },
      "custom_object_field": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "example": "Ticket ID"
          },
          "key_name": {
            "type": "string",
            "example": "ticket_id",
            "description": "In Salesforce, this must end with `__c`."
          },
          "is_required": {
            "type": "boolean",
            "example": false
          },
          "field_type": {
            "type": "string",
            "enum": [
              "string",
              "number"
            ],
            "description": "In Salesforce, when this is set to 'string', the max length will be set to 255 by default. In Salesforce, when it is set to 'number', the precision and scale will be set to 18 and 0, respectively."
          }
        },
        "required": [
          "display_name",
          "key_name",
          "is_required",
          "field_type"
        ]
      },
      "association_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source_entity_id": {
            "type": "string"
          },
          "target_entity_id": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/association_type_cardinality_or_unknown"
          }
        },
        "required": [
          "id",
          "source_entity_id",
          "target_entity_id",
          "display_name",
          "cardinality"
        ]
      },
      "object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "origin_type": {
            "$ref": "#/components/schemas/object_type"
          }
        },
        "required": [
          "id",
          "origin_type"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "name is a required field on model."
            },
            "problem_type": {
              "type": "string",
              "example": "MISSING_REQUIRED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "irure consectetur"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Missing Required Field"
            }
          },
          "example": [
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "irure consectetur"
              },
              "title": "Missing Required Field"
            },
            {
              "detail": "name is a required field on model.",
              "problem_type": "MISSING_REQUIRED_FIELD",
              "source": {
                "pointer": "et"
              },
              "title": "Missing Required Field"
            }
          ]
        }
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "example": "An unrecognized field, age, was passed in with request data."
            },
            "problem_type": {
              "type": "string",
              "example": "UNRECOGNIZED_FIELD"
            },
            "source": {
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "example": "Lorem ipsum"
                }
              }
            },
            "title": {
              "type": "string",
              "example": "Unrecognized Field"
            }
          }
        },
        "example": [
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "Lorem ipsum"
            },
            "title": "Unrecognized Field"
          },
          {
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD",
            "source": {
              "pointer": "in"
            },
            "title": "Unrecognized Field"
          }
        ]
      }
    },
    "parameters": {
      "x-customer-id": {
        "name": "x-customer-id",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "my-customer-1"
        },
        "description": "The customer ID that uniquely identifies the customer in your application",
        "required": true
      },
      "x-provider-name": {
        "name": "x-provider-name",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "salesforce"
        },
        "description": "The provider name",
        "required": true
      }
    }
  }
}