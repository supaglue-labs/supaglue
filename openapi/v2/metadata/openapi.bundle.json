{
  "openapi": "3.0.3",
  "info": {
    "version": "0.13.1",
    "title": "Metadata API",
    "contact": {
      "name": "Supaglue",
      "email": "docs@supaglue.com",
      "url": "https://supaglue.com"
    },
    "description": "#### Introduction\n\nWelcome to the Metadata API documentation for CRM. You can use this API to operate on metadata across multiple third-party providers.\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://www.postman.com/supaglue/workspace/supaglue-public/overview)\n\n#### Base API URL\n```\nhttps://api.supaglue.io/metadata/v2\n```\n"
  },
  "servers": [
    {
      "url": "https://api.supaglue.io/metadata/v2",
      "description": "Supaglue API"
    }
  ],
  "paths": {
    "/objects/standard": {
      "get": {
        "operationId": "listStandardObjects",
        "summary": "List standardObjects",
        "tags": [
          "StandardObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "StandardObject",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/standard_object"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/objects/custom": {
      "get": {
        "operationId": "listCustomObjects",
        "summary": "List customObjects",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "CustomObject",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/simple_custom_object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createCustomObject",
        "summary": "Create customObject",
        "tags": [
          "CustomObjects"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/create_update_custom_object"
                  }
                },
                "required": [
                  "object"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "CustomObject created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "object": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/objects/custom/{custom_object_id}": {
      "get": {
        "operationId": "getCustomObject",
        "summary": "Get customObject",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "CustomObject",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom_object"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateCustomObject",
        "summary": "Update customObject",
        "tags": [
          "CustomObjects"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "$ref": "#/components/schemas/create_update_custom_object"
                  }
                },
                "required": [
                  "object"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "CustomObject updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        },
        {
          "name": "custom_object_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "example": "0258cbc6-6020-430a-848e-aafacbadf4ae"
          }
        }
      ]
    },
    "/association-types": {
      "get": {
        "operationId": "getAssociationTypes",
        "deprecated": true,
        "tags": [
          "AssociationTypes"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "summary": "List associationTypes",
        "description": "Get a list of associationTypes",
        "parameters": [
          {
            "name": "source_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "target_entity_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "AssociationTypes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/association_type"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createAssociationType",
        "deprecated": true,
        "summary": "Create associationType",
        "tags": [
          "AssociationTypes"
        ],
        "parameters": [],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_update_association_type"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "AssociationType created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "$ref": "#/components/schemas/errors"
                    },
                    "association_type": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "warnings": {
                      "$ref": "#/components/schemas/warnings"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/components/parameters/x-provider-name"
        }
      ]
    },
    "/properties": {
      "get": {
        "operationId": "listPropertiesDeprecated",
        "summary": "List properties (deprecated)",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "standard",
                "custom"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the object for which you want to list properties."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of properties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/property_deprecated"
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "name": "x-provider-name",
          "in": "header",
          "schema": {
            "type": "string",
            "example": "salesforce"
          },
          "description": "The provider name",
          "required": true
        }
      ]
    },
    "/properties/{object_name}": {
      "get": {
        "operationId": "listProperties",
        "summary": "List properties",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "responses": {
          "200": {
            "description": "List properties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "properties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/property_unified"
                      }
                    }
                  },
                  "required": [
                    "properties"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createProperty",
        "summary": "Create property",
        "description": "Creates a custom property in the provider and registers it in Supaglue.\n",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/create_property"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/property_unified"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/paths/~1properties/parameters/1"
        },
        {
          "name": "object_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "The name of the object.",
            "example": "contact"
          }
        }
      ]
    },
    "/properties/{object_name}/register": {
      "post": {
        "operationId": "registerProperty",
        "summary": "Register Property",
        "description": "Registers a custom property in Supaglue.\nThis may be useful for custom properties that were already created in the Customer's provider.\nE.g. a custom field has some machine ID for a particular customer that you want to map to `my_custom_field`.\n",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The machine name of the property as it appears in the third-party Provider.",
                    "example": "FirstName"
                  },
                  "name": {
                    "type": "string",
                    "description": "The unique identifier to be used to refer to this property across all customers. Supaglue will use this to appropriately map to the provider field ID.\n",
                    "example": "ticketId"
                  }
                },
                "required": [
                  "name",
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register a property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/property_unified"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/paths/~1properties/parameters/1"
        },
        {
          "name": "object_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "The name of the object.",
            "example": "contact"
          }
        }
      ]
    },
    "/properties/{object_name}/{property_name}": {
      "get": {
        "operationId": "getProperty",
        "summary": "Get property",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/property_unified"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateProperty",
        "summary": "Update property",
        "description": "Update custom property",
        "tags": [
          "Properties"
        ],
        "security": [
          {
            "x-api-key": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/update_property"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create a property",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/property_unified"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/x-customer-id"
        },
        {
          "$ref": "#/paths/~1properties/parameters/1"
        },
        {
          "name": "object_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "The name of the object.",
            "example": "contact"
          }
        },
        {
          "name": "property_name",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "The name of the property.",
            "example": "contact"
          }
        }
      ]
    }
  },
  "tags": [
    {
      "name": "CustomObjects",
      "description": "A `Custom Object` is an object that is defined by the user."
    },
    {
      "name": "StandardObjects",
      "description": "A `Standard Object` is an object that is available by default in the provider."
    },
    {
      "name": "AssociationTypes",
      "description": "An `Association Type` is a type of association between two entities."
    },
    {
      "name": "Properties",
      "description": "A `Property` is a field in a Provider Object."
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "API key to allow developers to access the API"
      }
    },
    "schemas": {
      "property_deprecated": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The machine name of the property as it appears in the third-party Provider.",
            "example": "FirstName"
          },
          "label": {
            "type": "string",
            "description": "The human-readable name of the property as provided by the third-party Provider.",
            "example": "First Name"
          },
          "type": {
            "type": "string",
            "description": "The type of the property as provided by the third-party Provider. These types are not unified by Supaglue. For Intercom, this is string, integer, boolean, or object. For Outreach, this is integer, boolean, number, array, or string.",
            "example": "string"
          },
          "raw_details": {
            "type": "object",
            "description": "The raw details of the property as provided by the third-party Provider, if available.",
            "additionalProperties": true,
            "example": {}
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "property_unified": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The machine name of the property as it appears in the third-party Provider.",
            "example": "FirstName"
          },
          "custom_name": {
            "type": "string",
            "description": "Only applicable for custom properties. This represents the unique identifier that can be used to refer to this property across all customers."
          },
          "label": {
            "type": "string",
            "description": "The human-readable name of the property as provided by the third-party Provider.",
            "example": "First Name"
          },
          "description": {
            "type": "string",
            "description": "A description of the field."
          },
          "is_required": {
            "type": "boolean",
            "example": false
          },
          "group_name": {
            "type": "string",
            "example": "supaglue",
            "description": "Only applicable for Hubspot. If specified, Supaglue will attempt to attach the field to this group if it exists, or create it if it doesn't."
          },
          "type": {
            "$ref": "#/components/schemas/property_type"
          },
          "precision": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 18."
          },
          "scale": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 0."
          },
          "options": {
            "type": "array",
            "description": "The list of options for a picklist/multipicklist field.",
            "items": {
              "$ref": "#/components/schemas/picklist_option"
            }
          },
          "raw_details": {
            "type": "object",
            "description": "The raw details of the property as provided by the third-party Provider, if available.",
            "additionalProperties": true,
            "example": {}
          }
        },
        "required": [
          "id",
          "label",
          "type"
        ]
      },
      "property_type": {
        "type": "string",
        "enum": [
          "text",
          "textarea",
          "number",
          "picklist",
          "multipicklist",
          "date",
          "datetime",
          "boolean"
        ],
        "description": "Type of the field.\nSupport:\n\n  | Field              | Hubspot (type/fieldType) | Salesforce     | Pipedrive     |\n  | ------------------ | ------------------------ | -------------- | ------------- |\n  | text               | string/text              | Text           | varchar_auto  |\n  | textarea           | string/textarea          | Longtextarea   | text          |\n  | number             | number/number            | Number         | double        |\n  | picklist           | enumeration/select       | Picklist       | enum          |\n  | multipicklist      | enumeration/checkbox     | Multipicklist  | set           |\n  | date               | date/date                | Date           | date          |\n  | datetime           | datetime/date            | Datetime       | date          |\n  | boolean            | boolean/booleancheckbox  | Checkbox       | enum          |\n"
      },
      "picklist_option": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Option 1"
          },
          "value": {
            "type": "string",
            "example": "option_1"
          },
          "description": {
            "type": "string",
            "description": "A description of this option."
          },
          "hidden": {
            "type": "boolean",
            "description": "Defaults to false."
          }
        },
        "required": [
          "label",
          "value"
        ]
      },
      "create_property": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The unique identifier to be used to refer to this property across all customers. Supaglue will use this to appropriately map to the provider field ID.\n",
            "example": "ticketId"
          },
          "label": {
            "type": "string",
            "description": "The human-readable name of the property as provided by the third-party Provider.",
            "example": "First Name"
          },
          "description": {
            "type": "string",
            "description": "A description of the field."
          },
          "is_required": {
            "type": "boolean",
            "description": "Defaults to false.",
            "example": false
          },
          "group_name": {
            "type": "string",
            "example": "supaglue",
            "description": "Only applicable for Hubspot. If specified, Supaglue will attempt to attach the field to this group if it exists, or create it if it doesn't."
          },
          "type": {
            "$ref": "#/components/schemas/property_type"
          },
          "precision": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 18."
          },
          "scale": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 0."
          },
          "options": {
            "type": "array",
            "description": "The list of options for a picklist/multipicklist field.",
            "items": {
              "$ref": "#/components/schemas/picklist_option"
            }
          }
        },
        "required": [
          "name",
          "label",
          "type"
        ]
      },
      "update_property": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The human-readable name of the property as provided by the third-party Provider.",
            "example": "First Name"
          },
          "description": {
            "type": "string",
            "description": "A description of the field."
          },
          "is_required": {
            "type": "boolean",
            "description": "Defaults to false.",
            "example": false
          },
          "group_name": {
            "type": "string",
            "example": "supaglue",
            "description": "Only applicable for Hubspot. If specified, Supaglue will attempt to attach the field to this group if it exists, or create it if it doesn't."
          },
          "type": {
            "$ref": "#/components/schemas/property_type"
          },
          "precision": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 18."
          },
          "scale": {
            "type": "number",
            "description": "Only applicable in Salesforce. If not given, will default to 0."
          },
          "options": {
            "type": "array",
            "description": "The list of options for a picklist/multipicklist field.",
            "items": {
              "$ref": "#/components/schemas/picklist_option"
            }
          }
        }
      },
      "standard_object": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ticket"
          }
        },
        "required": [
          "name"
        ]
      },
      "custom_object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "42579f73-8524-4570-9b67-ecbd702c6b14"
          },
          "name": {
            "type": "string",
            "example": "ticket"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Ticket object"
          },
          "labels": {
            "type": "object",
            "properties": {
              "singular": {
                "type": "string",
                "example": "Ticket"
              },
              "plural": {
                "type": "string",
                "example": "Tickets"
              }
            },
            "required": [
              "singular",
              "plural"
            ]
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_object_field"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "labels",
          "fields"
        ]
      },
      "simple_custom_object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "42579f73-8524-4570-9b67-ecbd702c6b14"
          },
          "name": {
            "type": "string",
            "example": "ticket"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "create_update_custom_object": {
        "type": "object",
        "properties": {
          "suggested_name": {
            "type": "string",
            "example": "ticket",
            "description": "The name you'd like to use for the custom object. For Salesforce, we will append `__c` if necessary. For HubSpot, it will pass through as-is."
          },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Ticket object"
          },
          "labels": {
            "type": "object",
            "properties": {
              "singular": {
                "type": "string",
                "example": "Ticket"
              },
              "plural": {
                "type": "string",
                "example": "Tickets"
              }
            },
            "required": [
              "singular",
              "plural"
            ]
          },
          "primary_field_key_name": {
            "type": "string",
            "description": "The key name of the \"primary\" field. For example, in HubSpot, this is the field that will be displayed for a record in the UI by default. For Salesforce, this will be referenced as the \"Name\" field.",
            "example": "ticket_id"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/custom_object_field"
            }
          }
        },
        "required": [
          "suggested_name",
          "description",
          "labels",
          "primary_field_key_name",
          "fields"
        ]
      },
      "create_update_association_type": {
        "type": "object",
        "properties": {
          "source_entity_id": {
            "type": "string"
          },
          "target_entity_id": {
            "type": "string"
          },
          "suggested_key_name": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/association_type_cardinality"
          }
        },
        "required": [
          "source_entity_id",
          "target_entity_id",
          "suggested_key_name",
          "display_name",
          "cardinality"
        ]
      },
      "object_type": {
        "type": "string",
        "enum": [
          "common",
          "standard",
          "custom"
        ]
      },
      "association_type_cardinality": {
        "type": "string",
        "enum": [
          "ONE_TO_MANY"
        ]
      },
      "association_type_cardinality_or_unknown": {
        "type": "string",
        "enum": [
          "ONE_TO_MANY",
          "UNKNOWN"
        ]
      },
      "custom_object_field": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string",
            "example": "Ticket ID"
          },
          "key_name": {
            "type": "string",
            "example": "ticket_id",
            "description": "In Salesforce, this must end with `__c`."
          },
          "is_required": {
            "type": "boolean",
            "example": false
          },
          "field_type": {
            "type": "string",
            "enum": [
              "string",
              "number"
            ],
            "description": "In Salesforce, when this is set to 'string', the max length will be set to 255 by default. In Salesforce, when it is set to 'number', the precision and scale will be set to 18 and 0, respectively."
          }
        },
        "required": [
          "display_name",
          "key_name",
          "is_required",
          "field_type"
        ]
      },
      "association_type": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source_entity_id": {
            "type": "string"
          },
          "target_entity_id": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/association_type_cardinality_or_unknown"
          }
        },
        "required": [
          "id",
          "source_entity_id",
          "target_entity_id",
          "display_name",
          "cardinality"
        ]
      },
      "object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "origin_type": {
            "$ref": "#/components/schemas/object_type"
          }
        },
        "required": [
          "id",
          "origin_type"
        ]
      },
      "errors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "description": "The full error message from the remote Provider. The schema and level of detail will vary by Provider.",
              "example": "{\"code\":400,\"body\":{\"status\":\"error\",\"message\":\"Property values were not valid: [{\\\\\"isValid\\\\\":false,\\\\\"message\\\\\":\\\\\"Property \\\\\\\\\\\\\"__about_us\\\\\\\\\\\\\" does not exist\\\\\",\\\\\"error\\\\\":\\\\\"PROPERTY_DOESNT_EXIST\\\\\",\\\\\"name\\\\\":\\\\\"__about_us\\\\\",\\\\\"localizedErrorMessage\\\\\":\\\\\"Property \\\\\\\\\\\\\"__about_us\\\\\\\\\\\\\" does not exist\\\\\"}]\",\"correlationId\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"category\":\"VALIDATION_ERROR\"},\"headers\":{\"access-control-allow-credentials\":\"false\",\"cf-cache-status\":\"DYNAMIC\",\"cf-ray\":\"8053d17b9dae9664-SJC\",\"connection\":\"close\",\"content-length\":\"361\",\"content-type\":\"application/json;charset=utf-8\",\"date\":\"Mon, 11 Sep 2023 23:51:22 GMT\",\"nel\":\"{\\\\\"success_fraction\\\\\":0.01,\\\\\"report_to\\\\\":\\\\\"cf-nel\\\\\",\\\\\"max_age\\\\\":604800}\",\"report-to\":\"{\\\\\"endpoints\\\\\":[{\\\\\"url\\\\\":\\\\\"https://a.nel.cloudflare.com/report/v3?s=FgwuXObO%2Fz6ahUJKsxjDLaXTWjooJ8tB0w4%2B%2BKaulGStx0FGkn1PoJoOx2KrFMfihzNdfAqikq7CmgbdlmwKB8hkmp3eTb68qpg10LXFlRgiSqRhbWM7yYSfo8CXmPBc\\\\\"}],\\\\\"group\\\\\":\\\\\"cf-nel\\\\\",\\\\\"max_age\\\\\":604800}\",\"server\":\"cloudflare\",\"strict-transport-security\":\"max-age=31536000; includeSubDomains; preload\",\"vary\":\"origin, Accept-Encoding\",\"x-content-type-options\":\"nosniff\",\"x-envoy-upstream-service-time\":\"91\",\"x-evy-trace-listener\":\"listener_https\",\"x-evy-trace-route-configuration\":\"listener_https/all\",\"x-evy-trace-route-service-name\":\"envoyset-translator\",\"x-evy-trace-served-by-pod\":\"iad02/hubapi-td/envoy-proxy-6c94986c56-9xsh2\",\"x-evy-trace-virtual-host\":\"all\",\"x-hubspot-correlation-id\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"x-hubspot-ratelimit-interval-milliseconds\":\"10000\",\"x-hubspot-ratelimit-max\":\"100\",\"x-hubspot-ratelimit-remaining\":\"99\",\"x-hubspot-ratelimit-secondly\":\"10\",\"x-hubspot-ratelimit-secondly-remaining\":\"9\",\"x-request-id\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"x-trace\":\"2B1B4386362759B6A4C34802AD168B803DDC1BE770000000000000000000\"}}\n"
            },
            "problem_type": {
              "type": "string",
              "description": "The Supaglue error code associated with the error.",
              "example": "MISSING_REQUIRED_FIELD"
            },
            "title": {
              "type": "string",
              "description": "A brief description of the error. The schema and type of message will vary by Provider.",
              "example": "Property values were not valid\n"
            }
          },
          "example": [
            {
              "detail": "{\"code\":400,\"body\":{\"status\":\"error\",\"message\":\"Property values were not valid: [{\\\\\"isValid\\\\\":false,\\\\\"message\\\\\":\\\\\"Property \\\\\\\\\\\\\"__about_us\\\\\\\\\\\\\" does not exist\\\\\",\\\\\"error\\\\\":\\\\\"PROPERTY_DOESNT_EXIST\\\\\",\\\\\"name\\\\\":\\\\\"__about_us\\\\\",\\\\\"localizedErrorMessage\\\\\":\\\\\"Property \\\\\\\\\\\\\"__about_us\\\\\\\\\\\\\" does not exist\\\\\"}]\",\"correlationId\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"category\":\"VALIDATION_ERROR\"},\"headers\":{\"access-control-allow-credentials\":\"false\",\"cf-cache-status\":\"DYNAMIC\",\"cf-ray\":\"8053d17b9dae9664-SJC\",\"connection\":\"close\",\"content-length\":\"361\",\"content-type\":\"application/json;charset=utf-8\",\"date\":\"Mon, 11 Sep 2023 23:51:22 GMT\",\"nel\":\"{\\\\\"success_fraction\\\\\":0.01,\\\\\"report_to\\\\\":\\\\\"cf-nel\\\\\",\\\\\"max_age\\\\\":604800}\",\"report-to\":\"{\\\\\"endpoints\\\\\":[{\\\\\"url\\\\\":\\\\\"https://a.nel.cloudflare.com/report/v3?s=FgwuXObO%2Fz6ahUJKsxjDLaXTWjooJ8tB0w4%2B%2BKaulGStx0FGkn1PoJoOx2KrFMfihzNdfAqikq7CmgbdlmwKB8hkmp3eTb68qpg10LXFlRgiSqRhbWM7yYSfo8CXmPBc\\\\\"}],\\\\\"group\\\\\":\\\\\"cf-nel\\\\\",\\\\\"max_age\\\\\":604800}\",\"server\":\"cloudflare\",\"strict-transport-security\":\"max-age=31536000; includeSubDomains; preload\",\"vary\":\"origin, Accept-Encoding\",\"x-content-type-options\":\"nosniff\",\"x-envoy-upstream-service-time\":\"91\",\"x-evy-trace-listener\":\"listener_https\",\"x-evy-trace-route-configuration\":\"listener_https/all\",\"x-evy-trace-route-service-name\":\"envoyset-translator\",\"x-evy-trace-served-by-pod\":\"iad02/hubapi-td/envoy-proxy-6c94986c56-9xsh2\",\"x-evy-trace-virtual-host\":\"all\",\"x-hubspot-correlation-id\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"x-hubspot-ratelimit-interval-milliseconds\":\"10000\",\"x-hubspot-ratelimit-max\":\"100\",\"x-hubspot-ratelimit-remaining\":\"99\",\"x-hubspot-ratelimit-secondly\":\"10\",\"x-hubspot-ratelimit-secondly-remaining\":\"9\",\"x-request-id\":\"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2\",\"x-trace\":\"2B1B4386362759B6A4C34802AD168B803DDC1BE770000000000000000000\"}}\n",
              "problem_type": "BAD_REQUEST_ERROR",
              "title": "Property values were not valid\n"
            }
          ]
        }
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string"
            },
            "problem_type": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "x-customer-id": {
        "name": "x-customer-id",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "my-customer-1"
        },
        "description": "The customer ID that uniquely identifies the customer in your application",
        "required": true
      },
      "x-provider-name": {
        "name": "x-provider-name",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "salesforce"
        },
        "description": "The provider name",
        "required": true
      }
    }
  }
}