# NOTE: Using 3.1.0 because we want to document webhooks.
# Other than the `webhooks` key, we should not use 3.1.0 features since the validation middleware doesn't support it yet
openapi: 3.1.0
info:
  version: 0.13.7
  title: Management API
  contact:
    name: Supaglue
    email: docs@supaglue.com
    url: 'https://supaglue.com'
  description: |
    #### Introduction

    Welcome to the Management API documentation. You can use this API to manage customer integrations and connections.

    [![Run in Postman](https://run.pstmn.io/button.svg)](https://www.postman.com/supaglue/workspace/supaglue-public/overview)

    #### Base API URL

    ```
    https://api.supaglue.io/mgmt/v2
    ```
# externalDocs:
#   description: Try out our API in Postman!
#   url: 'https://www.postman.com/supaglue/workspace/supaglue-public/overview'
servers:
  - url: 'https://api.supaglue.io/mgmt/v2'
    description: Supaglue API
paths:
  '/customers':
    $ref: paths/customers.yaml
  '/customers/{customer_id}':
    $ref: paths/customers@{customer_id}.yaml
  '/destinations':
    $ref: paths/destinations.yaml
  '/destinations/{destination_id}':
    $ref: paths/destinations@{destination_id}.yaml
  '/field_mappings':
    $ref: paths/field_mappings.yaml
  '/magic_links':
    $ref: paths/magic_links.yaml
  '/magic_links/{magic_link_id}':
    $ref: paths/magic_links@{magic_link_id}.yaml
  '/field_mappings/_update_object':
    $ref: paths/field_mappings@_update_object.yaml
  '/entity_mappings':
    $ref: paths/entity_mappings.yaml
  '/entity_mappings/{entity_id}':
    $ref: paths/entity_mappings@{entity_id}.yaml
  '/schemas':
    $ref: paths/schemas.yaml
  '/schemas/{schema_id}':
    $ref: paths/schemas@{schema_id}.yaml
  '/entities':
    $ref: paths/entities.yaml
  '/entities/{entity_id}':
    $ref: paths/entities@{entity_id}.yaml
  '/providers':
    $ref: paths/providers.yaml
  '/providers/{provider_id}':
    $ref: paths/providers@{provider_id}.yaml
  '/sync_configs':
    $ref: paths/sync_configs.yaml
  '/sync_configs/{sync_config_id}':
    $ref: paths/sync_configs@{sync_config_id}.yaml
  '/customers/{customer_id}/connections':
    $ref: paths/connections.yaml
  '/customers/{customer_id}/connections/_provider_user_id':
    $ref: paths/connections@_provider_user_id.yaml
  '/customers/{customer_id}/connections/{connection_id}':
    $ref: paths/connections@{connection_id}.yaml
  '/syncs':
    $ref: paths/syncs.yaml
  '/syncs/_pause':
    $ref: paths/syncs@_pause.yaml
  '/syncs/_resume':
    $ref: paths/syncs@_resume.yaml
  '/syncs/_trigger':
    $ref: paths/syncs@_trigger.yaml
  '/sync-runs':
    $ref: paths/sync_runs.yaml
tags:
  - name: Customers
    description: A `Customer` represents one of your customers.
  - name: Connections
    description: A `Connection` represents a Customer's connection to a Provider.
  - name: Destinations
    description: A `Destination` is a data store where we write data in your infrastructure.
  - name: Providers
    description: A `Provider` is a third-party SaaS tool we can connect to (e.g. Salesforce).
  - name: Schemas
    description: A [`Schema`](https://docs.supaglue.com/platform/objects/overview#schemas) allows you to normalize fields for customers across a single Provider object. Supaglue uses Schemas for Managed Syncs and Actions API.
  - name: Entities
    description: An [`Entity`](https://docs.supaglue.com/platform/entities/overview) allows you to represent your application data models in Supaglue so customers can map their different Provider objects and fields. Supaglue uses Entities for Managed Syncs and Actions API.
  - name: EntityMappings
    description: An [`Entity Mapping`](https://docs.supaglue.com/platform/entities/overview#entity-mapping) maps an [Entity](https://docs.supaglue.com/platform/entities/overview) to a customer's Provider object and fields. Use Entity Mappings when you use [Entities](https://docs.supaglue.com/platform/entities/overview) as your data model.
  - name: SchemaMappings
    description: A `Schema Mapping` is a mapping between a [Schema](https://docs.supaglue.com/platform/objects/overview#schemas) field and fields in your customer's Provider object.
  - name: SyncConfigs
    description: A `SyncConfig` is a configuration for how to sync your Customers' data from a Provider to a Destination on a schedule.
  - name: Syncs
    description: A `Sync` is a way for a Customer to sync data from a Provider to a Destination on a schedule.
  - name: SyncRuns
    description: A `SyncRun` is a single execution of a Sync at a point in time.
  - name: Webhooks
    description: A `Webhook` is a way for Supaglue to notify you when events have happened.
  - name: Magic Links
    description: A `Magic Link` is a secure URL that allows your customers to connect their accounts to Supaglue.
components:
  securitySchemes:
    x-api-key:
      $ref: ../../common/components/securitySchemes/x-api-key.yaml
  schemas:
    pagination:
      $ref: ../../common/components/schemas/pagination.yaml
    customer:
      $ref: ./components/schemas/objects/customer.yaml
    provider:
      $ref: ./components/schemas/objects/provider.yaml
    destination:
      $ref: ./components/schemas/objects/destination.yaml
    s3_config_safe:
      $ref: ./components/schemas/objects/s3_config_safe.yaml
    postgres_config_safe:
      $ref: ./components/schemas/objects/postgres_config_safe.yaml
    bigquery_config_safe:
      $ref: ./components/schemas/objects/bigquery_config_safe.yaml
    mongodb_config_safe:
      $ref: ./components/schemas/objects/mongodb_config_safe.yaml
    s3_config_at_least_safe:
      $ref: ./components/schemas/objects/s3_config_at_least_safe.yaml
    postgres_config_at_least_safe:
      $ref: ./components/schemas/objects/postgres_config_at_least_safe.yaml
    bigquery_config_at_least_safe:
      $ref: ./components/schemas/objects/bigquery_config_at_least_safe.yaml
    mongodb_config_at_least_safe:
      $ref: ./components/schemas/objects/mongodb_config_at_least_safe.yaml
    s3_config_unsafe:
      $ref: ./components/schemas/objects/s3_config_unsafe.yaml
    postgres_config_unsafe:
      $ref: ./components/schemas/objects/postgres_config_unsafe.yaml
    bigquery_config_unsafe:
      $ref: ./components/schemas/objects/bigquery_config_unsafe.yaml
    mongodb_config_unsafe:
      $ref: ./components/schemas/objects/mongodb_config_unsafe.yaml
    schema:
      $ref: ./components/schemas/objects/schema.yaml
    schema_config:
      $ref: ./components/schemas/objects/schema_config.yaml
    magic_link:
      $ref: ./components/schemas/objects/magic_link.yaml
    create_magic_link:
      $ref: ./components/schemas/create_magic_link.yaml
    entity:
      $ref: ./components/schemas/objects/entity.yaml
    entity_config:
      $ref: ./components/schemas/objects/entity_config.yaml
    objects:
      $ref: ./components/schemas/objects/objects.yaml
    object_field_mappings:
      $ref: ./components/schemas/objects/object_field_mappings.yaml
    merged_field_map:
      $ref: ./components/schemas/objects/merged_field_map.yaml
    update_object_field_mapping:
      $ref: ./components/schemas/update_object_field_mapping.yaml
    object_field_mapping:
      $ref: ./components/schemas/objects/object_field_mapping.yaml
    connection:
      $ref: ./components/schemas/objects/connection.yaml
    category:
      $ref: ./components/schemas/objects/category.yaml
    sync_config:
      $ref: ./components/schemas/objects/sync_config.yaml
    sync_config_data:
      $ref: ./components/schemas/objects/sync_config_data.yaml
    create_provider_config:
      $ref: ./components/schemas/objects/create_provider_config.yaml
    update_provider_config:
      $ref: ./components/schemas/objects/update_provider_config.yaml
    provider_name:
      $ref: ./components/schemas/objects/provider_name.yaml
    provider_name_crm:
      $ref: ./components/schemas/objects/provider_name_crm.yaml
    provider_name_engagement:
      $ref: ./components/schemas/objects/provider_name_engagement.yaml
    provider_name_no_category:
      $ref: ./components/schemas/objects/provider_name_no_category.yaml
    sync:
      $ref: ./components/schemas/objects/sync.yaml
    sync_with_provider_and_customer:
      $ref: ./components/schemas/objects/sync_with_provider_and_customer.yaml
    sync_run:
      $ref: ./components/schemas/objects/sync_run.yaml
    create_update_customer:
      $ref: ./components/schemas/create_update_customer.yaml
    create_provider:
      $ref: ./components/schemas/create_provider.yaml
    update_provider:
      $ref: ./components/schemas/update_provider.yaml
    create_update_schema:
      $ref: ./components/schemas/create_update_schema.yaml
    create_update_entity:
      $ref: ./components/schemas/create_update_entity.yaml
    create_destination:
      $ref: ./components/schemas/create_destination.yaml
    update_destination:
      $ref: ./components/schemas/update_destination.yaml
    create_update_sync_config:
      $ref: ./components/schemas/create_update_sync_config.yaml
    webhook-payload:
      $ref: './components/schemas/webhook-payload.yaml'
    standard_object:
      $ref: ./components/schemas/objects/standard_object.yaml
    standard_or_custom_object:
      $ref: ./components/schemas/objects/standard_or_custom_object.yaml
    provider_entity_mapping:
      $ref: ./components/schemas/objects/provider_entity_mapping.yaml
    connection_entity_mapping:
      $ref: ./components/schemas/objects/connection_entity_mapping.yaml
    merged_entity_mapping:
      $ref: ./components/schemas/objects/merged_entity_mapping.yaml
    entity_field_mapping:
      $ref: ./components/schemas/objects/entity_field_mapping.yaml
  parameters:
    cursor:
      $ref: ../../common/components/parameters/query/cursor.yaml
    page_size:
      $ref: ../../common/components/parameters/query/page_size.yaml
    customer_id:
      $ref: ../../common/components/parameters/query/customer_id.yaml
    provider_name:
      $ref: ../../common/components/parameters/query/provider_name.yaml
    x-provider-name:
      $ref: ../../common/components/parameters/header/x-provider-name.yaml
    x-customer-id:
      $ref: ../../common/components/parameters/header/x-customer-id.yaml
# Some tooling expects x-webhooks, while other tooling expects webhooks
x-webhooks: &x-webhooks
  salesforce_cdc.create:
    $ref: ./webhooks/salesforce_cdc.create.yaml
  salesforce_cdc.update:
    $ref: ./webhooks/salesforce_cdc.update.yaml
  salesforce_cdc.delete:
    $ref: ./webhooks/salesforce_cdc.delete.yaml
  salesforce_cdc.undelete:
    $ref: ./webhooks/salesforce_cdc.undelete.yaml
  sync.complete:
    $ref: ./webhooks/sync.complete.yaml
  connection.create:
    $ref: ./webhooks/connection.create.yaml
webhooks: *x-webhooks
