import DestinationTabPanelContainer from '@/components/connectors/destination/DestinationTabPanelContainer';
import ProviderTabPanelContainer from '@/components/connectors/provider/ProviderTabPanelContainer';
import { TabContainer } from '@/components/TabContainer';
import { TabPanel } from '@/components/TabPanel';
import { useActiveApplicationId } from '@/hooks/useActiveApplicationId';
import Header from '@/layout/Header';
import { getServerSideProps } from '@/pages/applications/[applicationId]';
import { Box, Tab, Tabs } from '@mui/material';
import Head from 'next/head';
import { useRouter } from 'next/router';
import * as React from 'react';
import { useState } from 'react';

export { getServerSideProps };

type ConnectorsHeaderTab = {
  label: string;
  value: string;
};
const connectorsHeaderTabs: ConnectorsHeaderTab[] = [
  { label: 'Providers', value: 'providers' },
  {
    label: 'Destinations',
    value: 'destinations',
  },
];

export default function Home() {
  const router = useRouter();
  const [mobileOpen, setMobileOpen] = useState(false);
  const { tab = [] } = router.query;
  const [value, setValue] = React.useState(0);

  const activeApplicationId = useActiveApplicationId();

  React.useEffect(() => {
    const tabIndex = connectorsHeaderTabs.findIndex((connectorsHeaderTab) => connectorsHeaderTab.value === tab[0]);
    setValue(tabIndex);
  }, [tab]);

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  return (
    <>
      <Head>
        <title>Supaglue Management Portal</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>
        <Header
          tabs={
            <Tabs value={value} textColor="inherit">
              <Tab
                label="Providers"
                onClick={async () => {
                  await router.push(`/applications/${activeApplicationId}/connectors/providers`);
                }}
              />
              <Tab
                label="Destinations"
                onClick={async () => {
                  await router.push(`/applications/${activeApplicationId}/connectors/destinations`);
                }}
              />
            </Tabs>
          }
          title="Connectors"
          onDrawerToggle={handleDrawerToggle}
        />
        <TabContainer>
          <TabPanel value={value} index={0} className="w-full">
            <ProviderTabPanelContainer />
          </TabPanel>
          <TabPanel value={value} index={1} className="w-full">
            <DestinationTabPanelContainer />
          </TabPanel>
        </TabContainer>
      </Box>
    </>
  );
}
