import CustomerCard from '@/components/customers/CustomerCard';
import MetricCard from '@/components/customers/MetricCard';
import { useCustomers } from '@/hooks/useCustomers';
import Header from '@/layout/Header';
import providerToIcon from '@/utils/providerToIcon';
import { CloudUploadOutlined, Link, PeopleAltOutlined } from '@mui/icons-material';
import { Box, Divider, Grid, Stack, Typography } from '@mui/material';
import { Inter } from 'next/font/google';
import Head from 'next/head';
import { useState } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const { customers = [] } = useCustomers();
  const [mobileOpen, setMobileOpen] = useState(false);

  // TODO: count this on server?
  const totalConnections = customers
    ?.map((customer: any /* TODO: @supaglue/core/types */) => customer.connections.length)
    .reduce((a: number, b: number) => a + b, 0);

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  return (
    <>
      <Head>
        <title>Supaglue Management UI</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>
        <Header title="Customers" onDrawerToggle={handleDrawerToggle} />
        <Box component="main" sx={{ flex: 1, py: 6, px: 4, bgcolor: '#eaeff1' }}>
          <Typography variant="h6">Overview</Typography>
          <Typography variant="subtitle2">An overview of total stats. The request count resets every month.</Typography>
          <Divider className="my-4" />
          <Grid container spacing={3} className="mb-8">
            <Grid item xs={4}>
              <MetricCard
                icon={<PeopleAltOutlined />}
                title="Total customers"
                value={`${customers.length} customers`}
              />
            </Grid>
            <Grid item xs={4}>
              <MetricCard icon={<CloudUploadOutlined />} title="Total API requests/month" value="-- API requests" />
            </Grid>
            <Grid item xs={4}>
              <MetricCard icon={<Link />} title="Total connections" value={`${totalConnections} connections`} />
            </Grid>
          </Grid>

          <Typography variant="h6">Customers</Typography>
          <Typography variant="subtitle2">A list of customers with connections linked to your application.</Typography>
          <Divider className="my-4" />
          <Stack spacing={2}>
            {customers.map((customer: any /* get type from monorepo */) => (
              <CustomerCard
                key={customer.id}
                email="customer@email.com"
                company="Company"
                metric={`${customer?.connections.length} connection(s)`}
                id={customer.id}
                icon={providerToIcon(customer?.connections[0]?.providerName)}
                provider={customer?.connections[0]?.providerName} // TODO: show all providers
              />
            ))}
          </Stack>
        </Box>
      </Box>
    </>
  );
}
