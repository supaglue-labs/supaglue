{{- if .Values.schema.update.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "supaglue.componentname" (list . "schema-update") }}
  labels:
    app.kubernetes.io/name: {{ include "supaglue.name" . }}
    helm.sh/chart: {{ include "supaglue.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: {{ .Chart.Name }}
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: {{ .Values.schema.update.backoffLimit }}
  template:
    metadata:
      name: {{ include "supaglue.componentname" (list . "schema-update") }}
      labels:
        app.kubernetes.io/name: {{ include "supaglue.name" . }}
        helm.sh/chart: {{ include "supaglue.chart" . }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: {{ .Chart.Name }}
    spec:
      {{ include "supaglue.serviceAccount" . }}
      restartPolicy: "OnFailure"
      initContainers:
        - name: wait-for-database
          image: busybox
          command: ['sh', '-c', 'until nc -z -v -w30 {{ template "supaglue.databaseHost" . }} {{ template "supaglue.databasePort" $ }}; do echo waiting for database; sleep 2; done;']
        - name: wait-for-temporal
          image: busybox
          command: ['sh', '-c', 'until nc -z -v -w30 {{ template "supaglue.temporalHost" . }} {{ template "supaglue.temporalPort" $ }}; do echo waiting for temporal; sleep 2; done;']
      containers:
        - name: schema-update
          image: "{{ default "supaglue/api" .Values.api.image.repository }}:{{ default .Chart.AppVersion .Values.api.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.api.image.pullPolicy }}
          env:
            - name: SUPAGLUE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "supaglue.secretName" . }}
                  key: {{ .Values.secretKeys.databaseUrl }}
            - name: NODE_ENV
              value: production
            - name: SUPAGLUE_API_ENCRYPTION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "supaglue.secretName" . }}
                  key: {{ .Values.secretKeys.dbEncryptionSecret }}
            - name: SUPAGLUE_TEMPORAL_HOST
              value: {{ template "supaglue.temporalHost" . }}
            - name: SUPAGLUE_TEMPORAL_PORT
              value: {{ include "supaglue.temporalPort" . | quote }}
          command: ['sh', '-c', 'npx prisma migrate deploy && node node_modules/@supaglue/db/prisma/seed.js && node init_scripts/init_temporal.js']
{{ end }}
