name: Build and Push Docker image

on:
  workflow_call:
    inputs:
      workspace:
        description: workspace to deploy
        required: true
        type: string
      image-name:
        description: image name to create
        required: true
        type: string
      build-args:
        description: arguments to pass to docker build
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        description: Docker Hub username
        required: true
      DOCKERHUB_TOKEN:
        description: Docker Hub token
        required: true
      build-args:
        description: arguments to pass to docker build
        required: false

jobs:
  build:
    name: Build and Push to Docker Hub
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: corepack enable

      - name: Docker meta
        if: '!env.ACT'
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ github.token }}
          # list of Docker images to use as base name for tags
          images: |
            supaglue/${{ inputs.image-name }}
          tags: |
            type=ref,event=pr
            type=ref,event=branch,prefix=branch-,enable=${{ github.ref != 'refs/heads/main' }}
            type=edge,branch=main
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Set up Depot CLI
        if: '!env.ACT'
        uses: depot/setup-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: '!env.ACT'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get directory of yarn workspace
        id: get-directory
        run: |
          echo "directory=$(yarn workspaces list --json | jq -r 'select( .name == "${{ inputs.workspace }}") | .location')" >> $GITHUB_ENV

      - name: Build and push
        uses: depot/build-push-action@v1
        with:
          project: 2bljgst1rr
          context: .
          file: ./${{ env.directory }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ !env.ACT }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            ${{ inputs.build-args }}
            ${{ secrets.build-args }}
