/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/passthrough": {
    /**
     * Send passthrough request
     * @description Send request directly to a provider
     */
    post: operations["sendPassthroughRequest"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    pagination: {
      /** @example eyJpZCI6IjQyNTc5ZjczLTg1MjQtNDU3MC05YjY3LWVjYmQ3MDJjNmIxNCIsInJldmVyc2UiOmZhbHNlfQ== */
      next: string | null;
      /** @example eyJpZCI6IjBjZDhmYmZkLWU5NmQtNDEwZC05ZjQxLWIwMjU1YjdmNGI4NyIsInJldmVyc2UiOnRydWV9 */
      previous: string | null;
      /** @example 100 */
      total_count?: number;
    };
    errors: ({
        /**
         * @description A unique identifier for the instance of the error. Provide this to support when contacting Supaglue.
         * @example 9366efb4-8fb1-4a28-bfb0-8d6f9cc6b5c5
         */
        id: string;
        /**
         * @description A detailed description of the error.
         * @example Property values were not valid: [{"isValid":false,"message":"Property \"__about_us\" does not exist","error":"PROPERTY_DOESNT_EXIST","name":"__about_us","localizedErrorMessage":"Property \"__about_us\" does not exist"}]
         */
        detail: string;
        /**
         * @deprecated
         * @description The Supaglue error code associated with the error.
         * @example MISSING_REQUIRED_FIELD
         */
        problem_type: string;
        /**
         * @description A brief description of the error. The schema and type of message will vary by Provider.
         * @example Property values were not valid
         */
        title: string;
        /**
         * @description The Supaglue error code associated with the error.
         * @example MISSING_REQUIRED_FIELD
         */
        code: string;
        /**
         * @description The HTTP status code associated with the error.
         * @example 400
         */
        status: string;
        /** @description Additional metadata about the error. */
        meta: {
          /**
           * @description The cause of the error. Usually the underlying error from the remote Provider.
           * @example {
           *   "code": 400,
           *   "body": {
           *     "status": "error",
           *     "message": "Property values were not valid: [{\"isValid\":false,\"message\":\"Property \\\"__about_us\\\" does not exist\",\"error\":\"PROPERTY_DOESNT_EXIST\",\"name\":\"__about_us\",\"localizedErrorMessage\":\"Property \\\"__about_us\\\" does not exist\"}]",
           *     "correlationId": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "category": "VALIDATION_ERROR"
           *   },
           *   "headers": {
           *     "access-control-allow-credentials": "false",
           *     "cf-cache-status": "DYNAMIC",
           *     "cf-ray": "8053d17b9dae9664-SJC",
           *     "connection": "close",
           *     "content-length": "361",
           *     "content-type": "application/json;charset=utf-8",
           *     "date": "Mon, 11 Sep 2023 23:51:22 GMT",
           *     "nel": "{\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}",
           *     "report-to": "{\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v3?s=FgwuXObO%2Fz6ahUJKsxjDLaXTWjooJ8tB0w4%2B%2BKaulGStx0FGkn1PoJoOx2KrFMfihzNdfAqikq7CmgbdlmwKB8hkmp3eTb68qpg10LXFlRgiSqRhbWM7yYSfo8CXmPBc\"}],\"group\":\"cf-nel\",\"max_age\":604800}",
           *     "server": "cloudflare",
           *     "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
           *     "vary": "origin, Accept-Encoding",
           *     "x-content-type-options": "nosniff",
           *     "x-envoy-upstream-service-time": "91",
           *     "x-evy-trace-listener": "listener_https",
           *     "x-evy-trace-route-configuration": "listener_https/all",
           *     "x-evy-trace-route-service-name": "envoyset-translator",
           *     "x-evy-trace-served-by-pod": "iad02/hubapi-td/envoy-proxy-6c94986c56-9xsh2",
           *     "x-evy-trace-virtual-host": "all",
           *     "x-hubspot-correlation-id": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "x-hubspot-ratelimit-interval-milliseconds": "10000",
           *     "x-hubspot-ratelimit-max": "100",
           *     "x-hubspot-ratelimit-remaining": "99",
           *     "x-hubspot-ratelimit-secondly": "10",
           *     "x-hubspot-ratelimit-secondly-remaining": "9",
           *     "x-request-id": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "x-trace": "2B1B4386362759B6A4C34802AD168B803DDC1BE770000000000000000000"
           *   }
           * }
           */
          cause?: Record<string, never>;
          /**
           * @description The origin of the error.
           * @example remote-provider
           * @enum {string}
           */
          origin: "remote-provider" | "supaglue";
          [key: string]: unknown;
        };
      })[];
    warnings: {
        detail?: string;
        problem_type?: string;
        title?: string;
      }[];
  };
  responses: {
    /** @description Bad request */
    badRequest: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Conflict */
    conflict: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Forbidden */
    forbidden: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Internal server error */
    internalServerError: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Not found */
    notFound: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Not implemented */
    notImplemented: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Remote provider error */
    remoteProviderError: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Unauthorized */
    unauthorized: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Unprocessable entity */
    unprocessableEntity: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
  };
  parameters: {
    /**
     * @description The customer ID that uniquely identifies the customer in your application
     * @example my-customer-1
     */
    "x-customer-id": string;
    /**
     * @description The provider name
     * @example salesforce
     */
    "x-provider-name": string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Send passthrough request
   * @description Send request directly to a provider
   */
  sendPassthroughRequest: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "path": "/crm/v3/schemas",
         *   "method": "GET"
         * }
         */
        "application/json": {
          /** @description The path to send the request to (do not pass the domain) */
          path: string;
          /**
           * @example GET
           * @enum {string}
           */
          method: "GET" | "POST" | "PUT" | "PATCH" | "DELETE";
          /** @description Headers to pass to downstream */
          headers?: {
            [key: string]: string;
          };
          /** @description Query parameters to pass to downstream */
          query?: {
            [key: string]: string;
          };
          /** @description Body to pass to downstream (can be string or JSON object) */
          body?: OneOf<[string, {
            [key: string]: unknown;
          }]>;
        };
      };
    };
    responses: {
      /** @description Passthrough response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The full URL the request was went to
             * @example https://customcrm.com/api/cars
             */
            url: string;
            /**
             * @description Status code from the downstream
             * @example 200
             */
            status: number;
            /** @description The response headers from the downstream */
            headers: {
              [key: string]: string;
            };
            /** @description The body from the downstream */
            body?: string | number | boolean | {
                [key: string]: unknown;
              }[] | {
              [key: string]: unknown;
            };
          };
        };
      };
    };
  };
}
