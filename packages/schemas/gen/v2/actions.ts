/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/salesforce/list_views/{object_type}": {
    /** List list views */
    get: operations["listListViewss"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
      path: {
        object_type: "contact" | "account" | "lead" | "opportunity";
      };
    };
  };
  "/salesforce/list_views/{object_type}/{list_id}": {
    /** Get list view membership */
    get: operations["getListViewMembership"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
      path: {
        object_type: "contact" | "account" | "lead" | "opportunity";
        list_view_id: string;
      };
    };
  };
  "/passthrough": {
    /**
     * Send passthrough request 
     * @description Send request directly to a provider
     */
    post: operations["sendPassthroughRequest"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    salesforce_list_view_metadata: {
      /**
       * @description The unique identifier for this list view. 
       * @example 12345
       */
      id: string;
      /** @enum {string} */
      object_type?: "contact" | "account" | "lead" | "opportunity";
      /**
       * @description The developer name of this list view. 
       * @example my-list
       */
      name: string;
      /**
       * @description The label for this list view. 
       * @example My List
       */
      label: string;
      /**
       * @description The raw data for this list view. 
       * @example {
       *   "describeUrl": "/services/data/v58.0/sobjects/Account/listviews/00BD0000005WcBeMAK/describe",
       *   "developerName": "NewThisWeek",
       *   "id": "00BD0000005WcBeMAK",
       *   "label": "New This Week",
       *   "resultsUrl": "/services/data/v58.0/sobjects/Account/listviews/00BD0000005WcBeMAK/results",
       *   "soqlCompatible": true,
       *   "url": "/services/data/v58.0/sobjects/Account/listviews/00BD0000005WcBeMAK"
       * }
       */
      raw_data: {
        [key: string]: unknown;
      };
    };
    salesforce_list_view_membership: {
      /** @description The unique identifier for a member of this list view. */
      id: string;
      /**
       * @description The raw data for this list view membership. 
       * @example {
       *   "columns": [
       *     {
       *       "fieldNameOrPath": "Id",
       *       "value": "0012800000bbzSAAAY"
       *     },
       *     {
       *       "fieldNameOrPath": "Email",
       *       "value": "jdoe@example.com"
       *     },
       *     {
       *       "fieldNameOrPath": "FirstName",
       *       "value": "John"
       *     },
       *     {
       *       "fieldNameOrPath": "LastName",
       *       "value": "Doe"
       *     },
       *     {
       *       "fieldNameOrPath": "CreatedDate",
       *       "value": "Fri Aug 01 21:15:46 GMT 2014"
       *     },
       *     {
       *       "fieldNameOrPath": "LastModifiedDate",
       *       "value": "Fri Aug 01 21:15:46 GMT 2014"
       *     },
       *     {
       *       "fieldNameOrPath": "SystemModstamp",
       *       "value": "Fri Aug 01 21:15:46 GMT 2014"
       *     }
       *   ]
       * }
       */
      raw_data: {
        [key: string]: unknown;
      };
    };
    pagination: {
      /** @example eyJpZCI6IjQyNTc5ZjczLTg1MjQtNDU3MC05YjY3LWVjYmQ3MDJjNmIxNCIsInJldmVyc2UiOmZhbHNlfQ== */
      next: string | null;
      /** @example eyJpZCI6IjBjZDhmYmZkLWU5NmQtNDEwZC05ZjQxLWIwMjU1YjdmNGI4NyIsInJldmVyc2UiOnRydWV9 */
      previous: string | null;
      /** @example 100 */
      total_count: number;
    };
    errors: ({
        /** @example name is a required field on model. */
        detail?: string;
        /** @example MISSING_REQUIRED_FIELD */
        problem_type?: string;
        source?: {
          /** @example irure consectetur */
          pointer?: string;
        };
        /** @example Missing Required Field */
        title?: string;
      })[];
    /**
     * @example [
     *   {
     *     "detail": "An unrecognized field, age, was passed in with request data.",
     *     "problem_type": "UNRECOGNIZED_FIELD",
     *     "source": {
     *       "pointer": "Lorem ipsum"
     *     },
     *     "title": "Unrecognized Field"
     *   },
     *   {
     *     "detail": "An unrecognized field, age, was passed in with request data.",
     *     "problem_type": "UNRECOGNIZED_FIELD",
     *     "source": {
     *       "pointer": "in"
     *     },
     *     "title": "Unrecognized Field"
     *   }
     * ]
     */
    warnings: ({
        /** @example An unrecognized field, age, was passed in with request data. */
        detail?: string;
        /** @example UNRECOGNIZED_FIELD */
        problem_type?: string;
        source?: {
          /** @example Lorem ipsum */
          pointer?: string;
        };
        /** @example Unrecognized Field */
        title?: string;
      })[];
  };
  responses: never;
  parameters: {
    /** @description The customer ID that uniquely identifies the customer in your application */
    "x-customer-id": string;
    /** @description The provider name */
    "x-provider-name": string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** List list views */
  listListViewss: {
    parameters: {
      query?: {
        /** @description Number of results to return per page */
        page_size?: string;
        /** @description The pagination cursor value */
        cursor?: string;
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
      path: {
        object_type: "contact" | "account" | "lead" | "opportunity";
      };
    };
    responses: {
      /** @description List Views */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: (components["schemas"]["salesforce_list_view_metadata"])[];
          };
        };
      };
    };
  };
  /** Get list view membership */
  getListViewMembership: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
      path: {
        object_type: "contact" | "account" | "lead" | "opportunity";
        list_view_id: string;
      };
    };
    responses: {
      /** @description List Views */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            members?: (components["schemas"]["salesforce_list_view_membership"])[];
            metadata?: components["schemas"]["salesforce_list_view_metadata"];
          };
        };
      };
    };
  };
  /**
   * Send passthrough request 
   * @description Send request directly to a provider
   */
  sendPassthroughRequest: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The path to send the request to (do not pass the domain) */
          path: string;
          /**
           * @example GET 
           * @enum {string}
           */
          method: "GET" | "POST" | "PUT" | "PATCH" | "DELETE";
          /** @description Headers to pass to downstream */
          headers?: {
            [key: string]: string | undefined;
          };
          /** @description Query parameters to pass to downstream */
          query?: {
            [key: string]: string | undefined;
          };
          /** @description Body to pass to downstream (can be string or JSON object) */
          body?: OneOf<[string, {
            [key: string]: unknown;
          }]>;
        };
      };
    };
    responses: {
      /** @description Passthrough response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The full URL the request was went to 
             * @example https://customcrm.com/api/cars
             */
            url: string;
            /**
             * @description Status code from the downstream 
             * @example 200
             */
            status: number;
            /** @description The response headers from the downstream */
            headers: {
              [key: string]: string | undefined;
            };
            /** @description The body from the downstream */
            body?: string | number | boolean | ({
                [key: string]: unknown;
              })[] | {
              [key: string]: unknown;
            };
          };
        };
      };
    };
  };
}
