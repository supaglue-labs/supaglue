/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/passthrough": {
    /**
     * Send passthrough request
     * @deprecated
     * @description Send request directly to a provider
     */
    post: operations["sendPassthroughRequest"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/accounts": {
    /** List accounts */
    get: operations["listAccounts"];
    /** Create account */
    post: operations["createAccount"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/accounts/{account_id}": {
    /**
     * Get account
     * @description Support:
     *
     * | Provider   | Supported |
     * | ---------- | --------- |
     * | Salesloft  | Yes       |
     * | Outreach   | Yes       |
     * | Apollo     | No        |
     */
    get: operations["getAccount"];
    /** Update account */
    patch: operations["updateAccount"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        account_id: string;
      };
    };
  };
  "/contacts": {
    /** List contacts */
    get: operations["listContacts"];
    /**
     * Create contact
     * @description Some providers do not support `primary` phone number type, in which case we will default to `mobile`. If both `primary` and `mobile` phone numbers are specified and only a single mobile number is possible, then `mobile` will be used and `primary` will be dropped.
     */
    post: operations["createContact"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/contacts/_search": {
    /**
     * Search contacts
     * @description Search contacts by email. Note: This will perform a search directly in the 3rd-party provider, and not in the managed destination.
     */
    post: operations["searchContacts"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/contacts/{contact_id}": {
    /** Get contact */
    get: operations["getContact"];
    /** Update contact */
    patch: operations["updateContact"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        contact_id: string;
      };
    };
  };
  "/users": {
    /** List users */
    get: operations["listUsers"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/users/{user_id}": {
    /** Get user */
    get: operations["getUser"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        user_id: string;
      };
    };
  };
  "/mailboxes": {
    /** List mailboxes */
    get: operations["listMailboxes"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/mailboxes/{mailbox_id}": {
    /** Get mailbox */
    get: operations["getMailbox"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        mailbox_id: string;
      };
    };
  };
  "/sequences": {
    /** List sequences */
    get: operations["listSequences"];
    /**
     * Create sequence
     * @description Note this uses an undocumented private api endpoint for Apollo and should be considered to be in alpha state
     */
    post: operations["createSequence"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/sequences/{sequence_id}": {
    /** Get sequence */
    get: operations["getSequence"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        sequence_id: string;
      };
    };
  };
  "/sequences/{sequence_id}/sequence_steps": {
    /** Create sequence step */
    post: operations["createSequenceStep"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /**
         * @description The ID of the sequence.
         * @example 0258cbc6-6020-430a-848e-aafacbadf4ae
         */
        sequence_id: string;
      };
    };
  };
  "/sequence_states": {
    /** List sequence states */
    get: operations["listSequenceStates"];
    /**
     * Create sequence state
     * @description In other words, adding a sequencestate to sequence.
     */
    post: operations["createSequenceState"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/sequence_states/_batch": {
    /**
     * Batch create sequence states
     * @description Add multiple contacts to a sequence atomically. You must pass in the same sequenceId, userId and mailboxId for all the contact records.
     *
     * Support:
     *
     * | Provider  | Supported |
     * | --------- | --------- |
     * | Apollo    | Yes       |
     * | Outreach  | No        |
     * | Salesloft | No        |
     */
    post: operations["batchCreateSequenceState"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
  };
  "/sequence_states/{sequence_state_id}": {
    /** Get sequence state */
    get: operations["getSequenceState"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example ffb62704-addd-454e-bb86-ed0799703dc6 */
        sequence_state_id: string;
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    account: {
      /** @example 54312 */
      id: string;
      /** @example 23e640fe-6105-4a11-a636-3aa6b6c6e762 */
      owner_id: string | null;
      /** @example My Company */
      name: string | null;
      /** @example mycompany.com */
      domain: string | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
      raw_data?: {
        [key: string]: unknown;
      };
    };
    create_account: {
      /** @example My Company */
      name?: string | null;
      /** @example mycompany.com */
      domain?: string | null;
      /** @example 9f3e97fd-4d5d-4efc-959d-bbebfac079f5 */
      owner_id?: string | null;
      /** @example ae4be028-9078-4850-a0bf-d2112b7c4d11 */
      account_id?: string | null;
      custom_fields?: components["schemas"]["custom_fields"];
    };
    contact: {
      /** @example 54312 */
      id: string;
      /** @example 23e640fe-6105-4a11-a636-3aa6b6c6e762 */
      owner_id: string | null;
      /** @example 45edea5a-0b9a-44ff-bd45-4452014eb4fa */
      account_id?: string | null;
      /** @example George */
      first_name: string | null;
      /** @example Xing */
      last_name: string | null;
      /** @example CEO */
      job_title: string | null;
      address: components["schemas"]["address"];
      email_addresses: components["schemas"]["email_addresses"];
      phone_numbers: components["schemas"]["phone_numbers"];
      open_count: number;
      click_count: number;
      reply_count: number;
      bounced_count: number;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
      raw_data?: {
        [key: string]: unknown;
      };
    };
    create_contact: {
      /** @example George */
      first_name?: string | null;
      /** @example Xing */
      last_name?: string | null;
      /** @example CEO */
      job_title?: string | null;
      address?: components["schemas"]["address"];
      email_addresses?: components["schemas"]["email_addresses"];
      phone_numbers?: components["schemas"]["phone_numbers"];
      /** @example 9f3e97fd-4d5d-4efc-959d-bbebfac079f5 */
      owner_id?: string | null;
      /** @example ae4be028-9078-4850-a0bf-d2112b7c4d11 */
      account_id?: string | null;
      custom_fields?: components["schemas"]["custom_fields"];
    };
    sequence_state: {
      /** @example 54312 */
      id: string;
      /** @example active */
      state: string | null;
      /** @example c590dc63-8e43-48a4-8154-1fbb00ac936b */
      contact_id: string | null;
      /** @example 39fd1fe0-094b-4a61-b47f-3e3ac033203d */
      mailbox_id: string | null;
      /** @example ab0530ef-61dd-4a99-b26b-6b5a61c7c62e */
      user_id: string | null;
      /** @example b854e510-1c40-4ef6-ade4-8eb35f49d331 */
      sequence_id: string | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
    };
    create_sequence_state: {
      /** @example c590dc63-8e43-48a4-8154-1fbb00ac936b */
      contact_id: string;
      /**
       * @description The ID of the mailbox to use for the sequence. Required for Apollo and Outreach. Unused for Salesloft.
       * @example 39fd1fe0-094b-4a61-b47f-3e3ac033203d
       */
      mailbox_id?: string;
      /** @example b854e510-1c40-4ef6-ade4-8eb35f49d331 */
      sequence_id: string;
      /** @description The ID of the user who is performing the action. Required for Salesloft, optional for Apollo, unused for Outreach. */
      user_id?: string;
    };
    mailbox: {
      /** @example 54312 */
      id: string;
      /** @example null */
      email: string | null;
      /** @example 39fd1fe0-094b-4a61-b47f-3e3ac033203d */
      user_id: string | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
      /** @description When disabled, cannot be used to send email. */
      is_disabled?: boolean | null;
    };
    user: {
      /** @example 54312 */
      id: string;
      /** @example George */
      first_name: string | null;
      /** @example Xing */
      last_name: string | null;
      /** @example george@supaglue.com */
      email: string | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
      /** @description When locked, cannot send email or take most actions in the app. This is null when provider does not have such concept (e.g. apollo) */
      is_locked?: boolean | null;
    };
    sequence: {
      /** @example 95fe0d29-e8cc-48ac-9afd-e02d8037a597 */
      owner_id?: string | null;
      /** @example 54312 */
      id: string;
      /** @example true */
      is_enabled: boolean;
      name: string | null;
      /** @description Raw values in Outreach, ids in Apollo, and not supported in Salesloft */
      tags: string[];
      num_steps: number;
      metrics: {
        [key: string]: unknown;
      };
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      created_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      updated_at: Date | null;
      /**
       * Format: date-time
       * @example 2022-02-27T00:00:00Z
       */
      last_modified_at: Date;
      /** @description When archived, cannot add contact to sequence or send mail. */
      is_archived?: boolean;
      /**
       * @description The share type of the sequence. If `team` will share with the whole team. `private` will only share with the owner.
       * @enum {string}
       */
      share_type?: "team" | "private";
    };
    create_sequence: {
      name: string;
      /** @description Raw values in Outreach, ids in Apollo, and not supported in Salesloft */
      tags?: string[];
      /**
       * @description The share type of the sequence. Setting to `team` will share with the whole team. `private` will only share with the owner.
       * @enum {string}
       */
      type: "team" | "private";
      owner_id?: string;
      steps?: components["schemas"]["create_sequence_step"][];
      custom_fields?: components["schemas"]["custom_fields"];
    };
    create_sequence_step: {
      /** @description The name given by the user for the step. Used by Salesloft only. */
      name?: string;
      /** @description The interval (in seconds) until this step will activate after the previous step (in case of first step, relative to when prospect first enters a sequence); only applicable to interval-based sequences. This is 0 by default */
      interval_seconds?: number;
      /**
       * @description The date this step will activate; only applicable to date-based sequences.
       * @example 2023-01-01
       */
      date?: string;
      /** @description The email/message template to be used for this step. Only applicable for email or message steps. */
      template?: OneOf<[{
        /** @description The ID of the template to use for this step. */
        id: string;
      }, {
        /** @description The body of the email (HTML). */
        body: string;
        /** @description The subject of the email. */
        subject: string;
        /** @description The name of the template. In Outreach, if missing this will create an `invisible` template that doesn't show up in the templates list UI. */
        name?: string;
        /** @description A list of default person and email address pairs to receive this template in the "to" field */
        to?: string[];
        /** @description A list of default person and email address pairs to receive this template in the "cc" field */
        cc?: string[];
        /** @description A list of default person and email address pairs to receive this template in the "bcc" field */
        bcc?: string[];
        custom_fields?: components["schemas"]["custom_fields"];
      }]>;
      /** @description If true, this step will be sent as a reply to the previous step. */
      is_reply?: boolean;
      /** @description The step's display order within its sequence. Only applicable for Outreach when adding steps one at a time after the initial sequence creation, otherwise when creating steps together with sequence order is implicit based on the order of step within the step array. Salesloft does not use the `order` param, and order is instead determined by `interval_seconds` which translates into the `day` parameter */
      order?: number;
      /**
       * @description The type of the sequence state. Note: `linkedin_send_message` is undocumented in Outreach and subject to change.
       *
       * See below for how these types are mapped:
       *
       * <table>
       *   <thead>
       *       <tr>
       *           <th>Provider</th>
       *           <th>auto_email</th>
       *           <th>manual_email</th>
       *           <th>call</th>
       *           <th>task</th>
       *           <th>linkedin_send_message</th>
       *       </tr>
       *   </thead>
       *   <tbody>
       *       <tr>
       *           <td>Apollo</td>
       *           <td>auto_email</td>
       *           <td>manual_email</td>
       *           <td>call</td>
       *           <td>action_item</td>
       *           <td>linkedin_send_message</td>
       *       </tr>
       *       <tr>
       *           <td>Outreach</td>
       *           <td>auto_email</td>
       *           <td>manual_email</td>
       *           <td>call</td>
       *           <td>task</td>
       *           <td>linkedin_send_message</td>
       *       </tr>
       *       <tr>
       *           <td>Salesloft</td>
       *           <td>Email</td>
       *           <td>Email</td>
       *           <td>Phone</td>
       *           <td>Other</td>
       *           <td>(Not supported)</td>
       *       </tr>
       *   </tbody>
       * </table>
       *
       * @enum {string}
       */
      type: "auto_email" | "manual_email" | "call" | "task" | "linkedin_send_message";
      /** @description An optional note to be attached to this step. */
      task_note?: string;
      custom_fields?: components["schemas"]["custom_fields"];
    };
    pagination: {
      /** @example eyJpZCI6IjQyNTc5ZjczLTg1MjQtNDU3MC05YjY3LWVjYmQ3MDJjNmIxNCIsInJldmVyc2UiOmZhbHNlfQ== */
      next: string | null;
      /** @example eyJpZCI6IjBjZDhmYmZkLWU5NmQtNDEwZC05ZjQxLWIwMjU1YjdmNGI4NyIsInJldmVyc2UiOnRydWV9 */
      previous: string | null;
      /** @example 100 */
      total_count?: number;
    };
    /**
     * @example [
     *   {
     *     "city": "San Francisco",
     *     "country": "US",
     *     "postal_code": "94107",
     *     "state": "CA",
     *     "street_1": "525 Brannan",
     *     "street_2": null
     *   }
     * ]
     */
    address: ({
      /** @example San Francisco */
      city: string | null;
      /** @example USA */
      country: string | null;
      /** @example 94107 */
      postal_code: string | null;
      /** @example CA */
      state: string | null;
      /** @example 525 Brannan */
      street_1: string | null;
      /** @example null */
      street_2: string | null;
    }) | null;
    /**
     * @example [
     *   {
     *     "email_address": "hello@supaglue.com",
     *     "email_address_type": "work"
     *   }
     * ]
     */
    email_addresses: ({
        /** @example hello@supaglue.com */
        email_address: string;
        /** @enum {string|null} */
        email_address_type: "primary" | "personal" | "work" | null;
      })[];
    /**
     * @example [
     *   {
     *     "phone_number": "+14151234567",
     *     "phone_number_type": "work"
     *   }
     * ]
     */
    phone_numbers: ({
        /** @example +14151234567 */
        phone_number: string | null;
        /** @enum {string|null} */
        phone_number_type: "primary" | "work" | "home" | "mobile" | "other" | null;
      })[];
    /** @description Custom properties to be inserted that are not covered by the common object. Object keys must match exactly to the corresponding provider API. */
    custom_fields: {
      [key: string]: unknown;
    };
    created_record: {
      id: string;
    };
    errors: {
        /**
         * @description The full error message from the remote Provider. The schema and level of detail will vary by Provider.
         * @example {"code":400,"body":{"status":"error","message":"Property values were not valid: [{\\"isValid\\":false,\\"message\\":\\"Property \\\\\\"__about_us\\\\\\" does not exist\\",\\"error\\":\\"PROPERTY_DOESNT_EXIST\\",\\"name\\":\\"__about_us\\",\\"localizedErrorMessage\\":\\"Property \\\\\\"__about_us\\\\\\" does not exist\\"}]","correlationId":"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2","category":"VALIDATION_ERROR"},"headers":{"access-control-allow-credentials":"false","cf-cache-status":"DYNAMIC","cf-ray":"8053d17b9dae9664-SJC","connection":"close","content-length":"361","content-type":"application/json;charset=utf-8","date":"Mon, 11 Sep 2023 23:51:22 GMT","nel":"{\\"success_fraction\\":0.01,\\"report_to\\":\\"cf-nel\\",\\"max_age\\":604800}","report-to":"{\\"endpoints\\":[{\\"url\\":\\"https://a.nel.cloudflare.com/report/v3?s=FgwuXObO%2Fz6ahUJKsxjDLaXTWjooJ8tB0w4%2B%2BKaulGStx0FGkn1PoJoOx2KrFMfihzNdfAqikq7CmgbdlmwKB8hkmp3eTb68qpg10LXFlRgiSqRhbWM7yYSfo8CXmPBc\\"}],\\"group\\":\\"cf-nel\\",\\"max_age\\":604800}","server":"cloudflare","strict-transport-security":"max-age=31536000; includeSubDomains; preload","vary":"origin, Accept-Encoding","x-content-type-options":"nosniff","x-envoy-upstream-service-time":"91","x-evy-trace-listener":"listener_https","x-evy-trace-route-configuration":"listener_https/all","x-evy-trace-route-service-name":"envoyset-translator","x-evy-trace-served-by-pod":"iad02/hubapi-td/envoy-proxy-6c94986c56-9xsh2","x-evy-trace-virtual-host":"all","x-hubspot-correlation-id":"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2","x-hubspot-ratelimit-interval-milliseconds":"10000","x-hubspot-ratelimit-max":"100","x-hubspot-ratelimit-remaining":"99","x-hubspot-ratelimit-secondly":"10","x-hubspot-ratelimit-secondly-remaining":"9","x-request-id":"ac94252c-90b5-45d2-ad1d-9a9f7651d7d2","x-trace":"2B1B4386362759B6A4C34802AD168B803DDC1BE770000000000000000000"}}
         */
        detail?: string;
        /**
         * @description The Supaglue error code associated with the error.
         * @example MISSING_REQUIRED_FIELD
         */
        problem_type?: string;
        /**
         * @description A brief description of the error. The schema and type of message will vary by Provider.
         * @example Property values were not valid
         */
        title?: string;
      }[];
    warnings: {
        detail?: string;
        problem_type?: string;
        title?: string;
      }[];
  };
  responses: never;
  parameters: {
    /**
     * @description Whether to include data that was deleted in providers.
     * @example true
     */
    include_deleted_data?: boolean;
    /**
     * @description Whether to include raw data fetched from the 3rd party provider.
     * @example true
     */
    include_raw_data?: boolean;
    /**
     * @description If provided, will only return objects created after this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    created_after?: Date;
    /**
     * @description If provided, will only return objects created before this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    created_before?: Date;
    /**
     * @description If provided, will only return objects modified after this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    modified_after?: Date;
    /**
     * @description If provided, will only return objects modified before this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    modified_before?: Date;
    /**
     * @description The pagination cursor value
     * @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
     */
    cursor?: string;
    /**
     * @description Number of results to return per page. (Max: 1000)
     * @example 123
     */
    page_size?: string;
    /**
     * @description Whether to read from Supaglue's Managed Destination cache or to read directly from the provider.
     *
     *
     * **NOTE**: `read_from_cache=true` requires you to have the object synced to the Supaglue Managed Destination.
     *
     * @example true
     */
    read_from_cache?: boolean;
    /**
     * @description The customer ID that uniquely identifies the customer in your application
     * @example my-customer-1
     */
    "x-customer-id": string;
    /**
     * @description The provider name
     * @example salesforce
     */
    "x-provider-name": string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * Send passthrough request
   * @deprecated
   * @description Send request directly to a provider
   */
  sendPassthroughRequest: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description The path to send the request to (do not pass the domain) */
          path: string;
          /**
           * @example GET
           * @enum {string}
           */
          method: "GET" | "POST" | "PUT" | "PATCH" | "DELETE";
          /** @description Headers to pass to downstream */
          headers?: {
            [key: string]: string;
          };
          /** @description Query parameters to pass to downstream */
          query?: {
            [key: string]: string;
          };
          /** @description Body to pass to downstream (can be string or JSON object) */
          body?: OneOf<[string, {
            [key: string]: unknown;
          }]>;
        };
      };
    };
    responses: {
      /** @description Passthrough response */
      200: {
        content: {
          "application/json": {
            /**
             * @description The full URL the request was went to
             * @example https://customengagement.com/api/cars
             */
            url: string;
            /**
             * @description Status code from the downstream
             * @example 200
             */
            status: number;
            /** @description The response headers from the downstream */
            headers: {
              [key: string]: string;
            };
            /** @description The body from the downstream */
            body?: string | number | boolean | {
                [key: string]: unknown;
              }[] | {
              [key: string]: unknown;
            };
          };
        };
      };
    };
  };
  /** List accounts */
  listAccounts: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Accounts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["account"][];
          };
        };
      };
    };
  };
  /** Create account */
  createAccount: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "record": {
         *     "id": 1234,
         *     "name": "My Company",
         *     "domain": "mycompany.com",
         *     "created_at": "2023-02-27T00:00:00Z"
         *   }
         * }
         */
        "application/json": {
          record: components["schemas"]["create_account"];
        };
      };
    };
    responses: {
      /** @description Account created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            record?: components["schemas"]["created_record"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /**
   * Get account
   * @description Support:
   *
   * | Provider   | Supported |
   * | ---------- | --------- |
   * | Salesloft  | Yes       |
   * | Outreach   | Yes       |
   * | Apollo     | No        |
   */
  getAccount: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        account_id: string;
      };
    };
    responses: {
      /** @description Account */
      200: {
        content: {
          "application/json": components["schemas"]["account"];
        };
      };
    };
  };
  /** Update account */
  updateAccount: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        account_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          record: components["schemas"]["create_account"];
        };
      };
    };
    responses: {
      /** @description Account updated */
      200: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /** List contacts */
  listContacts: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Contacts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["contact"][];
          };
        };
      };
    };
  };
  /**
   * Create contact
   * @description Some providers do not support `primary` phone number type, in which case we will default to `mobile`. If both `primary` and `mobile` phone numbers are specified and only a single mobile number is possible, then `mobile` will be used and `primary` will be dropped.
   */
  createContact: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "record": {
         *     "id": 1234,
         *     "address": {
         *       "city": "San Francisco",
         *       "country": "USA",
         *       "street_1": "525 Brannan St",
         *       "street_2": null,
         *       "postalCode": "94107",
         *       "state": "CA"
         *     },
         *     "email_addresses": [
         *       {
         *         "email_address": "hello@supaglue.com",
         *         "email_address_type": "workline2"
         *       }
         *     ],
         *     "first_name": "George",
         *     "last_name": "Xing",
         *     "phone_numbers": [
         *       {
         *         "phone_number": "+14151234567",
         *         "phone_number_type": "mobile"
         *       }
         *     ],
         *     "created_at": "2023-02-27T00:00:00Z"
         *   }
         * }
         */
        "application/json": {
          record: components["schemas"]["create_contact"];
        };
      };
    };
    responses: {
      /** @description Contact created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            record?: components["schemas"]["created_record"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /**
   * Search contacts
   * @description Search contacts by email. Note: This will perform a search directly in the 3rd-party provider, and not in the managed destination.
   */
  searchContacts: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        "application/json": {
          filter: {
            /**
             * @description The key to search on. Only `email` is supported for all providers.
             * @enum {string}
             */
            key: "email";
            /**
             * @description The value to search on.
             * @example hello@example.com
             */
            value: string;
          };
        };
      };
    };
    responses: {
      /** @description Paginated Contacts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["contact"][];
          };
        };
      };
    };
  };
  /** Get contact */
  getContact: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        contact_id: string;
      };
    };
    responses: {
      /** @description Contact */
      200: {
        content: {
          "application/json": components["schemas"]["contact"];
        };
      };
    };
  };
  /** Update contact */
  updateContact: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        contact_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          record: components["schemas"]["create_contact"];
        };
      };
    };
    responses: {
      /** @description Contact updated */
      200: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /** List users */
  listUsers: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Users */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["user"][];
          };
        };
      };
    };
  };
  /** Get user */
  getUser: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        user_id: string;
      };
    };
    responses: {
      /** @description User */
      200: {
        content: {
          "application/json": components["schemas"]["user"];
        };
      };
    };
  };
  /** List mailboxes */
  listMailboxes: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Mailboxes */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["mailbox"][];
          };
        };
      };
    };
  };
  /** Get mailbox */
  getMailbox: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        mailbox_id: string;
      };
    };
    responses: {
      /** @description Mailbox */
      200: {
        content: {
          "application/json": components["schemas"]["mailbox"];
        };
      };
    };
  };
  /** List sequences */
  listSequences: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Sequences */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["sequence"][];
          };
        };
      };
    };
  };
  /**
   * Create sequence
   * @description Note this uses an undocumented private api endpoint for Apollo and should be considered to be in alpha state
   */
  createSequence: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        "application/json": {
          record: components["schemas"]["create_sequence"];
        };
      };
    };
    responses: {
      /** @description Sequence created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            record?: components["schemas"]["created_record"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /** Get sequence */
  getSequence: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example 0258cbc6-6020-430a-848e-aafacbadf4ae */
        sequence_id: string;
      };
    };
    responses: {
      /** @description Sequence */
      200: {
        content: {
          "application/json": components["schemas"]["sequence"];
        };
      };
    };
  };
  /** Create sequence step */
  createSequenceStep: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /**
         * @description The ID of the sequence.
         * @example 0258cbc6-6020-430a-848e-aafacbadf4ae
         */
        sequence_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          record: components["schemas"]["create_sequence_step"];
        };
      };
    };
    responses: {
      /** @description Sequence step created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            record?: components["schemas"]["created_record"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /** List sequence states */
  listSequenceStates: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
        read_from_cache?: components["parameters"]["read_from_cache"];
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    responses: {
      /** @description Paginated Sequence States */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["sequence_state"][];
          };
        };
      };
    };
  };
  /**
   * Create sequence state
   * @description In other words, adding a sequencestate to sequence.
   */
  createSequenceState: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "record": {
         *     "id": "355843a5-c536-4e82-b497-05160bfb7d78",
         *     "state": "active",
         *     "mailbox_id": "a7e860b5-cb8b-400b-812d-921fa526140c",
         *     "sequencestate_id": "6bdcebc2-f886-4de3-88ed-0b9eb420f7b1",
         *     "sequence_id": "45e07817-fd59-4ec8-a727-066d2db27c9b",
         *     "created_at": "2023-02-27T00:00:00Z",
         *     "updated_at": "2023-02-27T00:00:00Z"
         *   }
         * }
         */
        "application/json": {
          record: components["schemas"]["create_sequence_state"];
        };
      };
    };
    responses: {
      /** @description Sequence state created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            record?: components["schemas"]["created_record"];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /**
   * Batch create sequence states
   * @description Add multiple contacts to a sequence atomically. You must pass in the same sequenceId, userId and mailboxId for all the contact records.
   *
   * Support:
   *
   * | Provider  | Supported |
   * | --------- | --------- |
   * | Apollo    | Yes       |
   * | Outreach  | No        |
   * | Salesloft | No        |
   */
  batchCreateSequenceState: {
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
    };
    requestBody: {
      content: {
        "application/json": {
          /** @description Will use the batch endpoints when possible (e.g. Apollo) */
          records: components["schemas"]["create_sequence_state"][];
        };
      };
    };
    responses: {
      /** @description Sequence states created */
      201: {
        content: {
          "application/json": {
            errors?: components["schemas"]["errors"];
            /** @description Created records, in order passed in */
            records?: components["schemas"]["created_record"][];
            warnings?: components["schemas"]["warnings"];
          };
        };
      };
    };
  };
  /** Get sequence state */
  getSequenceState: {
    parameters: {
      query?: {
        include_raw_data?: components["parameters"]["include_raw_data"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
        "x-provider-name": components["parameters"]["x-provider-name"];
      };
      path: {
        /** @example ffb62704-addd-454e-bb86-ed0799703dc6 */
        sequence_state_id: string;
      };
    };
    responses: {
      /** @description Sequence State */
      200: {
        content: {
          "application/json": components["schemas"]["sequence_state"];
        };
      };
    };
  };
}
