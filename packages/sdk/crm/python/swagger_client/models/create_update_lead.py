# coding: utf-8

"""
    Supaglue CRM API

    # Introduction  Welcome to the Supaglue unified CRM API documentation. You can use this API to read data that has been synced into Supaglue from third-party providers.  ### Base API URL  ``` http://localhost:8080/api/crm/v1 ```   # noqa: E501

    OpenAPI spec version: 0.3.3
    Contact: docs@supaglue.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CreateUpdateLead(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'company': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'lead_source': 'str',
        'title': 'str',
        'converted_account_id': 'str',
        'converted_contact_id': 'str'
    }

    attribute_map = {
        'company': 'company',
        'first_name': 'first_name',
        'last_name': 'last_name',
        'lead_source': 'lead_source',
        'title': 'title',
        'converted_account_id': 'converted_account_id',
        'converted_contact_id': 'converted_contact_id'
    }

    def __init__(self, company=None, first_name=None, last_name=None, lead_source=None, title=None, converted_account_id=None, converted_contact_id=None):  # noqa: E501
        """CreateUpdateLead - a model defined in Swagger"""  # noqa: E501
        self._company = None
        self._first_name = None
        self._last_name = None
        self._lead_source = None
        self._title = None
        self._converted_account_id = None
        self._converted_contact_id = None
        self.discriminator = None
        if company is not None:
            self.company = company
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if lead_source is not None:
            self.lead_source = lead_source
        if title is not None:
            self.title = title
        if converted_account_id is not None:
            self.converted_account_id = converted_account_id
        if converted_contact_id is not None:
            self.converted_contact_id = converted_contact_id

    @property
    def company(self):
        """Gets the company of this CreateUpdateLead.  # noqa: E501


        :return: The company of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this CreateUpdateLead.


        :param company: The company of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._company = company

    @property
    def first_name(self):
        """Gets the first_name of this CreateUpdateLead.  # noqa: E501


        :return: The first_name of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this CreateUpdateLead.


        :param first_name: The first_name of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this CreateUpdateLead.  # noqa: E501


        :return: The last_name of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this CreateUpdateLead.


        :param last_name: The last_name of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def lead_source(self):
        """Gets the lead_source of this CreateUpdateLead.  # noqa: E501


        :return: The lead_source of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._lead_source

    @lead_source.setter
    def lead_source(self, lead_source):
        """Sets the lead_source of this CreateUpdateLead.


        :param lead_source: The lead_source of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._lead_source = lead_source

    @property
    def title(self):
        """Gets the title of this CreateUpdateLead.  # noqa: E501


        :return: The title of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CreateUpdateLead.


        :param title: The title of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def converted_account_id(self):
        """Gets the converted_account_id of this CreateUpdateLead.  # noqa: E501


        :return: The converted_account_id of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._converted_account_id

    @converted_account_id.setter
    def converted_account_id(self, converted_account_id):
        """Sets the converted_account_id of this CreateUpdateLead.


        :param converted_account_id: The converted_account_id of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._converted_account_id = converted_account_id

    @property
    def converted_contact_id(self):
        """Gets the converted_contact_id of this CreateUpdateLead.  # noqa: E501


        :return: The converted_contact_id of this CreateUpdateLead.  # noqa: E501
        :rtype: str
        """
        return self._converted_contact_id

    @converted_contact_id.setter
    def converted_contact_id(self, converted_contact_id):
        """Sets the converted_contact_id of this CreateUpdateLead.


        :param converted_contact_id: The converted_contact_id of this CreateUpdateLead.  # noqa: E501
        :type: str
        """

        self._converted_contact_id = converted_contact_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreateUpdateLead, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreateUpdateLead):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
