/*
 * Supaglue CRM API
 * # Introduction  Welcome to the Supaglue unified CRM API documentation. You can use this API to read data that has been synced into Supaglue from third-party providers.  ### Base API URL  ``` http://localhost:8080/crm/v1 ``` 
 *
 * OpenAPI spec version: 0.4.1
 * Contact: docs@supaglue.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * InlineResponse2005
 */


public class InlineResponse2005 {
  @SerializedName("url")
  private String url = null;

  @SerializedName("status")
  private BigDecimal status = null;

  @SerializedName("headers")
  private Map<String, String> headers = new HashMap<String, String>();

  @SerializedName("body")
  private AnyOfinlineResponse2005Body body = null;

  public InlineResponse2005 url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The full URL the request was went to
   * @return url
  **/
  @Schema(example = "https://customcrm.com/api/cars", required = true, description = "The full URL the request was went to")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public InlineResponse2005 status(BigDecimal status) {
    this.status = status;
    return this;
  }

   /**
   * Status code from the downstream
   * @return status
  **/
  @Schema(example = "200", required = true, description = "Status code from the downstream")
  public BigDecimal getStatus() {
    return status;
  }

  public void setStatus(BigDecimal status) {
    this.status = status;
  }

  public InlineResponse2005 headers(Map<String, String> headers) {
    this.headers = headers;
    return this;
  }

  public InlineResponse2005 putHeadersItem(String key, String headersItem) {
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * The response headers from the downstream
   * @return headers
  **/
  @Schema(required = true, description = "The response headers from the downstream")
  public Map<String, String> getHeaders() {
    return headers;
  }

  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }

  public InlineResponse2005 body(AnyOfinlineResponse2005Body body) {
    this.body = body;
    return this;
  }

   /**
   * The body from the downstream
   * @return body
  **/
  @Schema(description = "The body from the downstream")
  public AnyOfinlineResponse2005Body getBody() {
    return body;
  }

  public void setBody(AnyOfinlineResponse2005Body body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005 inlineResponse2005 = (InlineResponse2005) o;
    return Objects.equals(this.url, inlineResponse2005.url) &&
        Objects.equals(this.status, inlineResponse2005.status) &&
        Objects.equals(this.headers, inlineResponse2005.headers) &&
        Objects.equals(this.body, inlineResponse2005.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, status, headers, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005 {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
