/*
 * Supaglue Management API
 * # Introduction  Welcome to the Supaglue Management API documentation. You can use this API to manage customer integrations and connections.  ### Base API URL  ``` http://localhost:8080/mgmt/v1 ``` 
 *
 * OpenAPI spec version: 0.6.0
 * Contact: docs@supaglue.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Category;
import io.swagger.client.model.ProviderName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Connection
 */


public class Connection {
  @SerializedName("id")
  private Object id = null;

  @SerializedName("status")
  private Object status = null;

  @SerializedName("application_id")
  private Object applicationId = null;

  @SerializedName("customer_id")
  private Object customerId = null;

  @SerializedName("integration_id")
  private Object integrationId = null;

  @SerializedName("provider_name")
  private ProviderName providerName = null;

  @SerializedName("category")
  private Category category = null;

  @SerializedName("remote_id")
  private Object remoteId = null;

  public Connection id(Object id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "e888cedf-e9d0-42c5-9485-2d72984faef2", required = true, description = "")
  public Object getId() {
    return id;
  }

  public void setId(Object id) {
    this.id = id;
  }

  public Connection status(Object status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(example = "available", required = true, description = "")
  public Object getStatus() {
    return status;
  }

  public void setStatus(Object status) {
    this.status = status;
  }

  public Connection applicationId(Object applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @Schema(example = "d8ceb3ff-8b7f-4fa7-b8de-849292f6ca69", required = true, description = "")
  public Object getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(Object applicationId) {
    this.applicationId = applicationId;
  }

  public Connection customerId(Object customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(example = "my-customer-1", required = true, description = "")
  public Object getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Object customerId) {
    this.customerId = customerId;
  }

  public Connection integrationId(Object integrationId) {
    this.integrationId = integrationId;
    return this;
  }

   /**
   * Get integrationId
   * @return integrationId
  **/
  @Schema(example = "9572d08b-f19f-48cc-a992-1eb7031d3f6a", required = true, description = "")
  public Object getIntegrationId() {
    return integrationId;
  }

  public void setIntegrationId(Object integrationId) {
    this.integrationId = integrationId;
  }

  public Connection providerName(ProviderName providerName) {
    this.providerName = providerName;
    return this;
  }

   /**
   * Get providerName
   * @return providerName
  **/
  @Schema(required = true, description = "")
  public ProviderName getProviderName() {
    return providerName;
  }

  public void setProviderName(ProviderName providerName) {
    this.providerName = providerName;
  }

  public Connection category(Category category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(required = true, description = "")
  public Category getCategory() {
    return category;
  }

  public void setCategory(Category category) {
    this.category = category;
  }

  public Connection remoteId(Object remoteId) {
    this.remoteId = remoteId;
    return this;
  }

   /**
   * Get remoteId
   * @return remoteId
  **/
  @Schema(example = "123456", required = true, description = "")
  public Object getRemoteId() {
    return remoteId;
  }

  public void setRemoteId(Object remoteId) {
    this.remoteId = remoteId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Connection connection = (Connection) o;
    return Objects.equals(this.id, connection.id) &&
        Objects.equals(this.status, connection.status) &&
        Objects.equals(this.applicationId, connection.applicationId) &&
        Objects.equals(this.customerId, connection.customerId) &&
        Objects.equals(this.integrationId, connection.integrationId) &&
        Objects.equals(this.providerName, connection.providerName) &&
        Objects.equals(this.category, connection.category) &&
        Objects.equals(this.remoteId, connection.remoteId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, applicationId, customerId, integrationId, providerName, category, remoteId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Connection {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    remoteId: ").append(toIndentedString(remoteId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
