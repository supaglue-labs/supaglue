/*
 * Supaglue Management API
 * # Introduction  Welcome to the Supaglue Management API documentation. You can use this API to manage customer integrations and connections.  ### Base API URL  ``` http://localhost:8080/mgmt/v1 ``` 
 *
 * OpenAPI spec version: 0.4.1
 * Contact: docs@supaglue.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Webhook
 */


public class Webhook {
  @SerializedName("url")
  private Object url = null;

  @SerializedName("request_type")
  private Object requestType = null;

  @SerializedName("notify_on_sync_success")
  private Object notifyOnSyncSuccess = null;

  @SerializedName("notify_on_sync_error")
  private Object notifyOnSyncError = null;

  @SerializedName("notify_on_connection_success")
  private Object notifyOnConnectionSuccess = null;

  @SerializedName("notify_on_connection_error")
  private Object notifyOnConnectionError = null;

  @SerializedName("headers")
  private Object headers = null;

  public Webhook url(Object url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(required = true, description = "")
  public Object getUrl() {
    return url;
  }

  public void setUrl(Object url) {
    this.url = url;
  }

  public Webhook requestType(Object requestType) {
    this.requestType = requestType;
    return this;
  }

   /**
   * Get requestType
   * @return requestType
  **/
  @Schema(required = true, description = "")
  public Object getRequestType() {
    return requestType;
  }

  public void setRequestType(Object requestType) {
    this.requestType = requestType;
  }

  public Webhook notifyOnSyncSuccess(Object notifyOnSyncSuccess) {
    this.notifyOnSyncSuccess = notifyOnSyncSuccess;
    return this;
  }

   /**
   * Get notifyOnSyncSuccess
   * @return notifyOnSyncSuccess
  **/
  @Schema(required = true, description = "")
  public Object getNotifyOnSyncSuccess() {
    return notifyOnSyncSuccess;
  }

  public void setNotifyOnSyncSuccess(Object notifyOnSyncSuccess) {
    this.notifyOnSyncSuccess = notifyOnSyncSuccess;
  }

  public Webhook notifyOnSyncError(Object notifyOnSyncError) {
    this.notifyOnSyncError = notifyOnSyncError;
    return this;
  }

   /**
   * Get notifyOnSyncError
   * @return notifyOnSyncError
  **/
  @Schema(required = true, description = "")
  public Object getNotifyOnSyncError() {
    return notifyOnSyncError;
  }

  public void setNotifyOnSyncError(Object notifyOnSyncError) {
    this.notifyOnSyncError = notifyOnSyncError;
  }

  public Webhook notifyOnConnectionSuccess(Object notifyOnConnectionSuccess) {
    this.notifyOnConnectionSuccess = notifyOnConnectionSuccess;
    return this;
  }

   /**
   * Get notifyOnConnectionSuccess
   * @return notifyOnConnectionSuccess
  **/
  @Schema(required = true, description = "")
  public Object getNotifyOnConnectionSuccess() {
    return notifyOnConnectionSuccess;
  }

  public void setNotifyOnConnectionSuccess(Object notifyOnConnectionSuccess) {
    this.notifyOnConnectionSuccess = notifyOnConnectionSuccess;
  }

  public Webhook notifyOnConnectionError(Object notifyOnConnectionError) {
    this.notifyOnConnectionError = notifyOnConnectionError;
    return this;
  }

   /**
   * Get notifyOnConnectionError
   * @return notifyOnConnectionError
  **/
  @Schema(required = true, description = "")
  public Object getNotifyOnConnectionError() {
    return notifyOnConnectionError;
  }

  public void setNotifyOnConnectionError(Object notifyOnConnectionError) {
    this.notifyOnConnectionError = notifyOnConnectionError;
  }

  public Webhook headers(Object headers) {
    this.headers = headers;
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @Schema(description = "")
  public Object getHeaders() {
    return headers;
  }

  public void setHeaders(Object headers) {
    this.headers = headers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webhook webhook = (Webhook) o;
    return Objects.equals(this.url, webhook.url) &&
        Objects.equals(this.requestType, webhook.requestType) &&
        Objects.equals(this.notifyOnSyncSuccess, webhook.notifyOnSyncSuccess) &&
        Objects.equals(this.notifyOnSyncError, webhook.notifyOnSyncError) &&
        Objects.equals(this.notifyOnConnectionSuccess, webhook.notifyOnConnectionSuccess) &&
        Objects.equals(this.notifyOnConnectionError, webhook.notifyOnConnectionError) &&
        Objects.equals(this.headers, webhook.headers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, requestType, notifyOnSyncSuccess, notifyOnSyncError, notifyOnConnectionSuccess, notifyOnConnectionError, headers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webhook {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    notifyOnSyncSuccess: ").append(toIndentedString(notifyOnSyncSuccess)).append("\n");
    sb.append("    notifyOnSyncError: ").append(toIndentedString(notifyOnSyncError)).append("\n");
    sb.append("    notifyOnConnectionSuccess: ").append(toIndentedString(notifyOnConnectionSuccess)).append("\n");
    sb.append("    notifyOnConnectionError: ").append(toIndentedString(notifyOnConnectionError)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
