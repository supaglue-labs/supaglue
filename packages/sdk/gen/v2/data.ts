/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/salesforce/contacts": {
    /**
     * List contacts
     * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
     */
    get: operations["listSalesforceContacts"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
  };
  "/salesforce/accounts": {
    /**
     * List accounts
     * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
     */
    get: operations["listSalesforceAccounts"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
  };
  "/hubspot/contacts": {
    /**
     * List contacts
     * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
     */
    get: operations["listHubspotContacts"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
  };
  "/hubspot/companies": {
    /**
     * List companies
     * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
     */
    get: operations["listHubspotCompanies"];
    parameters: {
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    salesforce_contact: {
      /** @description The unique identifier for this contact. */
      Id: string;
      /** @description A description of the contact. */
      Description: string | null;
      /** @description The contact's email address. */
      Email: string | null;
      /** @description ID of the account that's the parent of this contact. This is a relationship field. */
      AccountId: string | null;
      /** @description The contact's first name up to 40 characters. */
      FirstName: string | null;
      /** @description The contact's home phone number. */
      HomePhone: string | null;
      /** @description Indicates whether the object has been moved to the Recycle Bin (true) or not (false). */
      IsDeleted: boolean;
      /**
       * Format: date-time
       * @description The date of the last activity on a contact. The LastActivityDate is set to whichever is more recent -- the LastActivityDate of a related task or event or the LastModifiedDate of a contact's record.
       * @example 2022-02-27T00:00:00Z
       */
      LastActivityDate: Date | null;
      /** @description The contact's last name. Maximum size is 80 characters. */
      LastName: string | null;
      /** @description The source of the lead. */
      LeadSource: string | null;
      /** @description The city of the mailing address of this contact. */
      MailingCity: string | null;
      /** @description The country of the mailing address of this contact. */
      MailingCountry: string | null;
      /** @description The postal code of the mailing address of this contact. */
      MailingPostalCode: string | null;
      /** @description The state of the mailijng address of this contact. */
      MailingState: string | null;
      /** @description The street of the mailing address of this contact. */
      MailingStreet: string | null;
      /** @description The contact's mobile phone number. */
      MobilePhone: string | null;
      /** @description ID of the user who owns this contact. This is a relationship field. */
      OwnerId: string | null;
      /** @description The contact's phone number. */
      Phone: string | null;
      /** @description The contact's fax number. */
      Fax: string | null;
      /** @description The contact's title. */
      Title: string | null;
      /**
       * Format: date-time
       * @description The date and time when this contact was created.
       * @example 2022-02-27T00:00:00Z
       */
      CreatedDate: Date;
      /**
       * Format: date-time
       * @description The date and time when this contact was last modified.
       * @example 2022-02-27T00:00:00Z
       */
      SystemModstamp: Date;
      /** @description The raw data returned by the provider. */
      raw_data: {
        [key: string]: unknown;
      };
    };
    salesforce_account: {
      /** @description The unique identifier for this account. */
      Id: string;
      /** @description A description of the contact. */
      Description: string | null;
      /** @description The city of the billing address of this contact. */
      BillingCity: string | null;
      /** @description The country of the billing address of this contact. */
      BillingCountry: string | null;
      /** @description The postal code of the billing address of this contact. */
      BillingPostalCode: string | null;
      /** @description The state of the billing address of this contact. */
      BillingState: string | null;
      /** @description The street of the billing address of this contact. */
      BillingStreet: string | null;
      /** @description The city of the shipping address of this contact. */
      ShippingCity: string | null;
      /** @description The country of the shipping address of this contact. */
      ShippingCountry: string | null;
      /** @description The postal code of the shipping address of this contact. */
      ShippingPostalCode: string | null;
      /** @description The state of the shipping address of this contact. */
      ShippingState: string | null;
      /** @description The street of the shipping address of this contact. */
      ShippingStreet: string | null;
      /** @description The account's phone number. */
      Phone: string | null;
      /** @description The account's fax number. */
      Fax: string | null;
      /** @description The type of industry in which the account operates. */
      Industry: string | null;
      /**
       * Format: date-time
       * @description The date of the last activity on an account. The LastActivityDate is set to whichever is more recent -- the LastActivityDate of a related task or event or the LastModifiedDate of an account's record.
       * @example 2022-02-27T00:00:00Z
       */
      LastActivityDate: Date | null;
      /** @description The name of the account. Maximum size is 255 characters. */
      Name: string | null;
      /** @description The number of employees that work at the account. */
      NumberOfEmployees: number | null;
      /** @description ID of the user who owns this account. This is a relationship field. */
      OwnerId: string | null;
      /** @description The account's website URL. */
      Website: string | null;
      /** @description Indicates whether the object has been moved to the Recycle Bin (true) or not (false). */
      IsDeleted: boolean;
      /**
       * Format: date-time
       * @description The date and time when this contact was created.
       * @example 2022-02-27T00:00:00Z
       */
      CreatedDate: Date;
      /**
       * Format: date-time
       * @description The date and time when this contact was last modified.
       * @example 2022-02-27T00:00:00Z
       */
      SystemModstamp: Date;
      /** @description The raw data returned by the provider. */
      raw_data: {
        [key: string]: unknown;
      };
    };
    hubspot_contact: {
      /**
       * @description the unique identifier for the contact. This field is set automatically and cannot be edited. This can be used when updating contacts through importing or through API.
       * @example 501
       */
      id: string;
      /**
       * @description the contact's primary email address.
       * @example team@supaglue.com
       */
      email: string | null;
      /** @example 101 */
      associatedcompanyid: string | null;
      /**
       * @description the contact's first name.
       * @example Jane
       */
      firstname: string | null;
      /**
       * @description the contact's primary phone number. The phone number is validated and formatted automatically by HubSpot based on the country code. You can select to turn off automatic formatting on a contact record, either when editing the Phone number property, or adding a phone number to call.
       * @example (650) 450-8812
       */
      phone: string | null;
      /**
       * @description Indicates whether the object has been moved to the Recycle Bin (true) or not (false).
       * @example false
       */
      is_deleted: boolean;
      /**
       * @description the contact's last name.
       * @example Doe
       */
      lastname: string | null;
      /**
       * @description the contact's city of residence.
       * @example Palo Alto
       */
      city: string | null;
      /**
       * @description the contact's country of residence. This might be set via import, form, or integration.
       * @example United States
       */
      country: string | null;
      /**
       * @description the contact's zip code.
       * @example 94303
       */
      zip: string | null;
      /**
       * @description the contact's state of residence.
       * @example CA
       */
      state: string | null;
      /**
       * @description the contact's street address, including apartment or unit #.
       * @example 4 Giro's Passage
       */
      address: string | null;
      /**
       * @description the contact's mobile phone number. The phone number is validated and formatted automatically by HubSpot based on the country code. You can select to turn off automatic formatting on a contact record, either when editing the Mobile phone number property, or adding a phone number to call.
       * @example (650) 450-8811
       */
      mobilephone: string | null;
      /**
       * @description the owner of the contact. This can be any HubSpot user or Salesforce integration user and can be set manually or via Workflows. You can assign additional users to the contact record by creating a custom HubSpot user field type property.
       * @example 1450461
       */
      hubspot_owner_id: string | null;
      /**
       * @description the contact's primary fax number.
       * @example (650) 450-8810
       */
      fax: string | null;
      /**
       * @description the contact's job title.
       * @example CEO
       */
      jobtitle: string | null;
      /**
       * Format: date-time
       * @description the date that the contact was created in your HubSpot account.
       * @example 2023-08-01T20:58:17.725Z
       */
      createdate: Date;
      /**
       * Format: date-time
       * @description the last date and time a note, call, tracked and logged sales email, meeting, LinkedIn/SMS/WhatsApp message, task, or chat was logged on the contact record. This is set automatically by HubSpot based on the most recent date/time set for an activity. For example, if a user logs a call and indicates that it occurred the day before, the Last activity date property will show yesterday's date.
       * @example 2023-08-01T20:58:17.725Z
       */
      notes_last_updated: Date;
      /** @description The raw data returned by the provider. */
      raw_data: {
        [key: string]: unknown;
      };
    };
    hubspot_company: {
      /**
       * @description the unique identifier for the company. This field is set automatically and cannot be edited. This can be used when updating companies through importing or through API.
       * @example 101
       */
      id: string;
      /**
       * @description a short statement about the company's mission and goals.
       * @example Open-source developer platform for customer-facing integrations
       */
      description: string | null;
      /**
       * @description the city where the company is located.
       * @example San Francisco
       */
      city: string | null;
      /**
       * @description the country where the company is located.
       * @example United States
       */
      country: string | null;
      /**
       * @description postal or zip code for the company.
       * @example 94025
       */
      zip: string | null;
      /**
       * @description the state or region where the company is located.
       * @example CA
       */
      state: string | null;
      /**
       * @description the street address of the company.
       * @example 525 Brannan St
       */
      address: string | null;
      /**
       * @description the company's primary phone number.
       * @example (650) 450-8810
       */
      phone: string | null;
      /**
       * @description the type of business the company performs. By default, this property has approximately 150 pre-defined options to select from. These options cannot be deleted, as they are used by HubSpot Insights, but you can add new custom options to meet your needs.
       * @example COMPUTER SOFTWARE
       */
      industry: string | null;
      /**
       * @description the name of the company.
       * @example Supaglue
       */
      name: string | null;
      /**
       * @description total number of people who work for the company.
       * @example 3000
       */
      numberofemployees: string | null;
      /**
       * @description the HubSpot user that the company is assigned to. You can assign additional users to a company record by creating a custom HubSpot user property.
       * @example 101
       */
      hubspot_owner_id: string | null;
      /**
       * @description the company's website domain. HubSpot Insights uses this domain to provide you with basic information about the company. Every property marked with an asterisk (*) can be populated automatically by HubSpot Insights once the domain name is populated.
       * @example uos.com.sg
       */
      domain: string | null;
      /**
       * @description the company's web address. Filling in this property will also fill in Company domain name.
       * @example http://www.uos.com.sg
       */
      website: string | null;
      /** @example false */
      is_deleted: boolean;
      /**
       * Format: date-time
       * @description the date the company was added to your account.
       * @example 2023-08-01T20:58:17.725Z
       */
      createdate: Date;
      /**
       * Format: date-time
       * @description the last date and time a note, call, tracked and logged sales email, meeting, LinkedIn/SMS/WhatsApp message, task, or chat was logged on the company record. This is set automatically by HubSpot based on the most recent date/time set for an activity. For example, if a user logs a call and indicates that it occurred the day before, the Last activity date property will show yesterday's date.
       * @example 2023-08-01T20:58:17.725Z
       */
      notes_last_updated: Date;
      /** @description The raw data returned by the provider. */
      raw_data: {
        [key: string]: unknown;
      };
    };
    pagination: {
      /** @example eyJpZCI6IjQyNTc5ZjczLTg1MjQtNDU3MC05YjY3LWVjYmQ3MDJjNmIxNCIsInJldmVyc2UiOmZhbHNlfQ== */
      next: string | null;
      /** @example eyJpZCI6IjBjZDhmYmZkLWU5NmQtNDEwZC05ZjQxLWIwMjU1YjdmNGI4NyIsInJldmVyc2UiOnRydWV9 */
      previous: string | null;
      /** @example 100 */
      total_count?: number;
    };
    errors: ({
        /**
         * @description A unique identifier for the instance of the error. Provide this to support when contacting Supaglue.
         * @example 9366efb4-8fb1-4a28-bfb0-8d6f9cc6b5c5
         */
        id: string;
        /**
         * @description A detailed description of the error.
         * @example Property values were not valid: [{"isValid":false,"message":"Property \"__about_us\" does not exist","error":"PROPERTY_DOESNT_EXIST","name":"__about_us","localizedErrorMessage":"Property \"__about_us\" does not exist"}]
         */
        detail: string;
        /**
         * @deprecated
         * @description The Supaglue error code associated with the error.
         * @example MISSING_REQUIRED_FIELD
         */
        problem_type: string;
        /**
         * @description A brief description of the error. The schema and type of message will vary by Provider.
         * @example Property values were not valid
         */
        title: string;
        /**
         * @description The Supaglue error code associated with the error.
         * @example MISSING_REQUIRED_FIELD
         */
        code: string;
        /**
         * @description The HTTP status code associated with the error.
         * @example 400
         */
        status: string;
        /** @description Additional metadata about the error. */
        meta: {
          /**
           * @description The cause of the error. Usually the underlying error from the remote Provider.
           * @example {
           *   "code": 400,
           *   "body": {
           *     "status": "error",
           *     "message": "Property values were not valid: [{\"isValid\":false,\"message\":\"Property \\\"__about_us\\\" does not exist\",\"error\":\"PROPERTY_DOESNT_EXIST\",\"name\":\"__about_us\",\"localizedErrorMessage\":\"Property \\\"__about_us\\\" does not exist\"}]",
           *     "correlationId": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "category": "VALIDATION_ERROR"
           *   },
           *   "headers": {
           *     "access-control-allow-credentials": "false",
           *     "cf-cache-status": "DYNAMIC",
           *     "cf-ray": "8053d17b9dae9664-SJC",
           *     "connection": "close",
           *     "content-length": "361",
           *     "content-type": "application/json;charset=utf-8",
           *     "date": "Mon, 11 Sep 2023 23:51:22 GMT",
           *     "nel": "{\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}",
           *     "report-to": "{\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v3?s=FgwuXObO%2Fz6ahUJKsxjDLaXTWjooJ8tB0w4%2B%2BKaulGStx0FGkn1PoJoOx2KrFMfihzNdfAqikq7CmgbdlmwKB8hkmp3eTb68qpg10LXFlRgiSqRhbWM7yYSfo8CXmPBc\"}],\"group\":\"cf-nel\",\"max_age\":604800}",
           *     "server": "cloudflare",
           *     "strict-transport-security": "max-age=31536000; includeSubDomains; preload",
           *     "vary": "origin, Accept-Encoding",
           *     "x-content-type-options": "nosniff",
           *     "x-envoy-upstream-service-time": "91",
           *     "x-evy-trace-listener": "listener_https",
           *     "x-evy-trace-route-configuration": "listener_https/all",
           *     "x-evy-trace-route-service-name": "envoyset-translator",
           *     "x-evy-trace-served-by-pod": "iad02/hubapi-td/envoy-proxy-6c94986c56-9xsh2",
           *     "x-evy-trace-virtual-host": "all",
           *     "x-hubspot-correlation-id": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "x-hubspot-ratelimit-interval-milliseconds": "10000",
           *     "x-hubspot-ratelimit-max": "100",
           *     "x-hubspot-ratelimit-remaining": "99",
           *     "x-hubspot-ratelimit-secondly": "10",
           *     "x-hubspot-ratelimit-secondly-remaining": "9",
           *     "x-request-id": "ac94252c-90b5-45d2-ad1d-9a9f7651d7d2",
           *     "x-trace": "2B1B4386362759B6A4C34802AD168B803DDC1BE770000000000000000000"
           *   }
           * }
           */
          cause?: Record<string, never>;
          /**
           * @description The origin of the error.
           * @example remote-provider
           * @enum {string}
           */
          origin: "remote-provider" | "supaglue";
          /**
           * @description The name of the application that generated the error.
           * @example MyCompany Production
           */
          application_name?: string;
          [key: string]: unknown;
        };
      })[];
    warnings: {
        detail?: string;
        problem_type?: string;
        title?: string;
      }[];
  };
  responses: {
    /** @description Bad request */
    badRequest: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Conflict */
    conflict: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Forbidden */
    forbidden: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Internal server error */
    internalServerError: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Not found */
    notFound: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Not implemented */
    notImplemented: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Remote provider error */
    remoteProviderError: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Unauthorized */
    unauthorized: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
    /** @description Unprocessable entity */
    unprocessableEntity: {
      content: {
        "application/json": {
          errors?: components["schemas"]["errors"];
        };
      };
    };
  };
  parameters: {
    /**
     * @description The customer ID that uniquely identifies the customer in your application
     * @example my-customer-1
     */
    "x-customer-id": string;
    /**
     * @description The provider name
     * @example salesforce
     */
    "x-provider-name": string;
    /**
     * @description If provided, will only return objects modified after this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    modified_after?: Date;
    /**
     * @description If provided, will only return objects modified before this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    modified_before?: Date;
    /**
     * @description If provided, will only return objects created after this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    created_after?: Date;
    /**
     * @description If provided, will only return objects created before this datetime. Datetime must be in ISO 8601 format and URI encoded.
     * @example 2023-02-23T00:00:00Z
     */
    created_before?: Date;
    /**
     * @description Whether to include data that was deleted in providers.
     * @example true
     */
    include_deleted_data?: boolean;
    /**
     * @description Number of results to return per page. (Max: 1000)
     * @example 123
     */
    page_size?: string;
    /**
     * @description The pagination cursor value
     * @example cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw
     */
    cursor?: string;
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /**
   * List contacts
   * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
   */
  listSalesforceContacts: {
    parameters: {
      query?: {
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
    responses: {
      /** @description Contacts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["salesforce_contact"][];
          };
        };
      };
      400: components["responses"]["badRequest"];
      401: components["responses"]["unauthorized"];
      403: components["responses"]["forbidden"];
      404: components["responses"]["notFound"];
      499: components["responses"]["remoteProviderError"];
      500: components["responses"]["internalServerError"];
      501: components["responses"]["notImplemented"];
    };
  };
  /**
   * List accounts
   * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
   */
  listSalesforceAccounts: {
    parameters: {
      query?: {
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
    responses: {
      /** @description Accounts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["salesforce_account"][];
          };
        };
      };
      400: components["responses"]["badRequest"];
      401: components["responses"]["unauthorized"];
      403: components["responses"]["forbidden"];
      404: components["responses"]["notFound"];
      499: components["responses"]["remoteProviderError"];
      500: components["responses"]["internalServerError"];
      501: components["responses"]["notImplemented"];
    };
  };
  /**
   * List contacts
   * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
   */
  listHubspotContacts: {
    parameters: {
      query?: {
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
    responses: {
      /** @description Contacts */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["hubspot_contact"][];
          };
        };
      };
      400: components["responses"]["badRequest"];
      401: components["responses"]["unauthorized"];
      403: components["responses"]["forbidden"];
      404: components["responses"]["notFound"];
      499: components["responses"]["remoteProviderError"];
      500: components["responses"]["internalServerError"];
      501: components["responses"]["notImplemented"];
    };
  };
  /**
   * List companies
   * @description **NOTE**: To use the Data Listing API you need to use the Supaglue Managed Destination and select [Standard Objects](https://docs.supaglue.com/next/platform/objects/overview#configuration) to be synced.
   */
  listHubspotCompanies: {
    parameters: {
      query?: {
        modified_after?: components["parameters"]["modified_after"];
        page_size?: components["parameters"]["page_size"];
        cursor?: components["parameters"]["cursor"];
      };
      header: {
        "x-customer-id": components["parameters"]["x-customer-id"];
      };
    };
    responses: {
      /** @description Companies */
      200: {
        content: {
          "application/json": {
            pagination: components["schemas"]["pagination"];
            records: components["schemas"]["hubspot_company"][];
          };
        };
      };
      400: components["responses"]["badRequest"];
      401: components["responses"]["unauthorized"];
      403: components["responses"]["forbidden"];
      404: components["responses"]["notFound"];
      499: components["responses"]["remoteProviderError"];
      500: components["responses"]["internalServerError"];
      501: components["responses"]["notImplemented"];
    };
  };
}
