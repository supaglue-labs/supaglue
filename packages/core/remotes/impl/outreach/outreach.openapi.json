{
  "openapi": "3.0.3",
  "info": {
    "title": "Outreach REST API Reference",
    "version": ""
  },
  "servers": [
    {
      "url": "https://api.outreach.io/api/v2"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/account\" />\n\n## Account Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/accountRelationships\" />\n\n## Account Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Account has to external sources. | provideDataConnections |\n\n\n## ⌵ Account Actions\n\n",
      "name": "Account",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/audit\" />\n\n## ⌵ Audit Actions\n\n",
      "name": "Audit",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/callDisposition\" />\n\n## Call Disposition Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/callDispositionRelationships\" />\n\n## Call Disposition Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Call Disposition Actions\n\n",
      "name": "Call Disposition",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/callPurpose\" />\n\n## Call Purpose Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/callPurposeRelationships\" />\n\n## Call Purpose Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Call Purpose Actions\n\n",
      "name": "Call Purpose",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/call\" />\n\n## Call Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/callRelationships\" />\n\n## Call Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Call has to external sources. | provideDataConnections |\n\n\n## ⌵ Call Actions\n\n",
      "name": "Call",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/complianceRequest\" />\n\n## Compliance Request Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/complianceRequestRelationships\" />\n\n## ⌵ Compliance Request Actions\n\n",
      "name": "Compliance Request",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/contentCategory\" />\n\n## Content Category Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/contentCategoryRelationships\" />\n\n## Content Category Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Content Category Actions\n\n",
      "name": "Content Category",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/contentCategoryMembership\" />\n\n## Content Category Membership Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/contentCategoryMembershipRelationships\" />\n\n## Content Category Membership Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Content Category Membership Actions\n\n",
      "name": "Content Category Membership",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/contentCategoryOwnership\" />\n\n## Content Category Ownership Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/contentCategoryOwnershipRelationships\" />\n\n## Content Category Ownership Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Content Category Ownership Actions\n\n",
      "name": "Content Category Ownership",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/customDuty\" />\n\n## ⌵ Custom Duty Actions\n\n",
      "name": "Custom Duty",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/duty\" />\n\n## ⌵ Duty Actions\n\n",
      "name": "Duty",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/emailAddress\" />\n\n## Email Address Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/emailAddressRelationships\" />\n\n## Email Address Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Email Address Actions\n\n",
      "name": "Email Address",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/event\" />\n\n## Event Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/eventRelationships\" />\n\n## ⌵ Event Actions\n\n",
      "name": "Event",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/favorite\" />\n\n## Favorite Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/favoriteRelationships\" />\n\n## Favorite Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Favorite Actions\n\n",
      "name": "Favorite",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/mailAlias\" />\n\n## Mail Alias Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/mailAliasRelationships\" />\n\n## ⌵ Mail Alias Actions\n\n",
      "name": "Mail Alias",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/mailbox\" />\n\n## Mailbox Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/mailboxRelationships\" />\n\n## Mailbox Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Mailbox Actions\n\n",
      "name": "Mailbox",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/mailing\" />\n\n## Mailing Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/mailingRelationships\" />\n\n## Mailing Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Mailing has to external sources. | provideDataConnections |\n\n\n## ⌵ Mailing Actions\n\n",
      "name": "Mailing",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/opportunity\" />\n\n## Opportunity Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/opportunityRelationships\" />\n\n## Opportunity Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Opportunity has to external sources. | provideDataConnections |\n\n\n## ⌵ Opportunity Actions\n\n",
      "name": "Opportunity",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/opportunityProspectRole\" />\n\n## Opportunity Prospect Role Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/opportunityProspectRoleRelationships\" />\n\n## Opportunity Prospect Role Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Opportunity Prospect Role Actions\n\n",
      "name": "Opportunity Prospect Role",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/opportunityStage\" />\n\n## Opportunity Stage Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/opportunityStageRelationships\" />\n\n## Opportunity Stage Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Opportunity Stage has to external sources. | provideDataConnections |\n\n\n## ⌵ Opportunity Stage Actions\n\n",
      "name": "Opportunity Stage",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/persona\" />\n\n## Persona Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/personaRelationships\" />\n\n## Persona Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Persona Actions\n\n",
      "name": "Persona",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/phoneNumber\" />\n\n## Phone Number Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/phoneNumberRelationships\" />\n\n## Phone Number Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Phone Number Actions\n\n",
      "name": "Phone Number",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/profile\" />\n\n## Profile Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Profile Actions\n\n",
      "name": "Profile",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/prospect\" />\n\n## Prospect Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/prospectRelationships\" />\n\n## Prospect Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Prospect has to external sources. | provideDataConnections |\n\n\n## ⌵ Prospect Actions\n\n",
      "name": "Prospect",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/recipient\" />\n\n## Recipient Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Recipient Actions\n\n",
      "name": "Recipient",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/role\" />\n\n## Role Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/roleRelationships\" />\n\n## Role Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Role Actions\n\n",
      "name": "Role",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ruleset\" />\n\n## Ruleset Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/rulesetRelationships\" />\n\n## Ruleset Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Ruleset Actions\n\n",
      "name": "Ruleset",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/sequenceState\" />\n\n## Sequence State Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/sequenceStateRelationships\" />\n\n## Sequence State Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Sequence State Actions\n\n",
      "name": "Sequence State",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/sequenceStep\" />\n\n## Sequence Step Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/sequenceStepRelationships\" />\n\n## Sequence Step Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Sequence Step Actions\n\n",
      "name": "Sequence Step",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/sequenceTemplate\" />\n\n## Sequence Template Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/sequenceTemplateRelationships\" />\n\n## Sequence Template Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Sequence Template Actions\n\n",
      "name": "Sequence Template",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/sequence\" />\n\n## Sequence Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/sequenceRelationships\" />\n\n## Sequence Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Sequence Actions\n\n",
      "name": "Sequence",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/snippet\" />\n\n## Snippet Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/snippetRelationships\" />\n\n## Snippet Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Snippet Actions\n\n",
      "name": "Snippet",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/stage\" />\n\n## Stage Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/stageRelationships\" />\n\n## Stage Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Stage has to external sources. | provideDataConnections |\n\n\n## ⌵ Stage Actions\n\n",
      "name": "Stage",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/taskPriority\" />\n\n## Task Priority Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/taskPriorityRelationships\" />\n\n## ⌵ Task Priority Actions\n\n",
      "name": "Task Priority",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/task\" />\n\n## Task Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/taskRelationships\" />\n\n## Task Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given Task has to external sources. | provideDataConnections |\n\n\n## ⌵ Task Actions\n\n",
      "name": "Task",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/team\" />\n\n## Team Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/teamRelationships\" />\n\n## Team Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Team Actions\n\n",
      "name": "Team",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/template\" />\n\n## Template Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/templateRelationships\" />\n\n## Template Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Template Actions\n\n",
      "name": "Template",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/user\" />\n\n## User Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/userRelationships\" />\n\n## User Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  dataConnections | The set of connections a given User has to external sources. | provideDataConnections |\n\n\n## ⌵ User Actions\n\n",
      "name": "User",
      "x-internal": false
    },
    {
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/webhook\" />\n\n## Webhook Relationships\n\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookRelationships\" />\n\n## Webhook Resource Metadata\n\n| **METADATA NAME**| **DESCRIPTION** | **QUERY PARAM** |\n| --- | --- | --- |\n|  canWrite | A boolean value indicating whether the current API user has write access to this resource. | provideAuthorizationMeta |\n|  canDelete | A boolean value indicating whether the current API user has delete access to this resource. | provideAuthorizationMeta |\n\n\n## ⌵ Webhook Actions\n\n",
      "name": "Webhook",
      "x-internal": false
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/accountResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Accounts",
        "tags": ["Account"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/account"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/accountRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/accountResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Account",
        "tags": ["Account"],
        "x-internal": false
      }
    },
    "/accounts/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Account by ID",
        "tags": ["Account"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/accountResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get an Account by ID",
        "tags": ["Account"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/account"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/accountRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/account"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/accountRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update an Account",
        "tags": ["Account"],
        "x-internal": false
      }
    },
    "/audits": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/auditResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Audits",
        "tags": ["Audit"],
        "x-internal": false
      }
    },
    "/callDispositions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/callDispositionResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Call Dispositions",
        "tags": ["Call Disposition"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/callDisposition"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/callDispositionRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callDispositionResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Call Disposition",
        "tags": ["Call Disposition"],
        "x-internal": false
      }
    },
    "/callDispositions/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Call Disposition by ID",
        "tags": ["Call Disposition"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callDispositionResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Call Disposition by ID",
        "tags": ["Call Disposition"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/callDisposition"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/callDispositionRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/callDisposition"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/callDispositionRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Call Disposition",
        "tags": ["Call Disposition"],
        "x-internal": false
      }
    },
    "/callPurposes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/callPurposeResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Call Purposes",
        "tags": ["Call Purpose"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/callPurpose"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/callPurposeRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callPurposeResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Call Purpose",
        "tags": ["Call Purpose"],
        "x-internal": false
      }
    },
    "/callPurposes/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Call Purpose by ID",
        "tags": ["Call Purpose"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callPurposeResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Call Purpose by ID",
        "tags": ["Call Purpose"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/callPurpose"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/callPurposeRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/callPurpose"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/callPurposeRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Call Purpose",
        "tags": ["Call Purpose"],
        "x-internal": false
      }
    },
    "/calls": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/callResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Calls",
        "tags": ["Call"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/call"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/callRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Call",
        "tags": ["Call"],
        "x-internal": false
      }
    },
    "/calls/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Call by ID",
        "tags": ["Call"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/callResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Call by ID",
        "tags": ["Call"],
        "x-internal": false
      }
    },
    "/complianceRequests": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/complianceRequestResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Compliance Requests",
        "tags": ["Compliance Request"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/complianceRequest"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/complianceRequestRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/complianceRequestResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Compliance Request",
        "tags": ["Compliance Request"],
        "x-internal": false
      }
    },
    "/complianceRequests/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/complianceRequestResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Compliance Request by ID",
        "tags": ["Compliance Request"],
        "x-internal": false
      }
    },
    "/contentCategories": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/contentCategoryResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Content Categories",
        "tags": ["Content Category"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/contentCategory"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/contentCategoryRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/contentCategoryResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Content Category",
        "tags": ["Content Category"],
        "x-internal": false
      }
    },
    "/contentCategories/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Content Category by ID",
        "tags": ["Content Category"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/contentCategoryResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Content Category by ID",
        "tags": ["Content Category"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/contentCategory"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/contentCategoryRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/contentCategory"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/contentCategoryRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Content Category",
        "tags": ["Content Category"],
        "x-internal": false
      }
    },
    "/contentCategoryMemberships": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/contentCategoryMembershipResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Content Category Memberships",
        "tags": ["Content Category Membership"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/contentCategoryMembership"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/contentCategoryMembershipRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/contentCategoryMembershipResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Content Category Membership",
        "tags": ["Content Category Membership"],
        "x-internal": false
      }
    },
    "/contentCategoryMemberships/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Content Category Membership by ID",
        "tags": ["Content Category Membership"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/contentCategoryMembershipResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Content Category Membership by ID",
        "tags": ["Content Category Membership"],
        "x-internal": false
      }
    },
    "/contentCategoryOwnerships": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/contentCategoryOwnershipResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Content Category Ownerships",
        "tags": ["Content Category Ownership"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/contentCategoryOwnership"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/contentCategoryOwnershipRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/contentCategoryOwnershipResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Content Category Ownership",
        "tags": ["Content Category Ownership"],
        "x-internal": false
      }
    },
    "/contentCategoryOwnerships/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Content Category Ownership by ID",
        "tags": ["Content Category Ownership"],
        "x-internal": false
      }
    },
    "/customDuties": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/customDuty"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/customDutyRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/customDutyResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Custom Duty",
        "tags": ["Custom Duty"],
        "x-internal": false
      }
    },
    "/duties": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/dutyResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Duties",
        "tags": ["Duty"],
        "x-internal": false
      }
    },
    "/emailAddresses": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/emailAddressResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Email Addresses",
        "tags": ["Email Address"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/emailAddress"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/emailAddressRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/emailAddressResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Email Address",
        "tags": ["Email Address"],
        "x-internal": false
      }
    },
    "/emailAddresses/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Email Address by ID",
        "tags": ["Email Address"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/emailAddressResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get an Email Address by ID",
        "tags": ["Email Address"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/emailAddress"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/emailAddressRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/emailAddress"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/emailAddressRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update an Email Address",
        "tags": ["Email Address"],
        "x-internal": false
      }
    },
    "/events/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/eventResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get an Event by ID",
        "tags": ["Event"],
        "x-internal": false
      }
    },
    "/favorites": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/favoriteResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Favorites",
        "tags": ["Favorite"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/favoriteRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/favoriteResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Favorite",
        "tags": ["Favorite"],
        "x-internal": false
      }
    },
    "/favorites/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Favorite by ID",
        "tags": ["Favorite"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/favoriteResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Favorite by ID",
        "tags": ["Favorite"],
        "x-internal": false
      }
    },
    "/mailAliases": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/mailAliasResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Mail Aliases",
        "tags": ["Mail Alias"],
        "x-internal": false
      }
    },
    "/mailAliases/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailAliasResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Mail Alias by ID",
        "tags": ["Mail Alias"],
        "x-internal": false
      }
    },
    "/mailboxes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/mailboxResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Mailboxes",
        "tags": ["Mailbox"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/mailbox"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/mailboxRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailboxResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Mailbox",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailboxes/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Mailbox by ID",
        "tags": ["Mailbox"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailboxResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Mailbox by ID",
        "tags": ["Mailbox"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/mailbox"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/mailboxRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/mailbox"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/mailboxRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Mailbox",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailboxes/{id}/actions/linkEwsMasterAccount": {
      "post": {
        "description": "### Member Action \n\nLink mailbox with EWS master account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "description": "empty",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Link Ews Master Account",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailboxes/{id}/actions/testSend": {
      "post": {
        "description": "### Member Action \n\nTest if sending emails works from this mailbox.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailboxResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Test Send",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailboxes/{id}/actions/testSync": {
      "post": {
        "description": "### Member Action \n\nTest if syncing emails works from this mailbox.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailboxResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Test Sync",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailboxes/{id}/actions/unlinkEwsMasterAccount": {
      "post": {
        "description": "### Member Action \n\nUnlink EWS master account from mailbox",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "description": "empty",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Unlink Ews Master Account",
        "tags": ["Mailbox"],
        "x-internal": false
      }
    },
    "/mailings": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/mailingResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Mailings",
        "tags": ["Mailing"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/mailing"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/mailingRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailingResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Mailing",
        "tags": ["Mailing"],
        "x-internal": false
      }
    },
    "/mailings/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/mailingResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Mailing by ID",
        "tags": ["Mailing"],
        "x-internal": false
      }
    },
    "/opportunities": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/opportunityResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Opportunities",
        "tags": ["Opportunity"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunity"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Opportunity",
        "tags": ["Opportunity"],
        "x-internal": false
      }
    },
    "/opportunities/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Opportunity by ID",
        "tags": ["Opportunity"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get an Opportunity by ID",
        "tags": ["Opportunity"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunity"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/opportunity"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/opportunityRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update an Opportunity",
        "tags": ["Opportunity"],
        "x-internal": false
      }
    },
    "/opportunityProspectRoles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/opportunityProspectRoleResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Opportunity Prospect Roles",
        "tags": ["Opportunity Prospect Role"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunityProspectRole"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityProspectRoleRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityProspectRoleResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Opportunity Prospect Role",
        "tags": ["Opportunity Prospect Role"],
        "x-internal": false
      }
    },
    "/opportunityProspectRoles/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Opportunity Prospect Role by ID",
        "tags": ["Opportunity Prospect Role"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityProspectRoleResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get an Opportunity Prospect Role by ID",
        "tags": ["Opportunity Prospect Role"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunityProspectRole"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityProspectRoleRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/opportunityProspectRole"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/opportunityProspectRoleRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update an Opportunity Prospect Role",
        "tags": ["Opportunity Prospect Role"],
        "x-internal": false
      }
    },
    "/opportunityStages": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/opportunityStageResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Opportunity Stages",
        "tags": ["Opportunity Stage"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunityStage"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityStageRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityStageResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Opportunity Stage",
        "tags": ["Opportunity Stage"],
        "x-internal": false
      }
    },
    "/opportunityStages/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Opportunity Stage by ID",
        "tags": ["Opportunity Stage"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/opportunityStageResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get an Opportunity Stage by ID",
        "tags": ["Opportunity Stage"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/opportunityStage"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/opportunityStageRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/opportunityStage"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/opportunityStageRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update an Opportunity Stage",
        "tags": ["Opportunity Stage"],
        "x-internal": false
      }
    },
    "/personas": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/personaResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Personas",
        "tags": ["Persona"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/persona"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/personaRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/personaResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Persona",
        "tags": ["Persona"],
        "x-internal": false
      }
    },
    "/personas/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Persona by ID",
        "tags": ["Persona"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/personaResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Persona by ID",
        "tags": ["Persona"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/persona"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/personaRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/persona"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/personaRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Persona",
        "tags": ["Persona"],
        "x-internal": false
      }
    },
    "/phoneNumbers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/phoneNumberResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Phone Numbers",
        "tags": ["Phone Number"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/phoneNumber"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/phoneNumberRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/phoneNumberResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Phone Number",
        "tags": ["Phone Number"],
        "x-internal": false
      }
    },
    "/phoneNumbers/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Phone Number by ID",
        "tags": ["Phone Number"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/phoneNumberResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Phone Number by ID",
        "tags": ["Phone Number"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/phoneNumber"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/phoneNumberRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/phoneNumber"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/phoneNumberRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Phone Number",
        "tags": ["Phone Number"],
        "x-internal": false
      }
    },
    "/profiles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/profileResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Profiles",
        "tags": ["Profile"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/profile"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/profileRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profileResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Profile",
        "tags": ["Profile"],
        "x-internal": false
      }
    },
    "/profiles/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Profile by ID",
        "tags": ["Profile"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/profileResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Profile by ID",
        "tags": ["Profile"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/profile"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/profileRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/profile"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/profileRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Profile",
        "tags": ["Profile"],
        "x-internal": false
      }
    },
    "/prospects": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/prospectResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Prospects",
        "tags": ["Prospect"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/prospect"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/prospectRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/prospectResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Prospect",
        "tags": ["Prospect"],
        "x-internal": false
      }
    },
    "/prospects/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Prospect by ID",
        "tags": ["Prospect"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/prospectResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Prospect by ID",
        "tags": ["Prospect"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/prospect"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/prospectRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/prospect"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/prospectRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update a Prospect",
        "tags": ["Prospect"],
        "x-internal": false
      }
    },
    "/recipients": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/recipientResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Recipients",
        "tags": ["Recipient"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/recipient"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/recipientRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/recipientResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Recipient",
        "tags": ["Recipient"],
        "x-internal": false
      }
    },
    "/recipients/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Recipient by ID",
        "tags": ["Recipient"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/recipientResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Recipient by ID",
        "tags": ["Recipient"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/recipient"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/recipientRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/recipient"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/recipientRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Recipient",
        "tags": ["Recipient"],
        "x-internal": false
      }
    },
    "/roles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/roleResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Roles",
        "tags": ["Role"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/role"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/roleRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/roleResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Role",
        "tags": ["Role"],
        "x-internal": false
      }
    },
    "/roles/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Role by ID",
        "tags": ["Role"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/roleResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Role by ID",
        "tags": ["Role"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/role"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/roleRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/role"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/roleRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Role",
        "tags": ["Role"],
        "x-internal": false
      }
    },
    "/rulesets": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/rulesetResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Rulesets",
        "tags": ["Ruleset"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/ruleset"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/rulesetRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/rulesetResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Ruleset",
        "tags": ["Ruleset"],
        "x-internal": false
      }
    },
    "/rulesets/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Ruleset by ID",
        "tags": ["Ruleset"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/rulesetResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Ruleset by ID",
        "tags": ["Ruleset"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/ruleset"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/rulesetRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/ruleset"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/rulesetRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Ruleset",
        "tags": ["Ruleset"],
        "x-internal": false
      }
    },
    "/sequenceStates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/sequenceStateResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Sequence States",
        "tags": ["Sequence State"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequenceState"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceStateRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStateResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Sequence State",
        "tags": ["Sequence State"],
        "x-internal": false
      }
    },
    "/sequenceStates/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Sequence State by ID",
        "tags": ["Sequence State"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Sequence State by ID",
        "tags": ["Sequence State"],
        "x-internal": false
      }
    },
    "/sequenceStates/{id}/actions/finish": {
      "post": {
        "description": "### Member Action \n\nFinishes an active sequence state.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Finish",
        "tags": ["Sequence State"],
        "x-internal": false
      }
    },
    "/sequenceStates/{id}/actions/pause": {
      "post": {
        "description": "### Member Action \n\nPauses an active sequence state.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Pause",
        "tags": ["Sequence State"],
        "x-internal": false
      }
    },
    "/sequenceStates/{id}/actions/resume": {
      "post": {
        "description": "### Member Action \n\nResumes a paused sequence state.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Resume",
        "tags": ["Sequence State"],
        "x-internal": false
      }
    },
    "/sequenceSteps": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/sequenceStepResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Sequence Steps",
        "tags": ["Sequence Step"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequenceStep"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceStepRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStepResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Sequence Step",
        "tags": ["Sequence Step"],
        "x-internal": false
      }
    },
    "/sequenceSteps/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceStepResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Sequence Step by ID",
        "tags": ["Sequence Step"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequenceStep"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceStepRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/sequenceStep"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/sequenceStepRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Sequence Step",
        "tags": ["Sequence Step"],
        "x-internal": false
      }
    },
    "/sequenceTemplates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/sequenceTemplateResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Sequence Templates",
        "tags": ["Sequence Template"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequenceTemplate"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceTemplateRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceTemplateResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Sequence Template",
        "tags": ["Sequence Template"],
        "x-internal": false
      }
    },
    "/sequenceTemplates/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Sequence Template by ID",
        "tags": ["Sequence Template"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceTemplateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Sequence Template by ID",
        "tags": ["Sequence Template"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequenceTemplate"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceTemplateRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/sequenceTemplate"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/sequenceTemplateRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Sequence Template",
        "tags": ["Sequence Template"],
        "x-internal": false
      }
    },
    "/sequences": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/sequenceResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Sequences",
        "tags": ["Sequence"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequence"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Sequence",
        "tags": ["Sequence"],
        "x-internal": false
      }
    },
    "/sequences/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Sequence by ID",
        "tags": ["Sequence"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/sequenceResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Sequence by ID",
        "tags": ["Sequence"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/sequence"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/sequenceRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/sequence"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/sequenceRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update a Sequence",
        "tags": ["Sequence"],
        "x-internal": false
      }
    },
    "/snippets": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/snippetResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Snippets",
        "tags": ["Snippet"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/snippet"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/snippetRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/snippetResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Snippet",
        "tags": ["Snippet"],
        "x-internal": false
      }
    },
    "/snippets/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Snippet by ID",
        "tags": ["Snippet"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/snippetResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Snippet by ID",
        "tags": ["Snippet"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/snippet"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/snippetRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/snippet"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/snippetRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Snippet",
        "tags": ["Snippet"],
        "x-internal": false
      }
    },
    "/stages": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/stageResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Stages",
        "tags": ["Stage"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/stage"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/stageRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/stageResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Stage",
        "tags": ["Stage"],
        "x-internal": false
      }
    },
    "/stages/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Stage by ID",
        "tags": ["Stage"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/stageResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Stage by ID",
        "tags": ["Stage"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/stage"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/stageRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/stage"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/stageRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Stage",
        "tags": ["Stage"],
        "x-internal": false
      }
    },
    "/taskPriorities": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/taskPriorityResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Task Priorities",
        "tags": ["Task Priority"],
        "x-internal": false
      }
    },
    "/taskPriorities/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskPriorityResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Task Priority by ID",
        "tags": ["Task Priority"],
        "x-internal": false
      }
    },
    "/tasks": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/taskResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Tasks",
        "tags": ["Task"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/task"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/taskRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Task",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Task by ID",
        "tags": ["Task"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Task by ID",
        "tags": ["Task"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/task"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/taskRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/task"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/taskRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update a Task",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/advance": {
      "post": {
        "description": "### Member Action \n\nAdvances the sequence state associated with the task to the next step in the sequence. Note that only tasks with task_type of 'sequence_step_call', 'sequence_step_email', 'sequence_step_linkedin_interact_with_post', 'sequence_step_linkedin_other', 'sequence_step_linkedin_send_connection_request', 'sequence_step_linkedin_send_message', 'sequence_step_linkedin_view_profile', 'sequence_step_sms' or 'sequence_step_task' can be advanced.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Advance",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/deliver": {
      "post": {
        "description": "### Member Action \n\nSchedules the mailing associated with the task for delivery, if possible.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Deliver",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/markComplete": {
      "post": {
        "description": "### Member Action \n\nMarks the task as complete.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "completionAction": {
                  "description": "For sequence step tasks, this specifies how to finish the sequence state. Possible values are: 'finish_no_reply' to finish the sequence, 'finish_replied' to set the sequence as replied, and anything else (including leaving it blank) will advance the sequence state."
                },
                "completionNote": {
                  "description": "A note to attach to the associated prospect, if there is one."
                }
              }
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Mark Complete",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/reassignOwner": {
      "post": {
        "description": "### Member Action \n\nReassigns the owner of a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "ownerId": {
                  "description": "The id of the new owner of the task"
                }
              },
              "required": ["ownerId"]
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Reassign Owner",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/reschedule": {
      "post": {
        "description": "### Member Action \n\nReschedules a task by setting a new task due time.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "dueAt": {
                  "description": "The new time for the task to be due."
                }
              },
              "required": ["dueAt"]
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Reschedule",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/snooze": {
      "post": {
        "description": "### Member Action \n\nSets the 'dueAt' value to be a day later than either now or the existing 'dueAt' value, whichever is later.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "dueAt": {
                  "description": "The new time for the task to be due."
                },
                "markAsUrgent": {
                  "description": "Whether to mark the task as urgent or not."
                }
              }
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Snooze",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/updateNote": {
      "post": {
        "description": "### Member Action \n\nUpdates note of a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "note": {
                  "description": "The note to set on the task."
                }
              },
              "required": ["note"]
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update Note",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/tasks/{id}/actions/updateOpportunityAssociation": {
      "post": {
        "description": "### Member Action \n\nUpdates opportunity association of a task",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "actionParams",
            "schema": {
              "properties": {
                "opportunityAssociation": {
                  "description": "The opportunity to associate with the task."
                }
              },
              "required": ["opportunityAssociation"]
            },
            "style": "deepObject"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/taskResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update Opportunity Association",
        "tags": ["Task"],
        "x-internal": false
      }
    },
    "/teams": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/teamResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Get a Collection of Teams",
        "tags": ["Team"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/team"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/teamRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/teamResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Team",
        "tags": ["Team"],
        "x-internal": false
      }
    },
    "/teams/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Team by ID",
        "tags": ["Team"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/teamResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "Get a Team by ID",
        "tags": ["Team"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/team"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/teamRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/team"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/teamRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Team",
        "tags": ["Team"],
        "x-internal": false
      }
    },
    "/templates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/templateResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Templates",
        "tags": ["Template"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/template"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/templateRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/templateResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New Template",
        "tags": ["Template"],
        "x-internal": false
      }
    },
    "/templates/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Delete an Existing Template by ID",
        "tags": ["Template"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/templateResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Template by ID",
        "tags": ["Template"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/template"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/templateRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/template"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/templateRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a Template",
        "tags": ["Template"],
        "x-internal": false
      }
    },
    "/users": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/userResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Users",
        "tags": ["User"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/user"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/userRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/userResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Create a New User",
        "tags": ["User"],
        "x-internal": false
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/userResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a User by ID",
        "tags": ["User"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/user"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/userRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/user"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/userRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "summary": "Update a User",
        "tags": ["User"],
        "x-internal": false
      }
    },
    "/webhooks": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "items": {
                        "$ref": "#/components/schemas/webhookResponse"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Collection of Webhooks",
        "tags": ["Webhook"],
        "x-internal": false
      },
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/webhook"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/webhookRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/webhookResponse"
                    }
                  }
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Create a New Webhook",
        "tags": ["Webhook"],
        "x-internal": false
      }
    },
    "/webhooks/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.api+json": {}
            },
            "description": "Deleted"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Delete an Existing Webhook by ID",
        "tags": ["Webhook"],
        "x-internal": false
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/webhookResponse"
                    }
                  }
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Get a Webhook by ID",
        "tags": ["Webhook"],
        "x-internal": false
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "properties": {
                  "data": {
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/webhook"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "relationships": {
                        "$ref": "#/components/schemas/webhookRelationships"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": ["type", "id"]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "data": {
                      "properties": {
                        "attributes": {
                          "$ref": "#/components/schemas/webhook"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "relationships": {
                          "$ref": "#/components/schemas/webhookRelationships"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": ["type", "id"]
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "422": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "items": {
                        "properties": {
                          "detail": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "JSON error message"
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "s2sAuthToken": []
          }
        ],
        "summary": "Update a Webhook",
        "tags": ["Webhook"],
        "x-internal": false
      }
    }
  },
  "components": {
    "schemas": {
      "account": {
        "description": "A descriptor of a named company used to categorize prospects within an account-based sales approach.",
        "properties": {
          "buyerIntentScore": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA custom score given to measure the quality of the account.",
            "format": "float",
            "type": "number",
            "x-internal": false
          },
          "companyType": {
            "description": "\n\nA description of the company’s type (e.g. \"Public Company\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the account was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "custom1": {
            "description": "\n\nThe value of the account’s first custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom2": {
            "description": "\n\nThe value of the account’s second custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom3": {
            "description": "\n\nThe value of the account’s third custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom4": {
            "description": "\n\nThe value of the account’s fourth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom5": {
            "description": "\n\nThe value of the account’s fifth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom6": {
            "description": "\n\nThe value of the account’s sixth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom7": {
            "description": "\n\nThe value of the account’s seventh custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom8": {
            "description": "\n\nThe value of the account’s eight custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom9": {
            "description": "\n\nThe value of the account’s ninth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom10": {
            "description": "\n\nThe value of the account’s 10th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom11": {
            "description": "\n\nThe value of the account’s 11th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom12": {
            "description": "\n\nThe value of the account’s 12th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom13": {
            "description": "\n\nThe value of the account’s 13th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom14": {
            "description": "\n\nThe value of the account’s 14th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom15": {
            "description": "\n\nThe value of the account’s 15th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom16": {
            "description": "\n\nThe value of the account’s 16th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom17": {
            "description": "\n\nThe value of the account’s 17th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom18": {
            "description": "\n\nThe value of the account’s 18th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom19": {
            "description": "\n\nThe value of the account’s 19th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom20": {
            "description": "\n\nThe value of the account’s 20th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom21": {
            "description": "\n\nThe value of the account’s 21st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom22": {
            "description": "\n\nThe value of the account’s 22nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom23": {
            "description": "\n\nThe value of the account’s 23rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom24": {
            "description": "\n\nThe value of the account’s 24th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom25": {
            "description": "\n\nThe value of the account’s 25th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom26": {
            "description": "\n\nThe value of the account’s 26th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom27": {
            "description": "\n\nThe value of the account’s 27th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom28": {
            "description": "\n\nThe value of the account’s 28th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom29": {
            "description": "\n\nThe value of the account’s 29th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom30": {
            "description": "\n\nThe value of the account’s 30th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom31": {
            "description": "\n\nThe value of the account’s 31st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom32": {
            "description": "\n\nThe value of the account’s 32nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom33": {
            "description": "\n\nThe value of the account’s 33rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom34": {
            "description": "\n\nThe value of the account’s 34th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom35": {
            "description": "\n\nThe value of the account’s 35th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom36": {
            "description": "\n\nThe value of the account's 36th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom37": {
            "description": "\n\nThe value of the account's 37th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom38": {
            "description": "\n\nThe value of the account's 38th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom39": {
            "description": "\n\nThe value of the account's 39th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom40": {
            "description": "\n\nThe value of the account's 40th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom41": {
            "description": "\n\nThe value of the account's 41st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom42": {
            "description": "\n\nThe value of the account's 42nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom43": {
            "description": "\n\nThe value of the account's 43rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom44": {
            "description": "\n\nThe value of the account's 44th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom45": {
            "description": "\n\nThe value of the account's 45th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom46": {
            "description": "\n\nThe value of the account's 46th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom47": {
            "description": "\n\nThe value of the account's 47th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom48": {
            "description": "\n\nThe value of the account's 48th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom49": {
            "description": "\n\nThe value of the account's 49th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom50": {
            "description": "\n\nThe value of the account's 50th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom51": {
            "description": "\n\nThe value of the account's 51st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom52": {
            "description": "\n\nThe value of the account's 52nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom53": {
            "description": "\n\nThe value of the account's 53rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom54": {
            "description": "\n\nThe value of the account's 54th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom55": {
            "description": "\n\nThe value of the account's 55th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom56": {
            "description": "\n\nThe value of the account's 56th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom57": {
            "description": "\n\nThe value of the account's 57th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom58": {
            "description": "\n\nThe value of the account's 58th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom59": {
            "description": "\n\nThe value of the account's 59th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom60": {
            "description": "\n\nThe value of the account's 60th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom61": {
            "description": "\n\nThe value of the account's 61st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom62": {
            "description": "\n\nThe value of the account's 62nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom63": {
            "description": "\n\nThe value of the account's 63rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom64": {
            "description": "\n\nThe value of the account's 64th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom65": {
            "description": "\n\nThe value of the account's 65th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom66": {
            "description": "\n\nThe value of the account's 66th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom67": {
            "description": "\n\nThe value of the account's 67th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom68": {
            "description": "\n\nThe value of the account's 68th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom69": {
            "description": "\n\nThe value of the account's 69th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom70": {
            "description": "\n\nThe value of the account's 70th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom71": {
            "description": "\n\nThe value of the account's 71st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom72": {
            "description": "\n\nThe value of the account's 72nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom73": {
            "description": "\n\nThe value of the account's 73rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom74": {
            "description": "\n\nThe value of the account's 74th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom75": {
            "description": "\n\nThe value of the account's 75th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom76": {
            "description": "\n\nThe value of the account's 76th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom77": {
            "description": "\n\nThe value of the account's 77th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom78": {
            "description": "\n\nThe value of the account's 78th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom79": {
            "description": "\n\nThe value of the account's 79th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom80": {
            "description": "\n\nThe value of the account's 80th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom81": {
            "description": "\n\nThe value of the account's 81st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom82": {
            "description": "\n\nThe value of the account's 82nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom83": {
            "description": "\n\nThe value of the account's 83rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom84": {
            "description": "\n\nThe value of the account's 84th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom85": {
            "description": "\n\nThe value of the account's 85th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom86": {
            "description": "\n\nThe value of the account's 86th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom87": {
            "description": "\n\nThe value of the account's 87th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom88": {
            "description": "\n\nThe value of the account's 88th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom89": {
            "description": "\n\nThe value of the account's 89th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom90": {
            "description": "\n\nThe value of the account's 90th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom91": {
            "description": "\n\nThe value of the account's 91st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom92": {
            "description": "\n\nThe value of the account's 92nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom93": {
            "description": "\n\nThe value of the account's 93rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom94": {
            "description": "\n\nThe value of the account's 94th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom95": {
            "description": "\n\nThe value of the account's 95th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom96": {
            "description": "\n\nThe value of the account's 96th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom97": {
            "description": "\n\nThe value of the account's 97th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom98": {
            "description": "\n\nThe value of the account's 98th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom99": {
            "description": "\n\nThe value of the account's 99th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom100": {
            "description": "\n\nThe value of the account’s 100th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom101": {
            "description": "\n\nThe value of the account’s 101st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom102": {
            "description": "\n\nThe value of the account’s 102nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom103": {
            "description": "\n\nThe value of the account’s 103rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom104": {
            "description": "\n\nThe value of the account’s 104th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom105": {
            "description": "\n\nThe value of the account’s 105th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom106": {
            "description": "\n\nThe value of the account’s 106th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom107": {
            "description": "\n\nThe value of the account’s 107th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom108": {
            "description": "\n\nThe value of the account’s 108th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom109": {
            "description": "\n\nThe value of the account’s 109th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom110": {
            "description": "\n\nThe value of the account’s 110th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom111": {
            "description": "\n\nThe value of the account’s 111th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom112": {
            "description": "\n\nThe value of the account’s 112th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom113": {
            "description": "\n\nThe value of the account’s 113th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom114": {
            "description": "\n\nThe value of the account’s 114th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom115": {
            "description": "\n\nThe value of the account’s 115th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom116": {
            "description": "\n\nThe value of the account’s 116th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom117": {
            "description": "\n\nThe value of the account’s 117th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom118": {
            "description": "\n\nThe value of the account’s 118th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom119": {
            "description": "\n\nThe value of the account’s 119th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom120": {
            "description": "\n\nThe value of the account’s 120th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom121": {
            "description": "\n\nThe value of the account’s 121st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom122": {
            "description": "\n\nThe value of the account’s 122nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom123": {
            "description": "\n\nThe value of the account’s 123rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom124": {
            "description": "\n\nThe value of the account’s 124th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom125": {
            "description": "\n\nThe value of the account’s 125th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom126": {
            "description": "\n\nThe value of the account’s 126th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom127": {
            "description": "\n\nThe value of the account’s 127th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom128": {
            "description": "\n\nThe value of the account’s 128th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom129": {
            "description": "\n\nThe value of the account’s 129th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom130": {
            "description": "\n\nThe value of the account’s 130th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom131": {
            "description": "\n\nThe value of the account’s 131st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom132": {
            "description": "\n\nThe value of the account’s 132nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom133": {
            "description": "\n\nThe value of the account’s 133rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom134": {
            "description": "\n\nThe value of the account’s 134th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom135": {
            "description": "\n\nThe value of the account’s 135th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom136": {
            "description": "\n\nThe value of the account’s 136th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom137": {
            "description": "\n\nThe value of the account’s 137th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom138": {
            "description": "\n\nThe value of the account’s 138th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom139": {
            "description": "\n\nThe value of the account’s 139th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom140": {
            "description": "\n\nThe value of the account’s 140th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom141": {
            "description": "\n\nThe value of the account’s 141st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom142": {
            "description": "\n\nThe value of the account’s 142nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom143": {
            "description": "\n\nThe value of the account’s 143rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom144": {
            "description": "\n\nThe value of the account’s 144th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom145": {
            "description": "\n\nThe value of the account’s 145th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom146": {
            "description": "\n\nThe value of the account’s 146th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom147": {
            "description": "\n\nThe value of the account’s 147th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom148": {
            "description": "\n\nThe value of the account’s 148th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom149": {
            "description": "\n\nThe value of the account’s 149th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom150": {
            "description": "\n\nThe value of the account’s 150th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "customId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA custom ID for the account, often referencing an ID in an external system.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "description": {
            "description": "\n\nA custom description of the account.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "domain": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe company’s website domain (e.g. \"`www.acme.com`\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "externalSource": {
            "description": "\n\nThe source of the resource’s creation (e.g. \"outreach-api\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "followers": {
            "description": "\n\nThe number of followers the company has listed on social media.",
            "type": "integer",
            "x-internal": false
          },
          "foundedAt": {
            "description": "\n\nThe founding date of the company.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "industry": {
            "description": "\n\nA description of the company’s industry (e.g. \"Manufacturing\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "linkedInEmployees": {
            "description": "\n\nThe number of employees listed on the company’s LinkedIn URL.",
            "type": "integer",
            "x-internal": false
          },
          "linkedInUrl": {
            "description": "\n\nThe company’s LinkedIn URL.",
            "maxLength": 1000,
            "type": "string",
            "x-internal": false
          },
          "locality": {
            "description": "\n\nThe company’s primary geographic region (e.g. \"Eastern USA\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the company (e.g. \"Acme Corporation\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "named": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA boolean value determining whether this is a \"named\" account or not. Only named accounts will show up on the collection index.",
            "type": "boolean",
            "x-internal": false
          },
          "naturalName": {
            "description": "\n\nThe natural name of the company (e.g. \"Acme\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "numberOfEmployees": {
            "description": "\n\nThe number of employees working at the company.",
            "type": "integer",
            "x-internal": false
          },
          "sharingTeamId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe ID of the sharing team associated with this object. Access is currently in beta.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tag values associated with the account (e.g. [\"Enterprise\", \"Tier 1\"]).",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "touchedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the account was last touched.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the account was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "websiteUrl": {
            "description": "\n\nThe company’s website URL (e.g. \"`https://www.acme.com/contact`\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "accountRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the account. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the account. You can use only the attribute id to filter accounts by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "prospects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe account's associated prospects. Relationship prospects cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "prospect"
            },
            "type": "array",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated tasks. Relationship tasks cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the account. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "accountResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/account"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/accountRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "addressRelationships": {
        "type": "object"
      },
      "attachmentRelationships": {
        "type": "object"
      },
      "audit": {
        "description": "Events that happen during the day. Things like login, plugin mapping changes, etc.",
        "properties": {
          "eventName": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nName of the event",
            "type": "string",
            "x-internal": false
          },
          "timestamp": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nWhen the event happened",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "userEmail": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nEmail of the user who perfomed the action",
            "format": "email",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "auditRelationships": {
        "type": "object"
      },
      "auditResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/audit"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/auditRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "batchItemRelationships": {
        "type": "object"
      },
      "batchRelationships": {
        "type": "object"
      },
      "blockedNumberRelationships": {
        "type": "object"
      },
      "calendarEventAttendeeRelationships": {
        "properties": {
          "prospect": {
            "description": "",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "user": {
            "description": "",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "calendarEventRelationships": {
        "properties": {
          "accounts": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\n",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["account"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "account"
            },
            "type": "array",
            "x-internal": false
          },
          "booker": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe user who booked this event.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the event.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "opportunity": {
            "description": "The opportunity associated with the event.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "prospects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\n",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "prospect"
            },
            "type": "array",
            "x-internal": false
          },
          "user": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe user associated with the calendar.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "users": {
            "description": "",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["user"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["user"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "user"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "calendarRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the calendar.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the calendar.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "user": {
            "description": "The user associated with the calendar.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "calendarUrlRelationships": {
        "type": "object"
      },
      "call": {
        "description": "A log of an inbound or outbound call made with a prospect.",
        "properties": {
          "answeredAt": {
            "description": "\n\nThe date and time the call was answered.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "completedAt": {
            "description": "\n\nThe date and time the call was completed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "dialedAt": {
            "description": "\n\nThe date and time the call was dialed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "direction": {
            "description": "\n\nThe call direction from the user’s point of view; must be either \"inbound\" or \"outbound\".",
            "type": "string",
            "x-internal": false
          },
          "externalVendor": {
            "description": "\n\nThe voice provider of the call. Can be blank.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "from": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe phone number used to place the call.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "note": {
            "description": "\n\nA custom note associated with this call.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "outcome": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe call’s outcome; must be either \"Answered\" or \"Not Answered\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "recordingUrl": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe URL of the call’s audio recording.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "returnedAt": {
            "description": "\n\nThe date and time the call was returned.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "sequenceAction": {
            "description": "\n\nThe action to take on the associated sequence; must be either \"Advance\", \"Finish\", \"Finish - No Reply\", or \"Finish - Replied\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "shouldRecordCall": {
            "description": "\n\nIndicated whether or not the call is recorded.",
            "type": "boolean",
            "x-internal": false
          },
          "state": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe call’s current state.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stateChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the call’s state last changed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tag values associated with the call (e.g. [\"Interested\", \"Meeting Booked\"]).",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "to": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe phone number that the call was placed to.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "uid": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe Outreach voice trace id.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "userCallType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe type of call placed within the Outreach client; must be either \"bridge\" or \"voip\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "vendorCallId": {
            "description": "\n\nThe call-id as recoreded by the voice provider. Can be blank.",
            "maxLength": 63,
            "type": "string",
            "x-internal": false
          },
          "voicemailRecordingUrl": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe URL of the call’s voicemail audio recording.",
            "maxLength": 1024,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "callDisposition": {
        "description": "A ready-made collection of call dispositions that help categorize your call logs.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call disposition was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe disposition’s name (e.g. \"Meeting Scheduled\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe disposition’s display order within the collection.",
            "type": "integer",
            "x-internal": false
          },
          "outcome": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe disposition’s call outcome; must be either \"Answered\" or \"Not Answered\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call disposition was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "callDispositionRelationships": {
        "properties": {
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe calls made with this disposition. Relationship calls cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the call disposition. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "callDispositionResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/callDisposition"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/callDispositionRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "callPurpose": {
        "description": "A ready-made collection of call purposes that help categorize your call logs.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call purpose was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe purpose’s name (e.g. \"Initial Contact\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe purpose’s display order within the collection.",
            "type": "integer",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the call purpose was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "callPurposeRelationships": {
        "properties": {
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe calls made with this purpose. Relationship calls cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the call purpose. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "callPurposeResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/callPurpose"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/callPurposeRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "callRelationships": {
        "properties": {
          "callDisposition": {
            "description": "The associated call disposition. You can use only the attribute id to filter calls by callDisposition (e.g. filter[callDisposition][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["callDisposition"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["callDisposition"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "callDisposition",
            "x-internal": false
          },
          "callPurpose": {
            "description": "The associated call purpose. You can use only the attribute id to filter calls by callPurpose (e.g. filter[callPurpose][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["callPurpose"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["callPurpose"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "callPurpose",
            "x-internal": false
          },
          "opportunity": {
            "description": "The associated opportunity. You can use only the attribute id to filter calls by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "phoneNumber": {
            "description": "The associated phone number of the prospect. You can use only the attribute id to filter calls by phoneNumber (e.g. filter[phoneNumber][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["phoneNumber"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["phoneNumber"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "phoneNumber",
            "x-internal": false
          },
          "prospect": {
            "description": "The associated prospect. You can use only the attribute id to filter calls by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequence": {
            "description": "The associated sequence. You can use only the attribute id to filter calls by sequence (e.g. filter[sequence][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "sequenceState": {
            "description": "The associated sequence state. You can use only the attribute id to filter calls by sequenceState (e.g. filter[sequenceState][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          },
          "sequenceStep": {
            "description": "The associated sequence step. You can use only the attribute id to filter calls by sequenceStep (e.g. filter[sequenceStep][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceStep",
            "x-internal": false
          },
          "task": {
            "description": "The associated task. You can use only the attribute id to filter calls by task (e.g. filter[task][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "task",
            "x-internal": false
          },
          "user": {
            "description": "The associated user. You can use only the attribute id to filter calls by user (e.g. filter[user][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "callResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/call"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/callRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "complianceRequest": {
        "description": "A regulatory request to delete or export an individual's PII.",
        "properties": {
          "batchComplianceRequestUuid": {
            "description": "\n\nThe UUID of the batch the compliance request belongs to.",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the compliance request was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "objectType": {
            "description": "\n\nThe type of record to process, can be 'Prospect' or 'Recipient' for e-mail addresses unassociated with a prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "pii": {
            "description": "\n\nA JSON object of personal information required for processing the compliance request.",
            "type": "object",
            "x-internal": false
          },
          "requestObjectId": {
            "description": "\n\nThe identifier for the record processed, for Prospects this is the Prospect ID, for Recipients this is an e-mail address.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "requestType": {
            "description": "\n\nThe type of compliance request (only 'Delete' is supported at this time).",
            "maxLength": 32,
            "type": "string",
            "x-internal": false
          },
          "requesterId": {
            "description": "\n\nThe ID of the Outreach user who submitted the compliance request.",
            "type": "integer",
            "x-internal": false
          },
          "state": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe current state of the compliance request, can be 'pending', 'running', 'failed', or 'done'. The states on the higher level abstraction, the batch compliance request, do not map 1:1 to these states. The only states that the batch compliance request will report are either 'pending' or 'done'.",
            "maxLength": 32,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time at which the compliance request was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "uuid": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe UUID of the compliance request.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "complianceRequestRelationships": {
        "properties": {
          "requester": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe Outreach user who submitted the compliance request. Relationship requester cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "complianceRequestResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/complianceRequest"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/complianceRequestRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategory": {
        "description": "Content can be grouped into content categories to help discoverability.",
        "properties": {
          "allowSequences": {
            "description": "\n\nCan this category be used to group sequences?",
            "type": "boolean",
            "x-internal": false
          },
          "allowSnippets": {
            "description": "\n\nCan this category be used to group snippets?",
            "type": "boolean",
            "x-internal": false
          },
          "allowTemplates": {
            "description": "\n\nCan this category be used to group templates?",
            "type": "boolean",
            "x-internal": false
          },
          "color": {
            "description": "\n\nColor of the content category to be used as a background",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the content category.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategoryMembership": {
        "description": "A record that maps content (e.g. a sequence) to a content category.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category membership was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category membership was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategoryMembershipRelationships": {
        "properties": {
          "content": {
            "description": "The record in the content category. Must be a sequence, snippet, or template. Relationship content cannot be used as a filter.",
            "oneOf": [
              {
                "description": "Leverage emailing within Sequences to engage each individual persona more effectively, and queue up the right actions at the right time.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "sequence"
              },
              {
                "description": "A piece of an email to be reused in multiple messages.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "snippet"
              },
              {
                "description": "A reusable template for building emails.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["snippet", "template", "sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "template"
              }
            ],
            "x-internal": false
          },
          "contentCategory": {
            "description": "The content category the record is part of. You can use only the attribute id to filter contentCategoryMemberships by contentCategory (e.g. filter[contentCategory][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["contentCategory"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["contentCategory"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "contentCategory",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the content category membership. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "contentCategoryMembershipResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/contentCategoryMembership"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/contentCategoryMembershipRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategoryOwnership": {
        "description": "A record that maps content categories to owners. This allows categories to be linked to one or more teams.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category ownership was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the content category ownership was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategoryOwnershipRelationships": {
        "properties": {
          "contentCategory": {
            "description": "The content category the owner is linked to. You can use only the attribute id to filter contentCategoryOwnerships by contentCategory (e.g. filter[contentCategory][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["contentCategory"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["contentCategory"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "contentCategory",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the content category ownership. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "owner": {
            "description": "The record the content category is tied to. Must a team for now. Relationship owner cannot be used as a filter.",
            "oneOf": [
              {
                "description": "A descriptor of a group of users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["team"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["team"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "team"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "contentCategoryOwnershipResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/contentCategoryOwnership"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/contentCategoryOwnershipRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "contentCategoryRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the content category. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "contentCategoryResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/contentCategory"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/contentCategoryRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "customDuty": {
        "description": "A freeform user-specified role or job duty played by a user in their organization.",
        "properties": {
          "dutyType": {
            "description": "\n\nThe polymorphic type of the duty (not the Ruby type, the duty type).",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "\n\nThe name of the role.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "customDutyRelationships": {
        "type": "object"
      },
      "customDutyResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/customDuty"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/customDutyRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "customValidationRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the custom validation.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the custom validation.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "duty": {
        "description": "An Outreach-suggested role or job duty played by a user in their organization.",
        "properties": {
          "dutyType": {
            "description": "\n\nThe polymorphic type of the duty (not the Ruby type, the duty type).",
            "type": "string",
            "x-internal": false
          },
          "symbolicName": {
            "description": "\n\nThe string constant used to refer to this duty which can be internationalized on the client.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "dutyRelationships": {
        "type": "object"
      },
      "dutyResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/duty"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/dutyRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "emailAddress": {
        "description": "A prospect's email address",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the email address was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "email": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe raw email address value",
            "format": "email",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nType of email address (work or personal)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nOrdered position in list of emails",
            "type": "integer",
            "x-internal": false
          },
          "status": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe status of the email",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "statusChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nTime the status was updated",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "unsubscribedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nTime a mailing was unsubscribed using this address",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email address was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "emailAddressRelationships": {
        "properties": {
          "prospect": {
            "description": "The owning prospect You can use only the attribute id to filter emailAddresses by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "emailAddressResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/emailAddress"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/emailAddressRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "event": {
        "description": "Application events, capturing details around the initiator, recipient, etc.",
        "properties": {
          "body": {
            "description": "\n\nThe event body (for external events only)",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the event was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "eventAt": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the event occurred.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "externalUrl": {
            "description": "\n\nThe external URL associated with this event (for external events only)",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe name of the event that took place (e.g. \"mailbox_created\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "payload": {
            "description": "\n\nThe transmitted data for the event (cannot be updated once an event has been created)",
            "type": "object",
            "x-internal": false
          },
          "requestCity": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe city where the request that created the event was made.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "requestDevice": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe type of device on which the request that created the event was made.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "requestHost": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nName of the host from which the request was made.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "requestProxied": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value whether the request was proxied. For example, when true the request city refers to the location of the email server and not the prospect.",
            "type": "boolean",
            "x-internal": false
          },
          "requestRegion": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nName of the region from which the request was made.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "eventRelationships": {
        "properties": {
          "account": {
            "description": "The account associated with this event. You can use only the attribute id to filter events by account (e.g. filter[account][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "account",
            "x-internal": false
          },
          "call": {
            "description": "The call associated with this event. You can use only the attribute id to filter events by call (e.g. filter[call][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["call"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["call"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "call",
            "x-internal": false
          },
          "mailing": {
            "description": "The mailing associated with this event. You can use only the attribute id to filter events by mailing (e.g. filter[mailing][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailing"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailing"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailing",
            "x-internal": false
          },
          "opportunity": {
            "description": "The opportunity associated with this event. You can use only the attribute id to filter events by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "prospect": {
            "description": "The prospect associated with this event. You can use only the attribute id to filter events by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "task": {
            "description": "The task associated with this event. You can use only the attribute id to filter events by task (e.g. filter[task][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "task",
            "x-internal": false
          },
          "user": {
            "description": "The user associated with this event. You can use only the attribute id to filter events by user (e.g. filter[user][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "eventResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/event"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/eventRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "experimentRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the experiment.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "owner": {
            "description": "The user who owns the experiment.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "sequenceA": {
            "description": "The \"target\" sequence, Sequence A, of this experiment. When the experiment is enabled, this sequence will be probabilistically replaced with the \"alternate\" sequence, Sequence B, based on the percentage attribute.",
            "oneOf": [
              {
                "description": "Leverage emailing within Sequences to engage each individual persona more effectively, and queue up the right actions at the right time.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "sequence"
              }
            ],
            "x-internal": false
          },
          "sequenceB": {
            "description": "The \"alternate\" sequence of this experiment.",
            "oneOf": [
              {
                "description": "Leverage emailing within Sequences to engage each individual persona more effectively, and queue up the right actions at the right time.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["sequence"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "sequence"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "exportRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\n",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "favorite": {
        "description": "A record (Prospect, Account, Sequence, etc.) favorited by a particular user.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the favorite was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "targetType": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe type of record that was favorited.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the favorite was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "favoriteRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe user who created the favorite. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "user": {
            "description": "The user who's favorite this is. You can use only the attribute id to filter favorites by user (e.g. filter[user][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "favoriteResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/favorite"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/favoriteRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "featureFlagParticipationRelationships": {
        "type": "object"
      },
      "featureFlagRelationships": {
        "type": "object"
      },
      "gmailMessageMetadatumRelationships": {
        "properties": {
          "mailings": {
            "description": "",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "importRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\n",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "inboxSettingRelationships": {
        "properties": {
          "user": {
            "description": "The associated user to whom this settings belong.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "jobRoleRelationships": {
        "type": "object"
      },
      "mailAlias": {
        "description": "Alternative email name for a mailbox.",
        "properties": {
          "canSend": {
            "description": "\n\nCan this alias send email.",
            "type": "boolean",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date the alias was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "email": {
            "description": "\n\nThe email alias.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailHash": {
            "description": "\n\nHashed email address of the alias.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date the alias was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "mailAliasRelationships": {
        "properties": {
          "mailbox": {
            "description": "The parent mailbox for this alias. You can use only the attribute id to filter mailAliases by mailbox (e.g. filter[mailbox][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "mailAliasResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/mailAlias"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/mailAliasRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "mailbox": {
        "description": "A representation of an email mailbox, used within the application for sending and syncing emails.",
        "properties": {
          "authId": {
            "description": "\n\nThe auth id associated with the mailbox.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the mailbox was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "editable": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value to indicate if the user has the permission to edit mailbox fields.",
            "type": "boolean",
            "x-internal": false
          },
          "email": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe email address of the mailbox.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailHash": {
            "description": "\n\nHashed email address of the mailbox.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailProvider": {
            "description": "\n\nThe mail service provider. While not a required field, it is strongly recommended to use one of 'exchange_online', 'exchange_server', 'gmail', 'gmail_api', 'google_oauth2', 'intermedia', 'office365_oauth2', 'microsoft_hma_oauth2', 'office_365', 'rackspace'. If no value is provided, send and sync will make assumptions based on the ews, imap, and smtp values provided.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailSignature": {
            "description": "\n\nThe default signature, in HTML, to be appended to sent email messages.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "ewsEndpoint": {
            "description": "\n\nThe url of the Exchange Web Service.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "ewsSslVerifyMode": {
            "description": "\n\nThe SSL verify mode, represented as an integer, the EWS connection will used. (verify none=0, verify peer=1, verify client once=4, verify fail if no peer cert=2)",
            "type": "integer",
            "x-internal": false
          },
          "exchangeVersion": {
            "description": "\n\nThe version of Exchange. Must be one of 'Exchange2007', 'Exchange2007_SP1', 'Exchange2010', 'Exchange2010_SP1', 'Exchange2010_SP2', 'Exchange2013', 'Exchange2013_SP1'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "imapHost": {
            "description": "\n\nThe address of the IMAP host, used for syncing (e.g. 'imap.gmail.com').",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "imapPort": {
            "description": "\n\nThe port number the IMAP server is using (e.g. '993').",
            "type": "integer",
            "x-internal": false
          },
          "imapSsl": {
            "description": "\n\nA boolean value whether the IMAP connection will use SSL.",
            "type": "boolean",
            "x-internal": false
          },
          "maxEmailsPerDay": {
            "description": "\n\nThe maximum number of in/out emails per day.",
            "type": "integer",
            "x-internal": false
          },
          "maxMailingsPerDay": {
            "description": "\n\nThe maximum number of emails the application can send in a day from this mailbox. Recommended value is 500.",
            "type": "integer",
            "x-internal": false
          },
          "maxMailingsPerWeek": {
            "description": "\n\nThe maximum number of emails the application can send within a week from this mailbox. Recommended value is 5000.",
            "type": "integer",
            "x-internal": false
          },
          "optOutMessage": {
            "description": "\n\nThe message displayed on the unsubscribe confirmation page, seen after clicking the unsubscribe link in the email (e.g. \"To unsubscribe, click the button below.\").",
            "maxLength": 512,
            "type": "string",
            "x-internal": false
          },
          "optOutSignature": {
            "description": "\n\nThe message below the signature, in HTML, when the sequence requires an unsubscribe link (e.g. \"If you'd like me to stop sending you emails, please `<a href='%unsubscribe_url%'>click here</a>`\").",
            "maxLength": 512,
            "type": "string",
            "x-internal": false
          },
          "password": {
            "description": "<img src=https://developers.outreach.io/badges/writeonly.svg>\n\nThe password of the mailbox. This attribute can be used to set the password, but is not available for read.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "prospectEmailExclusions": {
            "description": "\n\nA list (provided as a string, newline-delimited) of email address patterns to be excluded from syncing (e.g. \"`*@outreach.io\ndaniel@example.com`\").",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "providerId": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe id of the provider associated with this calendar.",
            "type": "integer",
            "x-internal": false
          },
          "providerType": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nEmail provider type.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "sendDisabled": {
            "description": "\n\nA boolean value whether sending is disabled from this mailbox.",
            "type": "boolean",
            "x-internal": false
          },
          "sendErroredAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the most recent send error occurred.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "sendMaxRetries": {
            "description": "\n\nThe maximum number of times to auto-retry a delivery when it fails.",
            "type": "integer",
            "x-internal": false
          },
          "sendMethod": {
            "description": "\n\nThe method used for sending email. Must be either 'ews', 'sendgrid', or 'smtp'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "sendPeriod": {
            "description": "\n\nThe amount of time in seconds that the number of sendThreshold emails can be sent. Recommended value is two deliveries per minute (sendPeriod is 60).",
            "type": "integer",
            "x-internal": false
          },
          "sendRequiresSync": {
            "description": "\n\nA boolean value whether the mailbox is required to be recently synced before sending.",
            "type": "boolean",
            "x-internal": false
          },
          "sendSuccessAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the most recent successful email send occurred.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "sendThreshold": {
            "description": "\n\nThe maximum number of email sends per the sendPeriod amount of time. Recommended value is two deliveries per minute (sendThreshold is 2).",
            "type": "integer",
            "x-internal": false
          },
          "sendgridApiKey": {
            "description": "<img src=https://developers.outreach.io/badges/writeonly.svg>\n\nThe api key of the SendGrid account used for sending.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "sendgridWebhookUrl": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe endpoint required within the SendGrid account settings to support bounce and spam-report tracking.",
            "type": "string",
            "x-internal": false
          },
          "smtpHost": {
            "description": "\n\nThe address of the SMTP host, used for sending (e.g. 'smtp.gmail.com').",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "smtpPassword": {
            "description": "<img src=https://developers.outreach.io/badges/writeonly.svg>\n\nThe password for the SMTP account. This value should be left blank unless a separate SMTP account is being used for sending (i.e. not the mailbox's main username/password).",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "smtpPort": {
            "description": "\n\nThe port number the SMTP server is using (e.g. '587').",
            "type": "integer",
            "x-internal": false
          },
          "smtpSsl": {
            "description": "\n\nA boolean value whether the SMTP connection will use SSL.",
            "type": "boolean",
            "x-internal": false
          },
          "smtpUsername": {
            "description": "\n\nThe username for the SMTP account. This value should be left blank unless a separate SMTP account is being used for sending (i.e. not the mailbox's main username/password).",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "syncActiveFrequency": {
            "description": "\n\nThe amount of time in seconds between syncing when the user is actively using the application.",
            "type": "integer",
            "x-internal": false
          },
          "syncDisabled": {
            "description": "\n\nA boolean value whether syncing is disabled from this mailbox.",
            "type": "boolean",
            "x-internal": false
          },
          "syncErroredAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the most recent sync error occurred.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "syncFinishedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the most recent sync finished.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "syncMethod": {
            "description": "\n\nThe method used for syncing email. Must be either 'ews', 'gmail_api', or 'imap'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "syncOutreachFolder": {
            "description": "\n\nA boolean value whether the folder for syncing is named 'Outreach' instead of 'Inbox'. Only available for Exchange version 'Exchange2007_SP1'.",
            "type": "boolean",
            "x-internal": false
          },
          "syncPassiveFrequency": {
            "description": "\n\nThe amount of time in seconds between syncing when the user is not actively using the application.",
            "type": "integer",
            "x-internal": false
          },
          "syncSuccessAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the most recent successful email sync occurred.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the mailbox was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "userId": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe id of the user associated with this mailbox.",
            "type": "integer",
            "x-internal": false
          },
          "username": {
            "description": "\n\nThe username of the email account. While not a required field, a username is necessary for most email providers outside of OAuth. This value is normally the same as the email address.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "validateSend": {
            "description": "<img src=https://developers.outreach.io/badges/writeonly.svg>\n\nIf this is set to true then the record will only save successfully if the mailbox is properly configured to send emails.",
            "type": "boolean",
            "x-internal": false
          },
          "validateSync": {
            "description": "<img src=https://developers.outreach.io/badges/writeonly.svg>\n\nIf this is set to true then the record will only save successfully if the mailbox is properly configured to sync emails.",
            "type": "boolean",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "mailboxContactRelationships": {
        "properties": {
          "mailbox": {
            "description": "The mailbox associated with this contact.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "mailboxRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the mailbox. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "mailAliases": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe email aliases associated with this mailbox Relationship mailAliases cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailAlias"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailAlias"
            },
            "type": "array",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe mailings sent via this mailbox. Relationship mailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the mailbox. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "user": {
            "description": "The user owning this mailbox. You can use only the attribute id to filter mailboxes by user (e.g. filter[user][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "mailboxResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/mailbox"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/mailboxRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "mailing": {
        "description": "A representation of a platform-related email.",
        "properties": {
          "bodyHtml": {
            "description": "\n\nThe mailing's custom email body, represented in HTML. If provided this field will override any associated template.",
            "type": "string",
            "x-internal": false
          },
          "bodyText": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe plain-text representation of the 'bodyHTML' field.",
            "type": "string",
            "x-internal": false
          },
          "bouncedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email was bounced.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total number of times links within the email were clicked (if the message is tracking links).",
            "type": "integer",
            "x-internal": false
          },
          "clickedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe most recent date and time a link was clicked (if the message is tracking links).",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the mailing was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "deliveredAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email was delivered.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "errorBacktrace": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nTechnical details explaining the mailing's error.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "errorReason": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA summary explaining the mailing's error.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "followUpTaskScheduledAt": {
            "description": "\n\nThe date and time of when a follow-up task should be due for this mailing.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "followUpTaskType": {
            "description": "\n\nThe type of follow-up task to create. Possible values are 'follow_up' or 'no_reply'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "mailboxAddress": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe email address the mailing was sent from.",
            "type": "string",
            "x-internal": false
          },
          "mailingType": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA description of the type of the emailing (e.g. \"sequence\", \"single\", \"campaign\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "markedAsSpamAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the email was marked as spam.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "messageId": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe MIME content Message-ID of the delivered message.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "notifyThreadCondition": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe condition of when to bump this mailing to the top of the user's inbox. Possible values are 'always' or 'no_reply'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "notifyThreadScheduledAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time of when this mailing should be bumped to the top of the user's inbox.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "notifyThreadStatus": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe status of the bump. Possible values are 'pending', 'sent' or 'skipped'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total number of times the email was opened (if the message is tracking opens).",
            "type": "integer",
            "x-internal": false
          },
          "openedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe most recent date and time the email was opened (if the message is tracking opens).",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "overrideSafetySettings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value whether users can override submission if template variables have not all been replaced.",
            "type": "boolean",
            "x-internal": false
          },
          "references": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA list of references for the mailing taken from the email header.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "repliedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email was replied to.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "retryAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email will rety to send.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "retryCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe number of times the email has been retried to send.",
            "type": "integer",
            "x-internal": false
          },
          "retryInterval": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe amount of time in seconds between retry attempts.",
            "type": "integer",
            "x-internal": false
          },
          "scheduledAt": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the email is scheduled to send.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "state": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe current state of the mailing. Can be 'bounced', 'delivered', 'delivering', 'drafted', 'failed', 'opened', 'placeholder', 'queued', 'replied', or 'scheduled'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stateChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the state last changed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "subject": {
            "description": "\n\nThe subject line of the email.",
            "type": "string",
            "x-internal": false
          },
          "trackLinks": {
            "description": "\n\nA boolean value whether the mailing is tracking link clicks.",
            "type": "boolean",
            "x-internal": false
          },
          "trackOpens": {
            "description": "\n\nA boolean value whether the mailing is tracking email opens.",
            "type": "boolean",
            "x-internal": false
          },
          "unsubscribedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the recepient unsubscribed from the mailing's sequence.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the mailing was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "mailingRelationships": {
        "properties": {
          "followUpSequence": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe followup sequence associated with this mailing. You can use only the attribute id to filter mailings by followUpSequence (e.g. filter[followUpSequence][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "mailbox": {
            "description": "The mailbox associated with this mailing. You can use only the attribute id to filter mailings by mailbox (e.g. filter[mailbox][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          },
          "opportunity": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated opportunity. You can use only the attribute id to filter mailings by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "prospect": {
            "description": "The prospect associated with this mailing. You can use only the attribute id to filter mailings by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "recipients": {
            "description": "Recipients of the mailing. Relationship recipients cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "recipient"
            },
            "type": "array",
            "x-internal": false
          },
          "sequence": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence. You can use only the attribute id to filter mailings by sequence (e.g. filter[sequence][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "sequenceState": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence state. You can use only the attribute id to filter mailings by sequenceState (e.g. filter[sequenceState][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          },
          "sequenceStep": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence step. You can use only the attribute id to filter mailings by sequenceStep (e.g. filter[sequenceStep][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceStep",
            "x-internal": false
          },
          "task": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe task this mailing will or did complete upon sending. You can use only the attribute id to filter mailings by task (e.g. filter[task][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["task"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "task",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nAll tasks associated with this mailing, such as a follow-up task. Relationship tasks cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "template": {
            "description": "The template associated with this mailing. You can use only the attribute id to filter mailings by template (e.g. filter[template][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "template",
            "x-internal": false
          },
          "user": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe user associated with this mailing. You can use only the attribute id to filter mailings by user (e.g. filter[user][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "mailingResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/mailing"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/mailingRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "meetingFieldRelationships": {
        "type": "object"
      },
      "meetingRelationships": {
        "type": "object"
      },
      "meetingTypeRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the meeting type.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "owner": {
            "description": "The user who owns this meeting type.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "team": {
            "description": "",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "team",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "modelSchemaVersionRelationships": {
        "type": "object"
      },
      "noteRelationships": {
        "type": "object"
      },
      "opportunity": {
        "description": "An opportunity for a sale or pending deal. Requires the Opportunities SKU to be enabled in order to have access. Please contact support for more assistance.",
        "properties": {
          "amount": {
            "description": "<img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe amount the opportunity is worth.",
            "type": "integer",
            "x-internal": false
          },
          "closeDate": {
            "description": "<img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date the opportunity is expected to close.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date the opportunity was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "currencyType": {
            "description": "\n\nThe ISO code of the currency this opportunity is in.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "custom1": {
            "description": "\n\nThe value of the opportunity's first custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom2": {
            "description": "\n\nThe value of the opportunity's second custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom3": {
            "description": "\n\nThe value of the opportunity's third custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom4": {
            "description": "\n\nThe value of the opportunity's fourth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom5": {
            "description": "\n\nThe value of the opportunity's fifth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom6": {
            "description": "\n\nThe value of the opportunity's sixth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom7": {
            "description": "\n\nThe value of the opportunity's seventh custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom8": {
            "description": "\n\nThe value of the opportunity's eighth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom9": {
            "description": "\n\nThe value of the opportunity's ninth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom10": {
            "description": "\n\nThe value of the opportunity's 10th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom11": {
            "description": "\n\nThe value of the opportunity's 11th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom12": {
            "description": "\n\nThe value of the opportunity's 12th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom13": {
            "description": "\n\nThe value of the opportunity's 13th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom14": {
            "description": "\n\nThe value of the opportunity's 14th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom15": {
            "description": "\n\nThe value of the opportunity's 15th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom16": {
            "description": "\n\nThe value of the opportunity's 16th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom17": {
            "description": "\n\nThe value of the opportunity's 17th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom18": {
            "description": "\n\nThe value of the opportunity's 18th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom19": {
            "description": "\n\nThe value of the opportunity's 19th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom20": {
            "description": "\n\nThe value of the opportunity's 20th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom21": {
            "description": "\n\nThe value of the opportunity's 21st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom22": {
            "description": "\n\nThe value of the opportunity's 22nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom23": {
            "description": "\n\nThe value of the opportunity's 23rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom24": {
            "description": "\n\nThe value of the opportunity's 24th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom25": {
            "description": "\n\nThe value of the opportunity's 25th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom26": {
            "description": "\n\nThe value of the opportunity's 26th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom27": {
            "description": "\n\nThe value of the opportunity's 27th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom28": {
            "description": "\n\nThe value of the opportunity's 28th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom29": {
            "description": "\n\nThe value of the opportunity's 29th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom30": {
            "description": "\n\nThe value of the opportunity's 30th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom31": {
            "description": "\n\nThe value of the opportunity's 31st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom32": {
            "description": "\n\nThe value of the opportunity's 32nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom33": {
            "description": "\n\nThe value of the opportunity's 33rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom34": {
            "description": "\n\nThe value of the opportunity's 34th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom35": {
            "description": "\n\nThe value of the opportunity's 35th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom36": {
            "description": "\n\nThe value of the opportunity's 36th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom37": {
            "description": "\n\nThe value of the opportunity's 37th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom38": {
            "description": "\n\nThe value of the opportunity's 38th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom39": {
            "description": "\n\nThe value of the opportunity's 39th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom40": {
            "description": "\n\nThe value of the opportunity's 40th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom41": {
            "description": "\n\nThe value of the opportunity's 41st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom42": {
            "description": "\n\nThe value of the opportunity's 42nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom43": {
            "description": "\n\nThe value of the opportunity's 43rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom44": {
            "description": "\n\nThe value of the opportunity's 44th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom45": {
            "description": "\n\nThe value of the opportunity's 45th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom46": {
            "description": "\n\nThe value of the opportunity's 46th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom47": {
            "description": "\n\nThe value of the opportunity's 47th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom48": {
            "description": "\n\nThe value of the opportunity's 48th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom49": {
            "description": "\n\nThe value of the opportunity's 49th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom50": {
            "description": "\n\nThe value of the opportunity's 50th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom51": {
            "description": "\n\nThe value of the opportunity's 51st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom52": {
            "description": "\n\nThe value of the opportunity's 52nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom53": {
            "description": "\n\nThe value of the opportunity's 53rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom54": {
            "description": "\n\nThe value of the opportunity's 54th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom55": {
            "description": "\n\nThe value of the opportunity's 55th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom56": {
            "description": "\n\nThe value of the opportunity's 56th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom57": {
            "description": "\n\nThe value of the opportunity's 57th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom58": {
            "description": "\n\nThe value of the opportunity's 58th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom59": {
            "description": "\n\nThe value of the opportunity's 59th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom60": {
            "description": "\n\nThe value of the opportunity's 60th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom61": {
            "description": "\n\nThe value of the opportunity's 61st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom62": {
            "description": "\n\nThe value of the opportunity's 62nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom63": {
            "description": "\n\nThe value of the opportunity's 63rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom64": {
            "description": "\n\nThe value of the opportunity's 64th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom65": {
            "description": "\n\nThe value of the opportunity's 65th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom66": {
            "description": "\n\nThe value of the opportunity's 66th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom67": {
            "description": "\n\nThe value of the opportunity's 67th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom68": {
            "description": "\n\nThe value of the opportunity's 68th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom69": {
            "description": "\n\nThe value of the opportunity's 69th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom70": {
            "description": "\n\nThe value of the opportunity's 70th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom71": {
            "description": "\n\nThe value of the opportunity's 71st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom72": {
            "description": "\n\nThe value of the opportunity's 72nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom73": {
            "description": "\n\nThe value of the opportunity's 73rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom74": {
            "description": "\n\nThe value of the opportunity's 74th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom75": {
            "description": "\n\nThe value of the opportunity's 75th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom76": {
            "description": "\n\nThe value of the opportunity's 76th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom77": {
            "description": "\n\nThe value of the opportunity's 77th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom78": {
            "description": "\n\nThe value of the opportunity's 78th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom79": {
            "description": "\n\nThe value of the opportunity's 79th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom80": {
            "description": "\n\nThe value of the opportunity's 80th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom81": {
            "description": "\n\nThe value of the opportunity's 81st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom82": {
            "description": "\n\nThe value of the opportunity's 82nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom83": {
            "description": "\n\nThe value of the opportunity's 83rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom84": {
            "description": "\n\nThe value of the opportunity's 84th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom85": {
            "description": "\n\nThe value of the opportunity's 85th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom86": {
            "description": "\n\nThe value of the opportunity's 86th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom87": {
            "description": "\n\nThe value of the opportunity's 87th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom88": {
            "description": "\n\nThe value of the opportunity's 88th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom89": {
            "description": "\n\nThe value of the opportunity's 89th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom90": {
            "description": "\n\nThe value of the opportunity's 90th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom91": {
            "description": "\n\nThe value of the opportunity's 91st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom92": {
            "description": "\n\nThe value of the opportunity's 92nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom93": {
            "description": "\n\nThe value of the opportunity's 93rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom94": {
            "description": "\n\nThe value of the opportunity's 94th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom95": {
            "description": "\n\nThe value of the opportunity's 95th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom96": {
            "description": "\n\nThe value of the opportunity's 96th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom97": {
            "description": "\n\nThe value of the opportunity's 97th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom98": {
            "description": "\n\nThe value of the opportunity's 98th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom99": {
            "description": "\n\nThe value of the opportunity's 99th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom100": {
            "description": "\n\nThe value of the opportunity's 100th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom101": {
            "description": "\n\nThe value of the opportunity’s 101st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom102": {
            "description": "\n\nThe value of the opportunity’s 102nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom103": {
            "description": "\n\nThe value of the opportunity’s 103rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom104": {
            "description": "\n\nThe value of the opportunity’s 104th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom105": {
            "description": "\n\nThe value of the opportunity’s 105th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom106": {
            "description": "\n\nThe value of the opportunity’s 106th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom107": {
            "description": "\n\nThe value of the opportunity’s 107th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom108": {
            "description": "\n\nThe value of the opportunity’s 108th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom109": {
            "description": "\n\nThe value of the opportunity’s 109th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom110": {
            "description": "\n\nThe value of the opportunity’s 110th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom111": {
            "description": "\n\nThe value of the opportunity’s 111th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom112": {
            "description": "\n\nThe value of the opportunity’s 112th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom113": {
            "description": "\n\nThe value of the opportunity’s 113th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom114": {
            "description": "\n\nThe value of the opportunity’s 114th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom115": {
            "description": "\n\nThe value of the opportunity’s 115th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom116": {
            "description": "\n\nThe value of the opportunity’s 116th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom117": {
            "description": "\n\nThe value of the opportunity’s 117th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom118": {
            "description": "\n\nThe value of the opportunity’s 118th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom119": {
            "description": "\n\nThe value of the opportunity’s 119th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom120": {
            "description": "\n\nThe value of the opportunity’s 120th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom121": {
            "description": "\n\nThe value of the opportunity’s 121st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom122": {
            "description": "\n\nThe value of the opportunity’s 122nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom123": {
            "description": "\n\nThe value of the opportunity’s 123rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom124": {
            "description": "\n\nThe value of the opportunity’s 124th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom125": {
            "description": "\n\nThe value of the opportunity’s 125th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom126": {
            "description": "\n\nThe value of the opportunity’s 126th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom127": {
            "description": "\n\nThe value of the opportunity’s 127th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom128": {
            "description": "\n\nThe value of the opportunity’s 128th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom129": {
            "description": "\n\nThe value of the opportunity’s 129th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom130": {
            "description": "\n\nThe value of the opportunity’s 130th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom131": {
            "description": "\n\nThe value of the opportunity’s 131st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom132": {
            "description": "\n\nThe value of the opportunity’s 132nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom133": {
            "description": "\n\nThe value of the opportunity’s 133rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom134": {
            "description": "\n\nThe value of the opportunity’s 134th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom135": {
            "description": "\n\nThe value of the opportunity’s 135th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom136": {
            "description": "\n\nThe value of the opportunity’s 136th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom137": {
            "description": "\n\nThe value of the opportunity’s 137th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom138": {
            "description": "\n\nThe value of the opportunity’s 138th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom139": {
            "description": "\n\nThe value of the opportunity’s 139th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom140": {
            "description": "\n\nThe value of the opportunity’s 140th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom141": {
            "description": "\n\nThe value of the opportunity’s 141st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom142": {
            "description": "\n\nThe value of the opportunity’s 142nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom143": {
            "description": "\n\nThe value of the opportunity’s 143rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom144": {
            "description": "\n\nThe value of the opportunity’s 144th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom145": {
            "description": "\n\nThe value of the opportunity’s 145th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom146": {
            "description": "\n\nThe value of the opportunity’s 146th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom147": {
            "description": "\n\nThe value of the opportunity’s 147th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom148": {
            "description": "\n\nThe value of the opportunity’s 148th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom149": {
            "description": "\n\nThe value of the opportunity’s 149th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom150": {
            "description": "\n\nThe value of the opportunity’s 150th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "description": {
            "description": "\n\nA description of the opportunity.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "externalCreatedAt": {
            "description": "\n\nThe date the opportunity was created in the external system.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "mapLink": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nA link to the SamePlan MAP (Mutual Action Plan) associated with this opportunity.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "mapNextSteps": {
            "description": "\n\nThe next event in the timeline that has yet to be completed for the SamePlan MAP (Mutual Action Plan).",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "mapStatus": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe status of the SamePlan MAP (Mutual Action Plan) based on how well both parties are trending towards the plan.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the opportunity.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "nextStep": {
            "description": "\n\nThe next step to take for the opportunity.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "opportunityType": {
            "description": "\n\nThe type of opportunity.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "probability": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe chances of the opportunity succeeding, represented as a percentage.",
            "type": "integer",
            "x-internal": false
          },
          "prospectingRepId": {
            "description": "\n\nThe ID of the sales rep that prospects the opportunity.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "sharingTeamId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe ID of the sharing team associated with this object. Access is currently in beta.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nTags associated with the opportunity.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "touchedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe last time an event happened for an opportunity.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date the opportunity was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "opportunityHealthFactorRelationships": {
        "properties": {
          "opportunity": {
            "description": "The opportunity the health factor apply to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "opportunityProspectRole": {
        "description": "A prospect's role and association with an opportunity",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the role was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "primary": {
            "description": "\n\nA boolean value indicating if this prospect is the primary contact within an opportunity.",
            "type": "boolean",
            "x-internal": false
          },
          "role": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA string value representing the role.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the role was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "opportunityProspectRoleRelationships": {
        "properties": {
          "opportunity": {
            "description": "The opportunity associated with the role. You can use only the attribute id to filter opportunityProspectRoles by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "prospect": {
            "description": "The prospect associated with the role. You can use only the attribute id to filter opportunityProspectRoles by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "opportunityProspectRoleResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/opportunityProspectRole"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/opportunityProspectRoleRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "opportunityRelationships": {
        "properties": {
          "account": {
            "description": "The account the opportunity is for. You can use attributes id and name to filter opportunities by account (e.g. filter[account][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "account",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the opportunity. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "opportunityStage": {
            "description": "The current stage of the opportunity. You can use only the attribute id to filter opportunities by stage (e.g. filter[stage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunityStage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunityStage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunityStage",
            "x-internal": false
          },
          "owner": {
            "description": "The user who owns the opportunity. You can use only the attribute id to filter opportunities by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "prospects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe prospects associated with this opportunity. You can use only the attribute id to filter opportunities by prospects (e.g. filter[prospects][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "prospect"
            },
            "type": "array",
            "x-internal": false
          },
          "stage": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe current stage of the opportunity. You can use only the attribute id to filter opportunities by stage (e.g. filter[stage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunityStage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunityStage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunityStage",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe updater of the opportunity. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "opportunityResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/opportunity"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/opportunityRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "opportunityStage": {
        "description": "The stage an opportunity is in. Requires the Opportunities SKU to be enabled in order to have access. Please contact support for more assistance.",
        "properties": {
          "color": {
            "description": "\n\nThe color used to label and highlight the opportunity stage.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the opportunity stage was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "isClosed": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nEither true or flase, whether or not the opportunity stage represents an open or closed state of an opportunity.",
            "type": "boolean",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the opportunity stage.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe order of the opportunity stage.",
            "type": "integer",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the opportunity stage was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "opportunityStageRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the opportunity. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "opportunities": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe opportunities currently associated with the opportunity stage. Relationship opportunities cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["opportunity"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "opportunity"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "opportunityStageResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/opportunityStage"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/opportunityStageRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "orgSettingRelationships": {
        "type": "object"
      },
      "outboundVoicemailRelationships": {
        "properties": {
          "user": {
            "description": "",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "outlookAddInEwsItemRelationships": {
        "properties": {
          "mailbox": {
            "description": "The mailbox this originated from",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "permissionGrantRelationships": {
        "type": "object"
      },
      "persona": {
        "description": "A descriptor of a person, used for categorizing Prospects.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the persona was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "description": {
            "description": "\n\nA description of the persona.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the persona (e.g. \"Sales Rep\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the persona was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "personaRelationships": {
        "properties": {
          "prospects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe prospects with this persona. Relationship prospects cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "prospect"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "personaResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/persona"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/personaRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "phoneIdentityRelationships": {
        "properties": {
          "owner": {
            "description": "The owner of this identity.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "phoneNumber": {
        "description": "A prospect's phone number",
        "properties": {
          "countryCode": {
            "description": "\n\nThe country code (e.g. US)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the phone number was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "extension": {
            "description": "\n\nPhone number extension (e.g. 123)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "number": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe phone number (e.g. +18889387356)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nOrdered position in list of numbers",
            "type": "integer",
            "x-internal": false
          },
          "phoneType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nType of phone (mobile, work, home, voip, and other)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "rawNumber": {
            "description": "\n\nUnformatted phone number",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "status": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe status of the number",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "statusChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nTime the status was updated",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the phone number was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "phoneNumberPredictionRelationships": {
        "type": "object"
      },
      "phoneNumberRelationships": {
        "properties": {
          "prospect": {
            "description": "The owning prospect You can use only the attribute id to filter phoneNumbers by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "phoneNumberResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/phoneNumber"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/phoneNumberRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "phoneRelationships": {
        "properties": {
          "user": {
            "description": "The User this phone belongs to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "pluginErrorLogPreSignedUrlRelationships": {
        "type": "object"
      },
      "pluginMappingRelationships": {
        "type": "object"
      },
      "pluginRelationships": {
        "type": "object"
      },
      "profile": {
        "description": "Controls what you can see and do within Outreach",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "isAdmin": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nFlag that indicates whether the profile provides admin access.",
            "type": "boolean",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the profile (e.g. \"Admin\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "specialId": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe special id flag assigned to the profile (i.e. admin or default)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "profileRelationships": {
        "type": "object"
      },
      "profileResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/profile"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/profileRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "prospect": {
        "description": "A descriptor of a person.",
        "properties": {
          "addedAt": {
            "description": "\n\nThe date and time the prospect was added to any system.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "addressCity": {
            "description": "\n\nThe prospect’s city (e.g. \"Seattle\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "addressCountry": {
            "description": "\n\nThe prospect’s country (e.g. \"USA\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "addressState": {
            "description": "\n\nThe prospect’s state (e.g. \"Washington\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "addressStreet": {
            "description": "\n\nThe prospect’s street address (e.g. \"1441 N 34th St\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "addressStreet2": {
            "description": "\n\nThe prospect’s second street address, if applicable.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "addressZip": {
            "description": "\n\nThe prospect’s postal code (e.g. \"98103\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "angelListUrl": {
            "description": "\n\nThe prospect’s AngelList URL.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "availableAt": {
            "description": "\n\nThe date and time the prospect is available to contact again.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "callOptedOut": {
            "description": "\n\nWhether the prospect is opted out of calling, or opted out in general if granular opt-out is not enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "callsOptStatus": {
            "description": "\n\nA string (\"opted_in\", \"opted_out\", \"null\") that represents whether a prospect has opted into or out of calls.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "callsOptedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the prospect opted in/out of calls.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "campaignName": {
            "description": "\n\nThe name of the campaign the prospect is associated with.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe number of clicks the prospect has made since the last touch point.",
            "type": "integer",
            "x-internal": false
          },
          "company": {
            "description": "\n\nThe name of the company the prospect works at. If associated with an account, this is the name of the account. (e.g. Acme International).",
            "type": "string",
            "x-internal": false
          },
          "contactHistogram": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe last 12 months of email contact history with the prospect, with the current month being the last element. The format for each month is '[inboundCount, outboundCount]'. Note: Retrieving this field will slow down the queries. Unless this field is required, it is best to filter it out. See Specify Sparse Fieldsets for examples",
            "items": {
              "format": "contact histogram"
            },
            "type": "array",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the prospect was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "custom1": {
            "description": "\n\nThe value of the prospect’s first custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom2": {
            "description": "\n\nThe value of the prospect’s second custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom3": {
            "description": "\n\nThe value of the prospect’s third custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom4": {
            "description": "\n\nThe value of the prospect’s fourth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom5": {
            "description": "\n\nThe value of the prospect’s fifth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom6": {
            "description": "\n\nThe value of the prospect’s sixth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom7": {
            "description": "\n\nThe value of the prospect’s seventh custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom8": {
            "description": "\n\nThe value of the prospect’s eight custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom9": {
            "description": "\n\nThe value of the prospect’s ninth custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom10": {
            "description": "\n\nThe value of the prospect’s 10th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom11": {
            "description": "\n\nThe value of the prospect’s 11th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom12": {
            "description": "\n\nThe value of the prospect’s 12th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom13": {
            "description": "\n\nThe value of the prospect’s 13th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom14": {
            "description": "\n\nThe value of the prospect’s 14th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom15": {
            "description": "\n\nThe value of the prospect’s 15th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom16": {
            "description": "\n\nThe value of the prospect’s 16th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom17": {
            "description": "\n\nThe value of the prospect’s 17th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom18": {
            "description": "\n\nThe value of the prospect’s 18th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom19": {
            "description": "\n\nThe value of the prospect’s 19th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom20": {
            "description": "\n\nThe value of the prospect’s 20th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom21": {
            "description": "\n\nThe value of the prospect’s 21st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom22": {
            "description": "\n\nThe value of the prospect’s 22nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom23": {
            "description": "\n\nThe value of the prospect’s 23rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom24": {
            "description": "\n\nThe value of the prospect’s 24th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom25": {
            "description": "\n\nThe value of the prospect’s 25th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom26": {
            "description": "\n\nThe value of the prospect’s 26th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom27": {
            "description": "\n\nThe value of the prospect’s 27th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom28": {
            "description": "\n\nThe value of the prospect’s 28th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom29": {
            "description": "\n\nThe value of the prospect’s 29th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom30": {
            "description": "\n\nThe value of the prospect’s 30th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom31": {
            "description": "\n\nThe value of the prospect’s 31st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom32": {
            "description": "\n\nThe value of the prospect’s 32nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom33": {
            "description": "\n\nThe value of the prospect’s 33rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom34": {
            "description": "\n\nThe value of the prospect’s 34th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom35": {
            "description": "\n\nThe value of the prospect’s 35th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom36": {
            "description": "\n\nThe value of the prospect’s 36th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom37": {
            "description": "\n\nThe value of the prospect’s 37th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom38": {
            "description": "\n\nThe value of the prospect’s 38th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom39": {
            "description": "\n\nThe value of the prospect’s 39th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom40": {
            "description": "\n\nThe value of the prospect’s 40th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom41": {
            "description": "\n\nThe value of the prospect’s 41st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom42": {
            "description": "\n\nThe value of the prospect’s 42nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom43": {
            "description": "\n\nThe value of the prospect’s 43rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom44": {
            "description": "\n\nThe value of the prospect’s 44th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom45": {
            "description": "\n\nThe value of the prospect’s 45th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom46": {
            "description": "\n\nThe value of the prospect’s 46th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom47": {
            "description": "\n\nThe value of the prospect’s 47th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom48": {
            "description": "\n\nThe value of the prospect’s 48th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom49": {
            "description": "\n\nThe value of the prospect’s 49th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom50": {
            "description": "\n\nThe value of the prospect’s 50th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom51": {
            "description": "\n\nThe value of the prospect’s 51st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom52": {
            "description": "\n\nThe value of the prospect’s 52nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom53": {
            "description": "\n\nThe value of the prospect’s 53rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom54": {
            "description": "\n\nThe value of the prospect’s 54th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom55": {
            "description": "\n\nThe value of the prospect’s 55th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom56": {
            "description": "\n\nThe value of the prospect’s 56th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom57": {
            "description": "\n\nThe value of the prospect’s 57th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom58": {
            "description": "\n\nThe value of the prospect’s 58th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom59": {
            "description": "\n\nThe value of the prospect’s 59th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom60": {
            "description": "\n\nThe value of the prospect’s 60th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom61": {
            "description": "\n\nThe value of the prospect’s 61st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom62": {
            "description": "\n\nThe value of the prospect’s 62nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom63": {
            "description": "\n\nThe value of the prospect’s 63rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom64": {
            "description": "\n\nThe value of the prospect’s 64th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom65": {
            "description": "\n\nThe value of the prospect’s 65th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom66": {
            "description": "\n\nThe value of the prospect’s 66th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom67": {
            "description": "\n\nThe value of the prospect’s 67th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom68": {
            "description": "\n\nThe value of the prospect’s 68th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom69": {
            "description": "\n\nThe value of the prospect’s 69th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom70": {
            "description": "\n\nThe value of the prospect’s 70th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom71": {
            "description": "\n\nThe value of the prospect’s 71st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom72": {
            "description": "\n\nThe value of the prospect’s 72nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom73": {
            "description": "\n\nThe value of the prospect’s 73rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom74": {
            "description": "\n\nThe value of the prospect’s 74th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom75": {
            "description": "\n\nThe value of the prospect’s 75th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom76": {
            "description": "\n\nThe value of the prospect’s 76th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom77": {
            "description": "\n\nThe value of the prospect’s 77th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom78": {
            "description": "\n\nThe value of the prospect’s 78th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom79": {
            "description": "\n\nThe value of the prospect’s 79th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom80": {
            "description": "\n\nThe value of the prospect’s 80th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom81": {
            "description": "\n\nThe value of the prospect’s 81st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom82": {
            "description": "\n\nThe value of the prospect’s 82nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom83": {
            "description": "\n\nThe value of the prospect’s 83rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom84": {
            "description": "\n\nThe value of the prospect’s 84th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom85": {
            "description": "\n\nThe value of the prospect’s 85th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom86": {
            "description": "\n\nThe value of the prospect’s 86th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom87": {
            "description": "\n\nThe value of the prospect’s 87th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom88": {
            "description": "\n\nThe value of the prospect’s 88th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom89": {
            "description": "\n\nThe value of the prospect’s 89th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom90": {
            "description": "\n\nThe value of the prospect’s 90th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom91": {
            "description": "\n\nThe value of the prospect’s 91st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom92": {
            "description": "\n\nThe value of the prospect’s 92nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom93": {
            "description": "\n\nThe value of the prospect’s 93rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom94": {
            "description": "\n\nThe value of the prospect’s 94th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom95": {
            "description": "\n\nThe value of the prospect’s 95th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom96": {
            "description": "\n\nThe value of the prospect’s 96th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom97": {
            "description": "\n\nThe value of the prospect’s 97th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom98": {
            "description": "\n\nThe value of the prospect’s 98th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom99": {
            "description": "\n\nThe value of the prospect’s 99th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom100": {
            "description": "\n\nThe value of the prospect’s 100th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom101": {
            "description": "\n\nThe value of the prospect’s 101st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom102": {
            "description": "\n\nThe value of the prospect’s 102nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom103": {
            "description": "\n\nThe value of the prospect’s 103rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom104": {
            "description": "\n\nThe value of the prospect’s 104th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom105": {
            "description": "\n\nThe value of the prospect’s 105th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom106": {
            "description": "\n\nThe value of the prospect’s 106th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom107": {
            "description": "\n\nThe value of the prospect’s 107th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom108": {
            "description": "\n\nThe value of the prospect’s 108th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom109": {
            "description": "\n\nThe value of the prospect’s 109th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom110": {
            "description": "\n\nThe value of the prospect’s 110th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom111": {
            "description": "\n\nThe value of the prospect’s 111th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom112": {
            "description": "\n\nThe value of the prospect’s 112th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom113": {
            "description": "\n\nThe value of the prospect’s 113th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom114": {
            "description": "\n\nThe value of the prospect’s 114th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom115": {
            "description": "\n\nThe value of the prospect’s 115th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom116": {
            "description": "\n\nThe value of the prospect’s 116th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom117": {
            "description": "\n\nThe value of the prospect’s 117th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom118": {
            "description": "\n\nThe value of the prospect’s 118th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom119": {
            "description": "\n\nThe value of the prospect’s 119th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom120": {
            "description": "\n\nThe value of the prospect’s 120th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom121": {
            "description": "\n\nThe value of the prospect’s 121st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom122": {
            "description": "\n\nThe value of the prospect’s 122nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom123": {
            "description": "\n\nThe value of the prospect’s 123rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom124": {
            "description": "\n\nThe value of the prospect’s 124th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom125": {
            "description": "\n\nThe value of the prospect’s 125th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom126": {
            "description": "\n\nThe value of the prospect’s 126th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom127": {
            "description": "\n\nThe value of the prospect’s 127th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom128": {
            "description": "\n\nThe value of the prospect’s 128th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom129": {
            "description": "\n\nThe value of the prospect’s 129th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom130": {
            "description": "\n\nThe value of the prospect’s 130th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom131": {
            "description": "\n\nThe value of the prospect’s 131st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom132": {
            "description": "\n\nThe value of the prospect’s 132nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom133": {
            "description": "\n\nThe value of the prospect’s 133rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom134": {
            "description": "\n\nThe value of the prospect’s 134th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom135": {
            "description": "\n\nThe value of the prospect’s 135th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom136": {
            "description": "\n\nThe value of the prospect’s 136th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom137": {
            "description": "\n\nThe value of the prospect’s 137th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom138": {
            "description": "\n\nThe value of the prospect’s 138th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom139": {
            "description": "\n\nThe value of the prospect’s 139th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom140": {
            "description": "\n\nThe value of the prospect’s 140th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom141": {
            "description": "\n\nThe value of the prospect’s 141st custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom142": {
            "description": "\n\nThe value of the prospect’s 142nd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom143": {
            "description": "\n\nThe value of the prospect’s 143rd custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom144": {
            "description": "\n\nThe value of the prospect’s 144th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom145": {
            "description": "\n\nThe value of the prospect’s 145th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom146": {
            "description": "\n\nThe value of the prospect’s 146th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom147": {
            "description": "\n\nThe value of the prospect’s 147th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom148": {
            "description": "\n\nThe value of the prospect’s 148th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom149": {
            "description": "\n\nThe value of the prospect’s 149th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "custom150": {
            "description": "\n\nThe value of the prospect’s 150th custom field.",
            "maxLength": 32000,
            "type": "string",
            "x-internal": false
          },
          "dateOfBirth": {
            "description": "\n\nThe date the prospect was born.",
            "format": "date",
            "type": "string",
            "x-internal": false
          },
          "degree": {
            "description": "\n\nThe degree(s) the prospect has received.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailOptedOut": {
            "description": "\n\nWhether the prospect is opted out of email, or opted out in general if granular opt-out is not enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "emails": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nA list of email addresses associated with the prospect.",
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "emailsOptStatus": {
            "description": "\n\nA string (\"opted_in\", \"opted_out\", \"null\") that represents whether a prospect has opted into or out of emails.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "emailsOptedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the prospect opted in/out of emails.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "engagedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the prospect last engaged.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "engagedScore": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA number representing the quality of the lead, based on the number of the prospect’s opens, clicks and mailing replies.",
            "format": "float",
            "type": "number",
            "x-internal": false
          },
          "eventName": {
            "description": "\n\nThe name of the event the prospect was met at.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "externalId": {
            "description": "\n\nA custom ID for the prospect, often referencing an ID in an external system.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "externalOwner": {
            "description": "\n\nA custom owner for the prospect, often referencing an ownering in an external system.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "externalSource": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe source of the resource’s creation (e.g. \"outreach-api\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "facebookUrl": {
            "description": "\n\nThe prospect’s Facebook URL.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "firstName": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe first name of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "gender": {
            "description": "\n\nThe gender of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "githubUrl": {
            "description": "\n\nThe prospect’s GitHub URL.",
            "maxLength": 1000,
            "type": "string",
            "x-internal": false
          },
          "githubUsername": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe prospect’s GitHub username.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "googlePlusUrl": {
            "description": "\n\nThe prospect’s Google+ URL.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "graduationDate": {
            "description": "\n\nThe graduation date of the prospect.",
            "format": "date",
            "type": "string",
            "x-internal": false
          },
          "homePhones": {
            "description": "\n\nA list of home phone numbers associated with the prospect.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "jobStartDate": {
            "description": "\n\nThe starting date of the prospect’s current job.",
            "format": "date",
            "type": "string",
            "x-internal": false
          },
          "lastName": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe last name of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "linkedInConnections": {
            "description": "\n\nThe number of connections on the prospect’s LinkedIn profile.",
            "type": "integer",
            "x-internal": false
          },
          "linkedInId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe prospect’s LinkedIn ID.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "linkedInSlug": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe prospect’s LinkedIn slug.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "linkedInUrl": {
            "description": "\n\nThe prospect’s LinkedIn URL.",
            "maxLength": 1000,
            "type": "string",
            "x-internal": false
          },
          "middleName": {
            "description": "\n\nThe middle name of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "mobilePhones": {
            "description": "\n\nA list of mobile phone numbers associated with the prospect.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe full name of the prospect.",
            "type": "string",
            "x-internal": false
          },
          "nickname": {
            "description": "\n\nThe nickname of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "occupation": {
            "description": "\n\nThe occupation of the prospect (e.g. \"Purchasing Manager\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe number of opens the prospect has made since the last touch point.",
            "type": "integer",
            "x-internal": false
          },
          "optedOut": {
            "description": "\n\nA boolean value representing whether this prospect is currently opted out of all mailings. Set this value to true to opt out the prospect; the 'opted_out' timestamp will be updated to the time of the request. Set this value to false to revert the opt at and clear the opted out timestamp.",
            "type": "boolean",
            "x-internal": false
          },
          "optedOutAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the prospect opted out of emails.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "otherPhones": {
            "description": "\n\nA list of other phone numbers associated with the prospect.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "personalNote1": {
            "description": "\n\nA custom note field related to the prospect.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "personalNote2": {
            "description": "\n\nA second note field related to the prospect.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "preferredContact": {
            "description": "\n\nThe preferred contact method for the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "quoraUrl": {
            "description": "\n\nThe prospect’s Quora URL.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "region": {
            "description": "\n\nThe primary geographic region of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe number of replies the prospect has made since the last touch point.",
            "type": "integer",
            "x-internal": false
          },
          "school": {
            "description": "\n\nThe school(s) the prospect has attended.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "score": {
            "description": "\n\nA custom score given to measure the quality of the lead.",
            "format": "float",
            "type": "number",
            "x-internal": false
          },
          "sharingTeamId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe ID of the sharing team associated with this object. Access is currently in beta.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "source": {
            "description": "\n\nA custom source representing where the lead was first acquired.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "specialties": {
            "description": "\n\nA description of the prospect’s specialties.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "stackOverflowId": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe prospect’s StackOverflow ID.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stackOverflowUrl": {
            "description": "\n\nThe prospect’s StackOverflow URL.",
            "maxLength": 1000,
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tag values associated with the account (e.g. [\"Interested\", \"2017 Expo\"]).",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "timeZone": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg>\n\nThe prospect’s current timezone, preferably in the IANA format (e.g. \"America/LosAngeles\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "timeZoneIana": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe prospect’s current IANA timezone, if available.",
            "type": "string",
            "x-internal": false
          },
          "timeZoneInferred": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe prospect’s current inferred IANA timezone, if available.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "title": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe title of the prospect.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "touchedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the prospect was last touched.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "trashedAt": {
            "description": "\n\nThe date a prospect was soft deleted.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "twitterUrl": {
            "description": "\n\nThe prospect’s Twitter URL.",
            "maxLength": 1000,
            "type": "string",
            "x-internal": false
          },
          "twitterUsername": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe prospect’s Twitter username.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the prospect was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "voipPhones": {
            "description": "\n\nA list of voip phone numbers associated with the prospect.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "websiteUrl1": {
            "description": "\n\nThe URL of the prospect’s website.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "websiteUrl2": {
            "description": "\n\nThe value of the prospect’s second website URL field.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "websiteUrl3": {
            "description": "\n\nThe value of the prospect’s third website URL field.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "workPhones": {
            "description": "\n\nA list of work phone numbers associated with the prospect.",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "prospectRelationships": {
        "properties": {
          "account": {
            "description": "The prospect's associated account. You can use attributes id, customId, name, named and updatedAt to filter prospects by account (e.g. filter[account][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "account",
            "x-internal": false
          },
          "activeSequenceStates": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe non-finished sequence states where this prospect is the primary recipient. This includes states of \"active\", \"paused\", \"failed\", \"bounced\", \"pending\" and \"disabled.\" You can use attributes id and state to filter prospects by activeSequenceStates (e.g. filter[activeSequenceStates][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["sequenceState"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceState"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceState"
            },
            "type": "array",
            "x-internal": false
          },
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe calls associated with the prospect. Relationship calls cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creater of the prospect. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "emailAddresses": {
            "description": "The prospect's email addresses. Relationship emailAddresses cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["emailAddress"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["emailAddress"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "emailAddress"
            },
            "type": "array",
            "x-internal": false
          },
          "favorites": {
            "description": "The prospect's favorites. Relationship favorites cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["favorite"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["favorite"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "favorite"
            },
            "type": "array",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe mailings associated with the prospect. Relationship mailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "opportunities": {
            "description": "The opportunities associated with the prospect. Requires the Opportunities SKU to be enabled in order to have access. Please contact support@outreach.io for more assistance. You can use only the attribute id to filter prospects by opportunities (e.g. filter[opportunities][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["opportunity"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["opportunity"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "opportunity"
            },
            "type": "array",
            "x-internal": false
          },
          "opportunityProspectRoles": {
            "description": "The roles that associate the prospect with opportunities. Relationship opportunityProspectRoles cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["opportunityProspectRole"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["opportunityProspectRole"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "opportunityProspectRole"
            },
            "type": "array",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the prospect. You can use only the attribute id to filter prospects by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "persona": {
            "description": "The persona of the prospect, if it has one. You can use only the attribute id to filter prospects by persona (e.g. filter[persona][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["persona"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["persona"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "persona",
            "x-internal": false
          },
          "phoneNumbers": {
            "description": "The prospect's phone numbers Relationship phoneNumbers cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["phoneNumber"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["phoneNumber"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "phoneNumber"
            },
            "type": "array",
            "x-internal": false
          },
          "sequenceStates": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe sequence states where this prospect is the primary recipient. You can use attributes id and state to filter prospects by sequenceStates (e.g. filter[sequenceStates][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceState"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceState"
            },
            "type": "array",
            "x-internal": false
          },
          "stage": {
            "description": "The stage the prospect is in. You can use attributes id and name to filter prospects by stage (e.g. filter[stage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe tasks associated with the prospect. Relationship tasks cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the prospect. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "prospectResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/prospect"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/prospectRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "recipient": {
        "description": "Record for a recipient for some communication, such as email",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the team was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "emailHash": {
            "description": "\n\nHash of email for recipient.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "recipientType": {
            "description": "\n\nThe type of action for the communcation to the recipient. Must be one of 'bcc', 'cc', or 'to'.",
            "maxLength": 3,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the team was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "value": {
            "description": "\n\nThe recipient contact information (i.e. email address)",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "recipientRelationships": {
        "type": "object"
      },
      "recipientResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/recipient"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/recipientRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "recordActorAssignmentRelationships": {
        "properties": {
          "actor": {
            "description": "",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "record": {
            "description": "",
            "oneOf": [
              {
                "description": "A descriptor of a named company used to categorize prospects within an account-based sales approach.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["account"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["account"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "account"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "referralPredictionRelationships": {
        "properties": {
          "prospect": {
            "description": "The prospect this prediction belongs to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequenceState": {
            "description": "The sequence state this prediction belongs to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "returnDatePredictionRelationships": {
        "properties": {
          "prospect": {
            "description": "The Prospect this prediction belongs to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequenceState": {
            "description": "The sequence state this prediction belongs to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "role": {
        "description": "Where you fall within your organization's structure.",
        "properties": {
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the role (e.g. \"Vice-President\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "roleRelationships": {
        "properties": {
          "parentRole": {
            "description": "Roles are heirarchical. This is the parent of the current role. You can use only the attribute id to filter roles by parentRole (e.g. filter[parentRole][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["role"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["role"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "role",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "roleResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/role"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/roleRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "ruleset": {
        "description": "A reusable set of behaviors to be applied to Sequences",
        "properties": {
          "applyCompletedStageIn": {
            "description": "\n\nThe amount of time in seconds after the sequence has completed before the \"completedStage\" will be applied to the Prospect.",
            "type": "integer",
            "x-internal": false
          },
          "autoResumeOotoProspects": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA boolean value whether out-of-the-office Prospects will be automatically resumed. See \"autoResumeOotoProspectsIn\" and \"autoResumeOotoProspectsExpiresIn\" for more information.",
            "type": "boolean",
            "x-internal": false
          },
          "autoResumeOotoProspectsExpiresIn": {
            "description": "\n\nThe maximum amount of time in seconds to wait before opted-out Prospect will be resumed.",
            "type": "integer",
            "x-internal": false
          },
          "autoResumeOotoProspectsIn": {
            "description": "\n\nThe default amount of time in seconds to wait before opted-out Prospects will be resumed.",
            "type": "integer",
            "x-internal": false
          },
          "callOptOutAction": {
            "description": "\n\nDetermines if prospect can be added to sequences if they are opted out of calling.",
            "maxLength": 4,
            "type": "string",
            "x-internal": false
          },
          "clicksNeededBeforeCallTaskCreated": {
            "description": "\n\nThe number of email clicks needed before a call task will be automatically created. This feature will be disabled unless a value is set.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the ruleset was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "emailOptOutAction": {
            "description": "\n\nDetermines if prospect can be added to sequences if they are opted out of emails.",
            "maxLength": 4,
            "type": "string",
            "x-internal": false
          },
          "includeUnsubscribeLinks": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA boolean value whether to include unsubscribe links within emails.",
            "type": "boolean",
            "x-internal": false
          },
          "meetingBookedAction": {
            "description": "\n\nDetermines if a prospect is marked as finished when a meeting is booked.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "minimumProspectTouchedInterval": {
            "description": "\n\nThe minimum number of seconds that must elapse between when a Prospect was last contacted and when they may be added to a sequnce. This feature will be disabled unless a value is set.",
            "type": "integer",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the ruleset.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "ootoAutoExtractionEnabled": {
            "description": "\n\nA boolean value determining whether to use out of the office return date auto extraction.",
            "type": "boolean",
            "x-internal": false
          },
          "opensNeededBeforeCallTaskCreated": {
            "description": "\n\nThe number of email opens needed before a call task will be automatically created. This feature will be disabled unless a value is set.",
            "type": "integer",
            "x-internal": false
          },
          "permitDuplicateProspects": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA value determining whether a Prospect may be added to this Sequence multiple times or not. Permitted values include \"allow\", \"disallow\" (the default) and \"only_if_inactive\", which indicates that Prospects may be re-added to this sequence if their existing SequenceState is inactive.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "sequenceExclusivity": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA value determining whether Prospects may be added to multiple different Sequences. Permitted values include \"all_sequences\", \"exclusive_sequences\" and \"none\" (the default). If the value is \"all_sequences\", then Prospects may only be added if they are not active in any other Sequence; likewise, a Prospect active in a Sequence with \"all_sequences\" exclusivity cannot be added to any other Sequence. If the value is \"exclusive_sequences\", then Prospects may only be added if they are not active in any other Sequence with \"exclusive_sequences\" exclusivity; likewise, a Prospect active in a Sequence with \"exclusive_sequences\" exclusivity cannot be added to any other Sequence with \"exclusive_sequences\" exclusivity. If the value is \"none\", then no additional restrictions will be applied.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "smsOptOutAction": {
            "description": "\n\nDetermines if prospect can be added to sequences if they are opted out of SMS.",
            "maxLength": 4,
            "type": "string",
            "x-internal": false
          },
          "smsReceivedAction": {
            "description": "\n\nDetermines if a prospect is marked as finished when a text message is received",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stepOverridesEnabled": {
            "description": "\n\nA boolean value determining whether to allow users to customize step templates when adding to sequence.",
            "type": "boolean",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the ruleset was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "rulesetRelationships": {
        "properties": {
          "bouncedStage": {
            "description": "The stage to assign to the prospect when a mailing in this sequence bounces. You can use only the attribute id to filter rulesets by bouncedStage (e.g. filter[bouncedStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "callTaskPriority": {
            "description": "The task priority to use when creating call tasks based on mail opens. You can use only the attribute id to filter rulesets by callTaskPriorityFromOpens (e.g. filter[callTaskPriorityFromOpens][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "taskPriority",
            "x-internal": false
          },
          "callTaskPriorityFromClicks": {
            "description": "The task priority to use when creating call tasks based on mail clicks. You can use only the attribute id to filter rulesets by callTaskPriorityFromClicks (e.g. filter[callTaskPriorityFromClicks][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "taskPriority",
            "x-internal": false
          },
          "callTaskPriorityFromOpens": {
            "description": "The task priority to use when creating call tasks based on mail opens. You can use only the attribute id to filter rulesets by callTaskPriorityFromOpens (e.g. filter[callTaskPriorityFromOpens][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "taskPriority",
            "x-internal": false
          },
          "completedStage": {
            "description": "The stage to assign to the prospect when this sequence completes. You can use only the attribute id to filter rulesets by completedStage (e.g. filter[completedStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "deliveredStage": {
            "description": "The stage to assign to the prospect when a mailing in this sequence is delivered. You can use only the attribute id to filter rulesets by deliveredStage (e.g. filter[deliveredStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "finishedStage": {
            "description": "The stage to assign to the prospect when this sequence finishes. You can use only the attribute id to filter rulesets by finishedStage (e.g. filter[finishedStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "optedOutStage": {
            "description": "The stage to assign to the prospect when they opt out of this sequence. You can use only the attribute id to filter rulesets by optedOutStage (e.g. filter[optedOutStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the ruleset. You can use only the attribute id to filter rulesets by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "repliedStage": {
            "description": "The stage to assign to the prospect when a mailing in this sequence is replied to. You can use only the attribute id to filter rulesets by repliedStage (e.g. filter[repliedStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          },
          "sequences": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe sequences associated with this ruleset. You can use only the attribute id to filter rulesets by sequences (e.g. filter[sequences][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequence"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequence"
            },
            "type": "array",
            "x-internal": false
          },
          "startedStage": {
            "description": "The stage to assign to the prospect when this sequence starts. You can use only the attribute id to filter rulesets by startedStage (e.g. filter[startedStage][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["stage"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "stage",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "rulesetResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ruleset"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/rulesetRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "scheduleRelationships": {
        "properties": {
          "owner": {
            "description": "The owner of the schedule.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequence": {
        "description": "Leverage emailing within Sequences to engage each individual persona more effectively, and queue up the right actions at the right time.",
        "properties": {
          "automationPercentage": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe percentage of \"auto_email\" sequence steps in this sequence.",
            "format": "float",
            "type": "number",
            "x-internal": false
          },
          "bounceCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of bounced mailings during this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of clicked mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "deliverCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of delivered mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "description": {
            "description": "\n\nA custom description for the sequence.",
            "maxLength": 1024,
            "type": "string",
            "x-internal": false
          },
          "durationInDays": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total number of days it takes to get through this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "enabled": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value determining whether the sequence is enabled or not.",
            "type": "boolean",
            "x-internal": false
          },
          "enabledAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence was enabled, or null if currently disabled.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "failureCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of failed mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "finishOnReply": {
            "description": "\n\nDeprecated. This boolean value exists only to maintain backward compatibility and primaryReplyAction should be used instead. True if primaryReplyAction is \"finish\", false otherwise.",
            "type": "boolean",
            "x-internal": false
          },
          "lastUsedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence was last used.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "locked": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value determining whether the sequence is locked or not.",
            "type": "boolean",
            "x-internal": false
          },
          "lockedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence was locked, or null if currently unlocked.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "maxActivations": {
            "description": "\n\nThe maximum number of prospects that can be associated with the sequence. Only applies if the sequence type is \"date\".",
            "type": "integer",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name or the sequence.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "negativeReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of negative reply mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "neutralReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of neutral reply mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "numContactedProspects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of prospects who have been either called or emailed.",
            "type": "integer",
            "x-internal": false
          },
          "numRepliedProspects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of prospects who have been marked as replied.",
            "type": "integer",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of opened mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "optOutCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opted out mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "positiveReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of positive reply mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "primaryReplyAction": {
            "description": "\n\nThe action to take when the primary prospect replies. Must be one of \"finish\", \"continue\", or \"pause\".",
            "maxLength": 4,
            "type": "string",
            "x-internal": false
          },
          "primaryReplyPauseDuration": {
            "description": "\n\nThe duration in seconds to pause for (before automatically finishing) after a reply from the primary prospect if the primaryReplyAction is \"pause\".",
            "type": "integer",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of replied mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of scheduled mailings from this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleIntervalType": {
            "description": "\n\nThe schedule interval type must be either \"calendar\" or \"schedule\"",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "secondaryReplyAction": {
            "description": "\n\nThe action to take when someone other than the primary prospect replies. Must be one of \"finish\", \"continue\", or \"pause\".",
            "maxLength": 4,
            "type": "string",
            "x-internal": false
          },
          "secondaryReplyPauseDuration": {
            "description": "\n\nThe duration in seconds to pause for (before automatically finishing) after a reply from anyone other than the primary prospect if the secondaryReplyAction is \"pause\".",
            "type": "integer",
            "x-internal": false
          },
          "sequenceStepCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total number of sequence steps in this sequence.",
            "type": "integer",
            "x-internal": false
          },
          "sequenceType": {
            "description": "\n\nThe sequence type must be either \"date\" or \"interval\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "shareType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe sequence share type must be either \"private\", \"read_only\" or \"shared\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tag values associated with the sequence (e.g. [\"Tier 1\", \"Inbound Leads\"])",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "throttleCapacity": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe maximum number of associated sequence states per user that can be active at a one time.",
            "type": "integer",
            "x-internal": false
          },
          "throttleMaxAddsPerDay": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe maximum number of associated sequence states per user that can be added to the sequence each day.",
            "type": "integer",
            "x-internal": false
          },
          "throttlePaused": {
            "description": "\n\nA boolean value determining whether the throttling of sequence states is paused or not.",
            "type": "boolean",
            "x-internal": false
          },
          "throttlePausedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the sequence state throttling was paused, or null if not currently paused.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "transactional": {
            "description": "\n\nA boolean value determining whether prospect opt out preferences are respected. Intended only for non-marketing sequences.",
            "type": "boolean",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceRelationships": {
        "properties": {
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated calls. You can use only the attribute id to filter sequences by calls (e.g. filter[calls][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "contentCategoryMemberships": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe content categories (collections) of the sequence. You can use only the attribute id to filter sequences by contentCategoryMemberships (e.g. filter[contentCategoryMemberships][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "contentCategoryMembership"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creater of the sequence. You can use only the attribute id to filter sequences by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated mailings. Relationship mailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the sequence. You can use attributes id, email, firstName and lastName to filter sequences by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "ruleset": {
            "description": "The associated ruleset. You can use only the attribute id to filter sequences by ruleset (e.g. filter[ruleset][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["ruleset"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["ruleset"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "ruleset",
            "x-internal": false
          },
          "sequenceStates": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence states. You can use only the attribute id to filter sequences by sequenceStates (e.g. filter[sequenceStates][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceState"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceState"
            },
            "type": "array",
            "x-internal": false
          },
          "sequenceSteps": {
            "description": "The associated sequence steps. You can use only the attribute id to filter sequences by sequenceSteps (e.g. filter[sequenceSteps][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["sequenceStep"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceStep"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceStep"
            },
            "type": "array",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated tasks. You can use only the attribute id to filter sequences by tasks (e.g. filter[tasks][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the sequence. You can use only the attribute id to filter sequences by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequenceResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/sequence"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/sequenceRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceState": {
        "description": "A descriptor of a currently sequenced prospect, which includes relationships to its sequence, prospect and user.",
        "properties": {
          "activeAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the sequence state was last active.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "bounceCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of bounced mailings during this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "callCompletedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence state last had a call completed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of clicked mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence state was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "deliverCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of delivered mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "errorReason": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe reason for the most recent error.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "failureCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of failed mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "negativeReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of negative reply mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "neutralReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of neutral reply mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of opened mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "optOutCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opted out mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "pauseReason": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe reason for the most recent pause.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "positiveReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of positive reply mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "repliedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence state last had a mailing reply.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of replied mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of scheduled mailings from this sequence state.",
            "type": "integer",
            "x-internal": false
          },
          "state": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe current state of the sequence state.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stateChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence state’s state last changed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence state was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceStateRecipientRelationships": {
        "properties": {
          "prospect": {
            "description": "The prospect that is associated with this recipient.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequenceState": {
            "description": "The sequence state that is associated with this recipient.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequenceStateRelationships": {
        "properties": {
          "account": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe account associated with the prospect the sequence state is targeting. You can use only the attribute id to filter sequenceStates by account (e.g. filter[account][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "account",
            "x-internal": false
          },
          "activeStepMailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nAny undelivered mailings associated with the current sequence step. Relationship activeStepMailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "activeStepTasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nAny incomplete tasks associated with the current sequence step. Relationship activeStepTasks cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe calls associated with the sequence state. You can use only the attribute id to filter sequenceStates by calls (e.g. filter[calls][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the sequence state. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "mailbox": {
            "description": "The mailbox to use for mailing steps. You can use attributes id and email to filter sequenceStates by mailbox (e.g. filter[mailbox][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe mailings associated with the sequence state. Relationship mailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "opportunity": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated opportunity. You can use only the attribute id to filter sequenceStates by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "prospect": {
            "description": "The primary prospect this sequence state is targeting. You can use attributes id and emails to filter sequenceStates by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequence": {
            "description": "The sequence this prospect is engaged in. You can use any filterable attribute of sequence.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "sequenceStep": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe current sequence step the prospect is in. You can use any filterable attribute of sequenceStep.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceStep",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe tasks associated with the sequence state. You can use attributes id and dueAt to filter sequenceStates by tasks (e.g. filter[tasks][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequenceStateResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/sequenceState"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/sequenceStateRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceStep": {
        "description": "A descriptor of a single step within an automated sequence.",
        "properties": {
          "bounceCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of bounced mailings during this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of clicked mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence step was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "date": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date this step will activate; only applicable to date-based sequences.",
            "format": "date",
            "type": "string",
            "x-internal": false
          },
          "deliverCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of delivered mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "displayName": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA human-readable display name that captures the step’s type and order.",
            "type": "string",
            "x-internal": false
          },
          "failureCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of failed mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "interval": {
            "description": "\n\nThe interval (in seconds) until this step will activate; only applicable to interval-based sequences.",
            "type": "integer",
            "x-internal": false
          },
          "negativeReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of negative reply mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "neutralReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of neutral reply mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opened mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "optOutCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opted out mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe step’s display order within its sequence.",
            "type": "integer",
            "x-internal": false
          },
          "positiveReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of positive reply mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of replied mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of scheduled mailings from this sequence step.",
            "type": "integer",
            "x-internal": false
          },
          "stepType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe step’s type; must be \"auto_email\", \"manual_email\", \"call\" or \"task\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "taskAutoskipDelay": {
            "description": "\n\nThe optional interval (in seconds) from when tasks created by this sequence step are overdue until they are automatically skipped.",
            "type": "integer",
            "x-internal": false
          },
          "taskNote": {
            "description": "\n\nAn optional note to associate with created tasks.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the sequence step was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceStepOverrideRelationships": {
        "type": "object"
      },
      "sequenceStepRelationships": {
        "properties": {
          "callPurpose": {
            "description": "The default call purpose associated with the sequence step. You can use only the attribute id to filter sequenceSteps by callPurpose (e.g. filter[callPurpose][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["callPurpose"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["callPurpose"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "callPurpose",
            "x-internal": false
          },
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe calls associated with the sequence step. You can use only the attribute id to filter sequenceSteps by calls (e.g. filter[calls][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the sequence step. You can use only the attribute id to filter sequenceSteps by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe mailings associated with the sequence step. Relationship mailings cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "sequence": {
            "description": "The associated sequence. You can use attributes id, enabledAt and name to filter sequenceSteps by sequence (e.g. filter[sequence][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "sequenceTemplates": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe sequence templates in use by this sequence step. You can use any filterable attribute of sequenceTemplates.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["sequenceTemplate"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceTemplate"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceTemplate"
            },
            "type": "array",
            "x-internal": false
          },
          "taskPriority": {
            "description": "The associated task priority. You can use only the attribute id to filter sequenceSteps by taskPriority (e.g. filter[taskPriority][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "taskPriority",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe tasks associated with the sequence step. You can use only the attribute id to filter sequenceSteps by tasks (e.g. filter[tasks][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the sequence step. You can use only the attribute id to filter sequenceSteps by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequenceStepResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/sequenceStep"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/sequenceStepRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceTemplate": {
        "description": "An object used to track which templates are in use by which sequence steps.",
        "properties": {
          "bounceCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of bounced mailings during this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of clicked mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the sequence template was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "deliverCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of delivered mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "enabled": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nBoolean indicating if the sequence template is currently enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "enabledAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nDatetime for when the sequence template was enabled.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "failureCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of failed mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "isReply": {
            "description": "\n\nBoolean indicating if the sequence template should be a reply email or a new thread.",
            "type": "boolean",
            "x-internal": false
          },
          "negativeReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of negative reply mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "neutralReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of neutral reply mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opened mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "optOutCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opted out mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "positiveReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of positive reply mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of replied mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of scheduled mailings from this sequence template.",
            "type": "integer",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the sequence template was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "sequenceTemplateRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nUser that created the sequence template. You can use only the attribute id to filter sequenceTemplates by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "sequenceStep": {
            "description": "The sequence step that uses the sequence template. You can use any filterable attribute of sequenceStep.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceStep",
            "x-internal": false
          },
          "template": {
            "description": "The template used for this sequence template. You can use only the attribute id to filter sequenceTemplates by template (e.g. filter[template][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "template",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nUser that last updated the sequence template. You can use only the attribute id to filter sequenceTemplates by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "sequenceTemplateResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/sequenceTemplate"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/sequenceTemplateRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "smartViewNotificationRelationships": {
        "properties": {
          "owner": {
            "description": "The owner of the notificiation.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "smartViewRelationships": {
        "properties": {
          "owner": {
            "description": "The owner of the smart view.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "snippet": {
        "description": "A piece of an email to be reused in multiple messages.",
        "properties": {
          "bodyHtml": {
            "description": "\n\nThe HTML of the snippet.",
            "maxLength": 16777215,
            "type": "string",
            "x-internal": false
          },
          "bodyText": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe text of the snippet.",
            "maxLength": 16777215,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the snippet was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the snippet.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "shareType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe permissions for sharing the snippet; must be \"private\" or \"shared.\"",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tags associated with the snippet (e.g. [\"Useful\", \"Prospecting\"]).",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the snippet was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "snippetRelationships": {
        "properties": {
          "contentCategoryMemberships": {
            "description": "The content categories (collections) of the snippet. You can use only the attribute id to filter snippets by contentCategoryMemberships (e.g. filter[contentCategoryMemberships][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "contentCategoryMembership"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the snippet. You can use only the attribute id to filter snippets by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the snippet. You can use only the attribute id to filter snippets by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe updater of the snippet. You can use only the attribute id to filter snippets by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "snippetResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/snippet"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/snippetRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "stage": {
        "description": "A descriptor of the point in the process, used for categorizing Prospects.",
        "properties": {
          "color": {
            "description": "\n\nThe color the stage label will be highlighted in the interface, specified as a hexidecimal value (e.g. \"#5951ff\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the stage was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the stage (e.g. \"Qualified Lead\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "order": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe stage's display order within the collection.",
            "type": "integer",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the stage was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "stageRelationships": {
        "properties": {
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the stage. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "prospects": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe prospects associated to the stage. You can use only the attribute id to filter stages by prospects (e.g. filter[prospects][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["prospect"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "prospect"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the stage. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "stageResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/stage"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/stageRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "surveyQuestionOptionRelationships": {
        "type": "object"
      },
      "surveyQuestionRelationships": {
        "type": "object"
      },
      "surveyRelationships": {
        "type": "object"
      },
      "surveyUserResponseRelationships": {
        "properties": {
          "user": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe user who responded.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "tagRelationships": {
        "type": "object"
      },
      "task": {
        "description": "An item that requires action to complete.",
        "properties": {
          "action": {
            "description": "\n\nThe action type of the task. Can be 'action_item', 'call', 'email', or 'in_person'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "autoskipAt": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe optional date and time when the task will automatically be skipped. Tasks with an empty autoskip_at will never be autoskipped.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "compiledSequenceTemplateHtml": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe compiled template HTML of incomplete SMS or LinkedIn tasks associated with a sequence.",
            "type": "string",
            "x-internal": false
          },
          "completed": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA boolean value whether the task has been completed.",
            "type": "boolean",
            "x-internal": false
          },
          "completedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the task was completed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the task was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "dueAt": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the task is due.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "note": {
            "description": "\n\nAn optional note for the task.",
            "maxLength": 65535,
            "type": "string",
            "x-internal": false
          },
          "opportunityAssociation": {
            "description": "\n\nThe optional opportunity rule associated with the task. Can be 'recent_created', 'recent_updated', 'noop'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "scheduledAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the pending task is scheduled for.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "state": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe current state of the task. Can be 'pending', 'incomplete', or 'complete'.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "stateChangedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the state last changed.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "taskType": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe type of task. Can be 'follow_up', 'manual', 'no_reply', 'sequence_open', 'sequence_click', 'sequence_step_call', 'sequence_step_email', 'sequence_step_linkedin_interact_with_post', 'sequence_step_linkedin_other', 'sequence_step_linkedin_send_connection_request', 'sequence_step_linkedin_send_message', 'sequence_step_linkedin_view_profile', 'sequence_step_sms', 'sequence_step_task', or 'touch'. Tasks created through the API will automatically be 'manual' tasks.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the task was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "taskPriority": {
        "description": "A descriptor of importance used for categorizing Tasks.",
        "properties": {
          "color": {
            "description": "\n\nThe color the task priority label will be highlighted in the interface, specified as a hexadecimal value (e.g. \"0xFF5951FF\").",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the task priority was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the task priority (e.g. \"High\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the task priority was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "weight": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA relative value used for display order. Task priorities are listed from lowest to highest weight.",
            "type": "integer",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "taskPriorityRelationships": {
        "properties": {
          "sequenceSteps": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence steps. Relationship sequenceSteps cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceStep"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceStep"
            },
            "type": "array",
            "x-internal": false
          },
          "tasks": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated tasks. Relationship tasks cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["task"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "task"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "taskPriorityResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/taskPriority"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/taskPriorityRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "taskRelationships": {
        "properties": {
          "account": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated account. You can use only the attribute id to filter tasks by account (e.g. filter[account][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["account"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "account",
            "x-internal": false
          },
          "call": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated call, if a call task. You can use only the attribute id to filter tasks by call (e.g. filter[call][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["call"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["call"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "call",
            "x-internal": false
          },
          "calls": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated calls, if a call task. You can use only the attribute id to filter tasks by calls (e.g. filter[calls][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["call"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "call"
            },
            "type": "array",
            "x-internal": false
          },
          "completer": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe completer of this task. You can use only the attribute id to filter tasks by completer (e.g. filter[completer][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of this task. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "A descriptor of a single step within an automated sequence.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "sequenceStep"
              },
              {
                "description": "A descriptor of the point in the process, used for categorizing Prospects.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "stage"
              },
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["stage", "user", "sequenceStep"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "mailing": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated mailing, if a mailing task. You can use only the attribute id to filter tasks by mailing (e.g. filter[mailing][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailing"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailing"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailing",
            "x-internal": false
          },
          "mailings": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated mailings, if a mailing task. You can use only the attribute id to filter tasks by mailings (e.g. filter[mailings][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailing"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailing"
            },
            "type": "array",
            "x-internal": false
          },
          "opportunity": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated opportunity. You can use only the attribute id to filter tasks by opportunity (e.g. filter[opportunity][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["opportunity"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "opportunity",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of this task. You can use attributes id, email and firstName to filter tasks by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "prospect": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated prospect. You can use attributes id, byPersonaId, byStageId, createdAt, firstName, tags, title and updatedAt to filter tasks by prospect (e.g. filter[prospect][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["prospect"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "prospect",
            "x-internal": false
          },
          "sequence": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence. You can use attributes id and tags to filter tasks by sequence (e.g. filter[sequence][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequence"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequence",
            "x-internal": false
          },
          "sequenceSequenceSteps": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe sequence steps of the associated sequence. You can use only the attribute id to filter tasks by sequenceSequenceSteps (e.g. filter[sequenceSequenceSteps][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["sequenceStep"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceStep"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceStep"
            },
            "type": "array",
            "x-internal": false
          },
          "sequenceState": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence state. You can use only the attribute id to filter tasks by sequenceState (e.g. filter[sequenceState][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceState"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceState",
            "x-internal": false
          },
          "sequenceStep": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence step. You can use attributes id and stepType to filter tasks by sequenceStep (e.g. filter[sequenceStep][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceStep"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceStep",
            "x-internal": false
          },
          "sequenceTemplate": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated sequence template. You can use only the attribute id to filter tasks by sequenceTemplate (e.g. filter[sequenceTemplate][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["sequenceTemplate"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["sequenceTemplate"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "sequenceTemplate",
            "x-internal": false
          },
          "subject": {
            "description": "The task's subject, either an account or prospect. Relationship subject cannot be used as a filter.",
            "oneOf": [
              {
                "description": "A descriptor of a person.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "prospect"
              },
              {
                "description": "A descriptor of a named company used to categorize prospects within an account-based sales approach.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "account"
              },
              {
                "description": "An opportunity for a sale or pending deal. Requires the Opportunities SKU to be enabled in order to have access. Please contact support for more assistance.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["account", "opportunity", "prospect"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "opportunity"
              }
            ],
            "x-internal": false
          },
          "taskPriority": {
            "description": "The associated task priority. You can use attributes id and name to filter tasks by taskPriority (e.g. filter[taskPriority][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["taskPriority"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "taskPriority",
            "x-internal": false
          },
          "template": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe associated template. You can use only the attribute id to filter tasks by template (e.g. filter[template][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["template"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "template",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "taskResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/task"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/taskRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "taskThemeRelationships": {
        "type": "object"
      },
      "team": {
        "description": "A descriptor of a group of users.",
        "properties": {
          "color": {
            "description": "\n\nThe color used to label and highlight the team.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the team (e.g. \"SDRs\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "scimExternalId": {
            "description": "\n\nThe ID from the SCIM provisioning service used to create the team.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "scimSource": {
            "description": "\n\nThe name of the SCIM provisioning source used to create the team.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the team was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "teamMembershipRelationships": {
        "properties": {
          "team": {
            "description": "The team associated with the team membership.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "team",
            "x-internal": false
          },
          "user": {
            "description": "The user associated with the team membership.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "teamRelationships": {
        "properties": {
          "contentCategories": {
            "description": "The content categories that are assigned to the team. Relationship contentCategories cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["contentCategory"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["contentCategory"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "contentCategory"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the team. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the team. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "users": {
            "description": "The users associated with the team. You can use only the attribute id to filter teams by users (e.g. filter[users][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["user"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["user"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "user"
            },
            "type": "array",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "teamResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/team"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/teamRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "teamSettingsRelationships": {
        "properties": {
          "profile": {
            "description": "The governance profile that is applied to the team.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["profile"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["profile"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "profile",
            "x-internal": false
          },
          "team": {
            "description": "The team the settings apply to.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["team"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "team",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "template": {
        "description": "A reusable template for building emails.",
        "properties": {
          "archived": {
            "description": "\n\nBoolean value indicating if the template has been archived.",
            "type": "boolean",
            "x-internal": false
          },
          "archivedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the template was archived.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "bccRecipients": {
            "description": "\n\nA list of default person and email address pairs to receive this template in the \"bcc\" field (e.g. [Billy Bob `<billy.bob@seattle.city>`])",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "bodyHtml": {
            "description": "\n\nThe body HTML of the template.",
            "maxLength": 16777215,
            "type": "string",
            "x-internal": false
          },
          "bodyText": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe body text of the template.",
            "maxLength": 16777215,
            "type": "string",
            "x-internal": false
          },
          "bounceCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of bounced mailings during this template.",
            "type": "integer",
            "x-internal": false
          },
          "ccRecipients": {
            "description": "\n\nA list of default person and email address pairs to receive this template in the \"cc\" field (e.g. [Billy Bob `<billy.bob@seattle.city>`])",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "clickCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of clicked mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the template was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "deliverCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of delivered mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "failureCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of failed mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "lastUsedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe last time the template was used.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe name of the template.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "negativeReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of negative reply mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "neutralReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of neutral reply mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "openCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of opened mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "optOutCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of opted out mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "positiveReplyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of positive reply mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "replyCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe total count of replied mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "scheduleCount": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe total count of scheduled mailings from this template.",
            "type": "integer",
            "x-internal": false
          },
          "shareType": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe share type must be one of \"read_only,\" \"private,\" or \"shared\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "subject": {
            "description": "\n\nThe subject line for the email to be sent.",
            "type": "string",
            "x-internal": false
          },
          "tags": {
            "description": "\n\nA list of tag values associated with the template (e.g. [\"Sequencing\", \"Quick Response\"]).",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "toRecipients": {
            "description": "\n\nA list of default person and email address pairs to receive this template in the \"to\" field (e.g. [\"Billy Bob <billy.bob@seattle.city>\"])",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-internal": false
          },
          "trackLinks": {
            "description": "\n\nBoolean value indicating if link tracking is on for the template.",
            "type": "boolean",
            "x-internal": false
          },
          "trackOpens": {
            "description": "\n\nBoolean value indicating if open tracking is on for the template.",
            "type": "boolean",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the template was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "templateRelationships": {
        "properties": {
          "contentCategoryMemberships": {
            "description": "The content cateogories with which this template is associated. Relationship contentCategoryMemberships cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["contentCategoryMembership"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "contentCategoryMembership"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the template. You can use only the attribute id to filter templates by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "owner": {
            "description": "The owner of the template. You can use only the attribute id to filter templates by owner (e.g. filter[owner][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "recipients": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nA list of default email addresses to receive this template. You can use only the attribute id to filter templates by recipients (e.g. filter[recipients][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "recipient"
            },
            "type": "array",
            "x-internal": false
          },
          "sequenceTemplates": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe sequence templates using the template for their content. Relationship sequenceTemplates cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["sequenceTemplate"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["sequenceTemplate"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "sequenceTemplate"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the template. You can use only the attribute id to filter templates by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "templateResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/template"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/templateRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "user": {
        "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
        "properties": {
          "accountsViewId": {
            "description": "\n\nThe default smart view to load on the account index view.",
            "type": "integer",
            "x-internal": false
          },
          "activityNotificationsDisabled": {
            "description": "\n\nA boolean value whether the user's activity notifications are disabled.",
            "type": "boolean",
            "x-internal": false
          },
          "bounceWarningEmailEnabled": {
            "description": "\n\nA boolean value whether the user's bounce warning emails are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "bridgePhone": {
            "description": "\n\nThe telephone number of the user's outbound bridge phone.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "bridgePhoneExtension": {
            "description": "\n\nThe extension number of the user's outbound bridge phone.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "callsViewId": {
            "description": "\n\nThe default smart view to load on the calls view.",
            "type": "integer",
            "x-internal": false
          },
          "controlledTabDefault": {
            "description": "\n\nThe user's preferred default tab to open when in task flow.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the user was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "currentSignInAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the user most recently signed in.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "custom1": {
            "description": "\n\nThe value of the user's first custom field.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "custom2": {
            "description": "\n\nThe value of the user's second custom field.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "custom3": {
            "description": "\n\nThe value of the user's third custom field.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "custom4": {
            "description": "\n\nThe value of the user's fourth custom field.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "custom5": {
            "description": "\n\nThe value of the user's fifth custom field.",
            "maxLength": 225,
            "type": "string",
            "x-internal": false
          },
          "dailyDigestEmailEnabled": {
            "description": "\n\nA boolean value whether the user's daily digest emails are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "defaultRulesetId": {
            "description": "\n\nThe id of the default ruleset assigned to the user.",
            "type": "integer",
            "x-internal": false
          },
          "duties": {
            "description": "\n\nA collection of the user's work roles.",
            "type": "object",
            "x-internal": false
          },
          "email": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe email address of the user. Cannot be updated via the API.",
            "format": "email",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "enableVoiceRecordings": {
            "description": "\n\nA boolean value whether the user has voice recordings enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "engagementEmailsEnabled": {
            "description": "\n\nA boolean value whether the user has engagement emails enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "firstName": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe first name of the user.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundBridgePhone": {
            "description": "\n\nThe telephone number of the user's inbound bridge phone.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundBridgePhoneExtension": {
            "description": "\n\nThe extension number of the user's inbound bridge phone.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundCallBehavior": {
            "description": "\n\nThe behavior of inbound calls. Must be either \"inbound_bridge\" or \"inbound_voicemail\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundPhoneType": {
            "description": "\n\nThe user's type of telephone for inbound calls. Must be either \"bridge\", \"voip\" or \"bridge_and_voip\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundVoicemailCustomMessageText": {
            "description": "\n\nThe message for inbound voicemails (e.g. \"Please leave a message and I will get back to you as soon I can\").",
            "maxLength": 1024,
            "type": "string",
            "x-internal": false
          },
          "inboundVoicemailMessageTextVoice": {
            "description": "\n\nThe gender of the voice that reads the voicemail message. Must be either \"man\" or \"woman\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "inboundVoicemailPromptType": {
            "description": "\n\nThe type of inbound voicemail to use. Must be either \"automated\", \"recorded\", or \"off\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "kaiaRecordingsViewId": {
            "description": "\n\nThe default smart view to load on the kaia recordings view.",
            "type": "integer",
            "x-internal": false
          },
          "keepBridgePhoneConnected": {
            "description": "\n\nWhether to keep the user's bridge phone connected in-between outbound calls.",
            "type": "boolean",
            "x-internal": false
          },
          "lastName": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe last name of the user.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "lastSignInAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the user previously signed in.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "locked": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA boolean value whether the user is locked out of the application.",
            "type": "boolean",
            "x-internal": false
          },
          "mailboxErrorEmailEnabled": {
            "description": "\n\nA boolean value whether the user's mailbox error emails are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "meetingEngagementNotificationEnabled": {
            "description": "\n\nA boolean value whether the user's meeting engagement notifications are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "name": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe full name of the user.",
            "type": "string",
            "x-internal": false
          },
          "notificationsEnabled": {
            "description": "\n\nA boolean value whether the user's notifications are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "oceClickToDialEverywhere": {
            "description": "\n\nA boolean value indicating if phone calls will launch a call from Outreach (Salesforce, Github, Gmail, LinkedIn, and Twitter).",
            "type": "boolean",
            "x-internal": false
          },
          "oceGmailToolbar": {
            "description": "\n\nA boolean value indicating whether the Outreach Gmail toolbar is enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "oceGmailTrackingState": {
            "description": "\n\nThe user's current email tracking settings when using Outreach Everywhere with GMail.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "oceSalesforceEmailDecorating": {
            "description": "\n\nA boolean value indicating if emails are enabled in Outreach Everywhere with Salesforce.",
            "type": "boolean",
            "x-internal": false
          },
          "oceSalesforcePhoneDecorating": {
            "description": "\n\nA boolean value indicating if phone calls are enabled in Outreach Everywhere with Salesforce.",
            "type": "boolean",
            "x-internal": false
          },
          "oceUniversalTaskFlow": {
            "description": "\n\nA boolean value indicating whether Outreach Everywhere universal task flow is enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "oceWindowMode": {
            "description": "\n\nA boolean value indicating whether Outreach Everywhere window mode is enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "opportunitiesViewId": {
            "description": "\n\nThe default smart view to load on the opportunity index view.",
            "type": "integer",
            "x-internal": false
          },
          "passwordExpiresAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the current password expires.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "phoneCountryCode": {
            "description": "\n\nThe country code of the user's phone.",
            "maxLength": 2,
            "type": "string",
            "x-internal": false
          },
          "phoneNumber": {
            "description": "\n\nThe telephone number of the user's phone.",
            "type": "string",
            "x-internal": false
          },
          "phoneType": {
            "description": "\n\nThe user's type of telephone for outbound calls. Must be either \"bridge\" or \"voip\".",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "pluginAlertNotificationEnabled": {
            "description": "\n\nA boolean value whether the user's plugin related error notifications are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "preferredVoiceRegion": {
            "description": "\n\nA string that represents Twilio data center used to connect to Twilio.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "prefersLocalPresence": {
            "description": "\n\nA boolean value whether the user prefers that a voice call comes from a local phone number.",
            "type": "boolean",
            "x-internal": false
          },
          "primaryTimezone": {
            "description": "\n\nThe primary preferred timezone to use when scheduling meetings.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "prospectsViewId": {
            "description": "\n\nThe default smart view to load on the prospect index view.",
            "type": "integer",
            "x-internal": false
          },
          "reportsTeamPerfViewId": {
            "description": "\n\nThe default smart view to load on the team performance reports view.",
            "type": "integer",
            "x-internal": false
          },
          "reportsViewId": {
            "description": "\n\nThe default smart view to load on the reports view.",
            "type": "integer",
            "x-internal": false
          },
          "scimExternalId": {
            "description": "\n\nThe ID from the SCIM provisioning service used to create the user.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "scimSource": {
            "description": "\n\nThe name of the SCIM provisioning source used to create the user.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "secondaryTimezone": {
            "description": "\n\nThe secondary preferred timezone to use when scheduling meetings.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "senderNotificationsExcluded": {
            "description": "\n\nA boolean value whether the user's sender notifications are excluded.",
            "type": "boolean",
            "x-internal": false
          },
          "tasksViewId": {
            "description": "\n\nThe default smart view to load on the tasks index view.",
            "type": "integer",
            "x-internal": false
          },
          "teamsViewId": {
            "description": "\n\nThe default smart view to load on the teams index view.",
            "type": "integer",
            "x-internal": false
          },
          "tertiaryTimezone": {
            "description": "\n\nThe tertiary preferred timezone to use when scheduling meetings.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "textingEmailNotifications": {
            "description": "\n\nA boolean value whether to send the user email notifications when a text message is missed.",
            "type": "boolean",
            "x-internal": false
          },
          "title": {
            "description": "\n\nThe user's job title (e.g. \"Staff Accountant\").",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "unknownReplyEmailEnabled": {
            "description": "\n\nA boolean value whether the user's unknown reply emails are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe date and time the user was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "userGuid": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe globally unique ID (GUID) assigned to the user.",
            "type": "string",
            "x-internal": false
          },
          "username": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA reader friendly unique identifier of the user.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "usersViewId": {
            "description": "\n\nThe default smart view to load on the users index view.",
            "type": "integer",
            "x-internal": false
          },
          "voicemailNotificationEnabled": {
            "description": "\n\nA boolean value whether the user's voicemail notifications are enabled.",
            "type": "boolean",
            "x-internal": false
          },
          "weeklyDigestEmailEnabled": {
            "description": "\n\nA boolean value whether the user's weekly digest email are enabled.",
            "type": "boolean",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "userRelationships": {
        "properties": {
          "contentCategories": {
            "description": "The groupings of sequences, snippets and templates that this user has access to. Relationship contentCategories cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["contentCategory"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["contentCategory"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "contentCategory"
            },
            "type": "array",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the user. Relationship creator cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          },
          "mailbox": {
            "description": "The default mailbox associated with the user. Relationship mailbox cannot be used as a filter.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["mailbox"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "mailbox",
            "x-internal": false
          },
          "mailboxes": {
            "description": "All mailboxes associated with the user. Relationship mailboxes cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["mailbox"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["mailbox"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "mailbox"
            },
            "type": "array",
            "x-internal": false
          },
          "profile": {
            "description": "The user's profile in Outreach. You can use only the attribute id to filter users by profile (e.g. filter[profile][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["profile"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["profile"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "profile",
            "x-internal": false
          },
          "recipients": {
            "description": "Recipients that will be included by default in all emails composed by user. Relationship recipients cannot be used as a filter.",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["recipient"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "recipient"
            },
            "type": "array",
            "x-internal": false
          },
          "role": {
            "description": "The role associated with the user. You can use only the attribute id to filter users by role (e.g. filter[role][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["role"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["role"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "role",
            "x-internal": false
          },
          "teams": {
            "description": "The teams the user belongs to. You can use only the attribute id to filter users by teams (e.g. filter[teams][id]=X).",
            "items": {
              "oneOf": [
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "data": {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "type": {
                          "enum": ["team"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "data"
                },
                {
                  "description": "This Relationship object may contain one of following properties.",
                  "properties": {
                    "links": {
                      "properties": {
                        "related": {
                          "enum": ["team"],
                          "type": "string"
                        }
                      }
                    }
                  },
                  "title": "links"
                }
              ],
              "title": "team"
            },
            "type": "array",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the user. Relationship updater cannot be used as a filter.",
            "oneOf": [
              {
                "description": "The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users.",
                "oneOf": [
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "data": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "type": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "data"
                  },
                  {
                    "description": "This Relationship object may contain one of following properties.",
                    "properties": {
                      "links": {
                        "properties": {
                          "related": {
                            "enum": ["user"],
                            "type": "string"
                          }
                        }
                      }
                    },
                    "title": "links"
                  }
                ],
                "title": "user"
              }
            ],
            "x-internal": false
          }
        },
        "type": "object"
      },
      "userResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/user"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/userRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      },
      "voicePluginRelationships": {
        "type": "object"
      },
      "voicemailPromptRelationships": {
        "properties": {
          "user": {
            "description": "",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "webhook": {
        "description": "A configurable notification that submits external JSON-API-formatted HTTP requests whenever resources are modified.",
        "properties": {
          "action": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe action that will trigger this webhook (e.g. \"*\", \"created\", \"updated\", \"destroyed\"). Webhooks will only execute if both the action and resource match.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "active": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nA boolean value indicating whether the webhook is active.",
            "type": "boolean",
            "x-internal": false
          },
          "createdAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the webhook was created.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "resource": {
            "description": "<img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>\n\nThe resource that will trigger this webhook (e.g. \"*\", \"prospect\", \"sequenceState\"). Webhooks will only execute if both the action and resource match.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "secret": {
            "description": "\n\nA private token used to verify the authenticity of incoming webhook payloads.",
            "maxLength": 255,
            "type": "string",
            "x-internal": false
          },
          "updatedAt": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe date and time the webhook was last updated.",
            "format": "date-time",
            "type": "string",
            "x-internal": false
          },
          "url": {
            "description": "\n\nThe URL where the webhook will route its POST HTTP request.",
            "maxLength": 1024,
            "type": "string",
            "x-internal": false
          }
        },
        "type": "object",
        "x-internal": false
      },
      "webhookRelationships": {
        "properties": {
          "authorizer": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe authorizer of the webhook. The webhook will not deliver results if the authorizer does not have permission to read the resource being returned. Relationship authorizer cannot be used as a filter.",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "creator": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe creator of the webhook. You can use only the attribute id to filter webhooks by creator (e.g. filter[creator][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          },
          "updater": {
            "description": "<img src=https://developers.outreach.io/badges/readonly.svg>\n\nThe most recent updater of the webhook. You can use only the attribute id to filter webhooks by updater (e.g. filter[updater][id]=X).",
            "oneOf": [
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "data": {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "type": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "data"
              },
              {
                "description": "This Relationship object may contain one of following properties.",
                "properties": {
                  "links": {
                    "properties": {
                      "related": {
                        "enum": ["user"],
                        "type": "string"
                      }
                    }
                  }
                },
                "title": "links"
              }
            ],
            "title": "user",
            "x-internal": false
          }
        },
        "type": "object"
      },
      "webhookResponse": {
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/webhook"
          },
          "id": {
            "type": "integer"
          },
          "relationships": {
            "$ref": "#/components/schemas/webhookRelationships"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "x-internal": false
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      },
      "s2sAuthToken": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}
