/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export interface paths {
  "/accounts": {
    /** Get a Collection of Accounts */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["accountResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Account */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["account"];
              relationships?: components["schemas"]["accountRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["accountResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/accounts/{id}": {
    /** Get an Account by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["accountResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Account by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update an Account */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["account"];
              id: number;
              relationships?: components["schemas"]["accountRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["account"];
                id: number;
                relationships?: components["schemas"]["accountRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/audits": {
    /** Get a Collection of Audits */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["auditResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/callDispositions": {
    /** Get a Collection of Call Dispositions */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callDispositionResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Call Disposition */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["callDisposition"];
              relationships?: components["schemas"]["callDispositionRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callDispositionResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/callDispositions/{id}": {
    /** Get a Call Disposition by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callDispositionResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Call Disposition by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Call Disposition */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["callDisposition"];
              id: number;
              relationships?: components["schemas"]["callDispositionRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["callDisposition"];
                id: number;
                relationships?: components["schemas"]["callDispositionRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/callPurposes": {
    /** Get a Collection of Call Purposes */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callPurposeResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Call Purpose */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["callPurpose"];
              relationships?: components["schemas"]["callPurposeRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callPurposeResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/callPurposes/{id}": {
    /** Get a Call Purpose by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callPurposeResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Call Purpose by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Call Purpose */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["callPurpose"];
              id: number;
              relationships?: components["schemas"]["callPurposeRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["callPurpose"];
                id: number;
                relationships?: components["schemas"]["callPurposeRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/calls": {
    /** Get a Collection of Calls */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Call */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["call"];
              relationships?: components["schemas"]["callRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/calls/{id}": {
    /** Get a Call by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["callResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Call by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/complianceRequests": {
    /** Get a Collection of Compliance Requests */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["complianceRequestResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Compliance Request */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["complianceRequest"];
              relationships?: components["schemas"]["complianceRequestRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["complianceRequestResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/complianceRequests/{id}": {
    /** Get a Compliance Request by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["complianceRequestResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategories": {
    /** Get a Collection of Content Categories */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Content Category */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["contentCategory"];
              relationships?: components["schemas"]["contentCategoryRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategories/{id}": {
    /** Get a Content Category by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Content Category by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Content Category */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["contentCategory"];
              id: number;
              relationships?: components["schemas"]["contentCategoryRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["contentCategory"];
                id: number;
                relationships?: components["schemas"]["contentCategoryRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategoryMemberships": {
    /** Get a Collection of Content Category Memberships */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryMembershipResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Content Category Membership */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["contentCategoryMembership"];
              relationships?: components["schemas"]["contentCategoryMembershipRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryMembershipResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategoryMemberships/{id}": {
    /** Get a Content Category Membership by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryMembershipResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Content Category Membership by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategoryOwnerships": {
    /** Get a Collection of Content Category Ownerships */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryOwnershipResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Content Category Ownership */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["contentCategoryOwnership"];
              relationships?: components["schemas"]["contentCategoryOwnershipRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["contentCategoryOwnershipResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/contentCategoryOwnerships/{id}": {
    /** Delete an Existing Content Category Ownership by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/customDuties": {
    /** Create a New Custom Duty */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["customDuty"];
              relationships?: components["schemas"]["customDutyRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["customDutyResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/duties": {
    /** Get a Collection of Duties */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["dutyResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/emailAddresses": {
    /** Get a Collection of Email Addresses */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["emailAddressResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Email Address */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["emailAddress"];
              relationships?: components["schemas"]["emailAddressRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["emailAddressResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/emailAddresses/{id}": {
    /** Get an Email Address by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["emailAddressResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Email Address by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update an Email Address */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["emailAddress"];
              id: number;
              relationships?: components["schemas"]["emailAddressRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["emailAddress"];
                id: number;
                relationships?: components["schemas"]["emailAddressRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/events/{id}": {
    /** Get an Event by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["eventResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/favorites": {
    /** Get a Collection of Favorites */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["favoriteResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Favorite */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["favorite"];
              relationships?: components["schemas"]["favoriteRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["favoriteResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/favorites/{id}": {
    /** Get a Favorite by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["favoriteResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Favorite by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailAliases": {
    /** Get a Collection of Mail Aliases */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailAliasResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailAliases/{id}": {
    /** Get a Mail Alias by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailAliasResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes": {
    /** Get a Collection of Mailboxes */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailboxResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Mailbox */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["mailbox"];
              relationships?: components["schemas"]["mailboxRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailboxResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes/{id}": {
    /** Get a Mailbox by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailboxResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Mailbox by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Mailbox */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["mailbox"];
              id: number;
              relationships?: components["schemas"]["mailboxRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["mailbox"];
                id: number;
                relationships?: components["schemas"]["mailboxRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes/{id}/actions/linkEwsMasterAccount": {
    /**
     * Link Ews Master Account
     * @description ### Member Action
     *
     * Link mailbox with EWS master account
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": Record<string, never>;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes/{id}/actions/testSend": {
    /**
     * Test Send
     * @description ### Member Action
     *
     * Test if sending emails works from this mailbox.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailboxResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes/{id}/actions/testSync": {
    /**
     * Test Sync
     * @description ### Member Action
     *
     * Test if syncing emails works from this mailbox.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailboxResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailboxes/{id}/actions/unlinkEwsMasterAccount": {
    /**
     * Unlink Ews Master Account
     * @description ### Member Action
     *
     * Unlink EWS master account from mailbox
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": Record<string, never>;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailings": {
    /** Get a Collection of Mailings */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailingResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Mailing */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["mailing"];
              relationships?: components["schemas"]["mailingRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailingResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/mailings/{id}": {
    /** Get a Mailing by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["mailingResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunities": {
    /** Get a Collection of Opportunities */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Opportunity */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunity"];
              relationships?: components["schemas"]["opportunityRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunities/{id}": {
    /** Get an Opportunity by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Opportunity by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update an Opportunity */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunity"];
              id: number;
              relationships?: components["schemas"]["opportunityRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["opportunity"];
                id: number;
                relationships?: components["schemas"]["opportunityRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunityProspectRoles": {
    /** Get a Collection of Opportunity Prospect Roles */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityProspectRoleResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Opportunity Prospect Role */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunityProspectRole"];
              relationships?: components["schemas"]["opportunityProspectRoleRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityProspectRoleResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunityProspectRoles/{id}": {
    /** Get an Opportunity Prospect Role by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityProspectRoleResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Opportunity Prospect Role by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update an Opportunity Prospect Role */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunityProspectRole"];
              id: number;
              relationships?: components["schemas"]["opportunityProspectRoleRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["opportunityProspectRole"];
                id: number;
                relationships?: components["schemas"]["opportunityProspectRoleRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunityStages": {
    /** Get a Collection of Opportunity Stages */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityStageResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Opportunity Stage */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunityStage"];
              relationships?: components["schemas"]["opportunityStageRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityStageResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/opportunityStages/{id}": {
    /** Get an Opportunity Stage by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["opportunityStageResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Opportunity Stage by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update an Opportunity Stage */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["opportunityStage"];
              id: number;
              relationships?: components["schemas"]["opportunityStageRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["opportunityStage"];
                id: number;
                relationships?: components["schemas"]["opportunityStageRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/personas": {
    /** Get a Collection of Personas */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["personaResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Persona */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["persona"];
              relationships?: components["schemas"]["personaRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["personaResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/personas/{id}": {
    /** Get a Persona by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["personaResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Persona by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Persona */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["persona"];
              id: number;
              relationships?: components["schemas"]["personaRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["persona"];
                id: number;
                relationships?: components["schemas"]["personaRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/phoneNumbers": {
    /** Get a Collection of Phone Numbers */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["phoneNumberResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Phone Number */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["phoneNumber"];
              relationships?: components["schemas"]["phoneNumberRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["phoneNumberResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/phoneNumbers/{id}": {
    /** Get a Phone Number by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["phoneNumberResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Phone Number by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Phone Number */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["phoneNumber"];
              id: number;
              relationships?: components["schemas"]["phoneNumberRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["phoneNumber"];
                id: number;
                relationships?: components["schemas"]["phoneNumberRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/profiles": {
    /** Get a Collection of Profiles */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["profileResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Profile */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["profile"];
              relationships?: components["schemas"]["profileRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["profileResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/profiles/{id}": {
    /** Get a Profile by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["profileResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Profile by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Profile */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["profile"];
              id: number;
              relationships?: components["schemas"]["profileRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["profile"];
                id: number;
                relationships?: components["schemas"]["profileRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/prospects": {
    /** Get a Collection of Prospects */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["prospectResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Prospect */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["prospect"];
              relationships?: components["schemas"]["prospectRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["prospectResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/prospects/{id}": {
    /** Get a Prospect by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["prospectResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Prospect by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Prospect */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["prospect"];
              id: number;
              relationships?: components["schemas"]["prospectRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["prospect"];
                id: number;
                relationships?: components["schemas"]["prospectRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/recipients": {
    /** Get a Collection of Recipients */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["recipientResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Recipient */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["recipient"];
              relationships?: components["schemas"]["recipientRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["recipientResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/recipients/{id}": {
    /** Get a Recipient by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["recipientResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Recipient by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Recipient */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["recipient"];
              id: number;
              relationships?: components["schemas"]["recipientRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["recipient"];
                id: number;
                relationships?: components["schemas"]["recipientRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/roles": {
    /** Get a Collection of Roles */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["roleResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Role */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["role"];
              relationships?: components["schemas"]["roleRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["roleResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/roles/{id}": {
    /** Get a Role by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["roleResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Role by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Role */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["role"];
              id: number;
              relationships?: components["schemas"]["roleRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["role"];
                id: number;
                relationships?: components["schemas"]["roleRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/rulesets": {
    /** Get a Collection of Rulesets */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["rulesetResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Ruleset */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["ruleset"];
              relationships?: components["schemas"]["rulesetRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["rulesetResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/rulesets/{id}": {
    /** Get a Ruleset by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["rulesetResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Ruleset by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Ruleset */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["ruleset"];
              id: number;
              relationships?: components["schemas"]["rulesetRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["ruleset"];
                id: number;
                relationships?: components["schemas"]["rulesetRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceStates": {
    /** Get a Collection of Sequence States */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Sequence State */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequenceState"];
              relationships?: components["schemas"]["sequenceStateRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceStates/{id}": {
    /** Get a Sequence State by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Sequence State by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceStates/{id}/actions/finish": {
    /**
     * Finish
     * @description ### Member Action
     *
     * Finishes an active sequence state.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceStates/{id}/actions/pause": {
    /**
     * Pause
     * @description ### Member Action
     *
     * Pauses an active sequence state.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceStates/{id}/actions/resume": {
    /**
     * Resume
     * @description ### Member Action
     *
     * Resumes a paused sequence state.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceSteps": {
    /** Get a Collection of Sequence Steps */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStepResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Sequence Step */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequenceStep"];
              relationships?: components["schemas"]["sequenceStepRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStepResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceSteps/{id}": {
    /** Get a Sequence Step by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceStepResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Sequence Step */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequenceStep"];
              id: number;
              relationships?: components["schemas"]["sequenceStepRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["sequenceStep"];
                id: number;
                relationships?: components["schemas"]["sequenceStepRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceTemplates": {
    /** Get a Collection of Sequence Templates */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceTemplateResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Sequence Template */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequenceTemplate"];
              relationships?: components["schemas"]["sequenceTemplateRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceTemplateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequenceTemplates/{id}": {
    /** Get a Sequence Template by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceTemplateResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Sequence Template by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Sequence Template */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequenceTemplate"];
              id: number;
              relationships?: components["schemas"]["sequenceTemplateRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["sequenceTemplate"];
                id: number;
                relationships?: components["schemas"]["sequenceTemplateRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequences": {
    /** Get a Collection of Sequences */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Sequence */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequence"];
              relationships?: components["schemas"]["sequenceRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/sequences/{id}": {
    /** Get a Sequence by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["sequenceResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Sequence by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Sequence */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["sequence"];
              id: number;
              relationships?: components["schemas"]["sequenceRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["sequence"];
                id: number;
                relationships?: components["schemas"]["sequenceRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/snippets": {
    /** Get a Collection of Snippets */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["snippetResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Snippet */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["snippet"];
              relationships?: components["schemas"]["snippetRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["snippetResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/snippets/{id}": {
    /** Get a Snippet by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["snippetResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Snippet by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Snippet */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["snippet"];
              id: number;
              relationships?: components["schemas"]["snippetRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["snippet"];
                id: number;
                relationships?: components["schemas"]["snippetRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/stages": {
    /** Get a Collection of Stages */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["stageResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Stage */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["stage"];
              relationships?: components["schemas"]["stageRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["stageResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/stages/{id}": {
    /** Get a Stage by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["stageResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Stage by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Stage */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["stage"];
              id: number;
              relationships?: components["schemas"]["stageRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["stage"];
                id: number;
                relationships?: components["schemas"]["stageRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/taskPriorities": {
    /** Get a Collection of Task Priorities */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskPriorityResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/taskPriorities/{id}": {
    /** Get a Task Priority by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskPriorityResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks": {
    /** Get a Collection of Tasks */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Task */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["task"];
              relationships?: components["schemas"]["taskRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}": {
    /** Get a Task by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Task by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Task */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["task"];
              id: number;
              relationships?: components["schemas"]["taskRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["task"];
                id: number;
                relationships?: components["schemas"]["taskRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/advance": {
    /**
     * Advance
     * @description ### Member Action
     *
     * Advances the sequence state associated with the task to the next step in the sequence. Note that only tasks with task_type of 'sequence_step_call', 'sequence_step_email', 'sequence_step_linkedin_interact_with_post', 'sequence_step_linkedin_other', 'sequence_step_linkedin_send_connection_request', 'sequence_step_linkedin_send_message', 'sequence_step_linkedin_view_profile', 'sequence_step_sms' or 'sequence_step_task' can be advanced.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/deliver": {
    /**
     * Deliver
     * @description ### Member Action
     *
     * Schedules the mailing associated with the task for delivery, if possible.
     */
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/markComplete": {
    /**
     * Mark Complete
     * @description ### Member Action
     *
     * Marks the task as complete.
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description For sequence step tasks, this specifies how to finish the sequence state. Possible values are: 'finish_no_reply' to finish the sequence, 'finish_replied' to set the sequence as replied, and anything else (including leaving it blank) will advance the sequence state. */
            completionAction?: unknown;
            /** @description A note to attach to the associated prospect, if there is one. */
            completionNote?: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/reassignOwner": {
    /**
     * Reassign Owner
     * @description ### Member Action
     *
     * Reassigns the owner of a task
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description The id of the new owner of the task */
            ownerId: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/reschedule": {
    /**
     * Reschedule
     * @description ### Member Action
     *
     * Reschedules a task by setting a new task due time.
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description The new time for the task to be due. */
            dueAt: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/snooze": {
    /**
     * Snooze
     * @description ### Member Action
     *
     * Sets the 'dueAt' value to be a day later than either now or the existing 'dueAt' value, whichever is later.
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description The new time for the task to be due. */
            dueAt?: unknown;
            /** @description Whether to mark the task as urgent or not. */
            markAsUrgent?: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/updateNote": {
    /**
     * Update Note
     * @description ### Member Action
     *
     * Updates note of a task
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description The note to set on the task. */
            note: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/tasks/{id}/actions/updateOpportunityAssociation": {
    /**
     * Update Opportunity Association
     * @description ### Member Action
     *
     * Updates opportunity association of a task
     */
    post: {
      parameters: {
        query?: {
          actionParams?: {
            /** @description The opportunity to associate with the task. */
            opportunityAssociation: unknown;
          };
        };
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["taskResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/teams": {
    /** Get a Collection of Teams */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["teamResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Team */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["team"];
              relationships?: components["schemas"]["teamRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["teamResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/teams/{id}": {
    /** Get a Team by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["teamResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Team by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Team */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["team"];
              id: number;
              relationships?: components["schemas"]["teamRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["team"];
                id: number;
                relationships?: components["schemas"]["teamRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/templates": {
    /** Get a Collection of Templates */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["templateResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Template */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["template"];
              relationships?: components["schemas"]["templateRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["templateResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/templates/{id}": {
    /** Get a Template by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["templateResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Template by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Template */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["template"];
              id: number;
              relationships?: components["schemas"]["templateRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["template"];
                id: number;
                relationships?: components["schemas"]["templateRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/users": {
    /** Get a Collection of Users */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["userResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New User */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["user"];
              relationships?: components["schemas"]["userRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["userResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Get a User by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["userResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a User */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["user"];
              id: number;
              relationships?: components["schemas"]["userRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["user"];
                id: number;
                relationships?: components["schemas"]["userRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/webhooks": {
    /** Get a Collection of Webhooks */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["webhookResponse"][];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Create a New Webhook */
    post: {
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["webhook"];
              relationships?: components["schemas"]["webhookRelationships"];
              type?: string;
            };
          };
        };
      };
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["webhookResponse"];
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
  "/webhooks/{id}": {
    /** Get a Webhook by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: components["schemas"]["webhookResponse"];
            };
          };
        };
        /** @description Not Found */
        404: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Delete an Existing Webhook by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description Deleted */
        204: {
          content: {
            "application/vnd.api+json": unknown;
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
    /** Update a Webhook */
    patch: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody: {
        content: {
          "application/vnd.api+json": {
            data?: {
              attributes?: components["schemas"]["webhook"];
              id: number;
              relationships?: components["schemas"]["webhookRelationships"];
              type: string;
            };
          };
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/vnd.api+json": {
              data?: {
                attributes?: components["schemas"]["webhook"];
                id: number;
                relationships?: components["schemas"]["webhookRelationships"];
                type: string;
              };
            };
          };
        };
        /** @description JSON error message */
        422: {
          content: {
            "application/vnd.api+json": {
              errors?: {
                  detail?: string;
                  id?: string;
                  title?: string;
                }[];
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description A descriptor of a named company used to categorize prospects within an account-based sales approach. */
    account: {
      /**
       * Format: float
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A custom score given to measure the quality of the account.
       */
      buyerIntentScore?: number;
      /**
       * @description
       *
       * A description of the company’s type (e.g. "Public Company").
       */
      companyType?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the account was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * The value of the account’s first custom field.
       */
      custom1?: string;
      /**
       * @description
       *
       * The value of the account’s second custom field.
       */
      custom2?: string;
      /**
       * @description
       *
       * The value of the account’s third custom field.
       */
      custom3?: string;
      /**
       * @description
       *
       * The value of the account’s fourth custom field.
       */
      custom4?: string;
      /**
       * @description
       *
       * The value of the account’s fifth custom field.
       */
      custom5?: string;
      /**
       * @description
       *
       * The value of the account’s sixth custom field.
       */
      custom6?: string;
      /**
       * @description
       *
       * The value of the account’s seventh custom field.
       */
      custom7?: string;
      /**
       * @description
       *
       * The value of the account’s eight custom field.
       */
      custom8?: string;
      /**
       * @description
       *
       * The value of the account’s ninth custom field.
       */
      custom9?: string;
      /**
       * @description
       *
       * The value of the account’s 10th custom field.
       */
      custom10?: string;
      /**
       * @description
       *
       * The value of the account’s 11th custom field.
       */
      custom11?: string;
      /**
       * @description
       *
       * The value of the account’s 12th custom field.
       */
      custom12?: string;
      /**
       * @description
       *
       * The value of the account’s 13th custom field.
       */
      custom13?: string;
      /**
       * @description
       *
       * The value of the account’s 14th custom field.
       */
      custom14?: string;
      /**
       * @description
       *
       * The value of the account’s 15th custom field.
       */
      custom15?: string;
      /**
       * @description
       *
       * The value of the account’s 16th custom field.
       */
      custom16?: string;
      /**
       * @description
       *
       * The value of the account’s 17th custom field.
       */
      custom17?: string;
      /**
       * @description
       *
       * The value of the account’s 18th custom field.
       */
      custom18?: string;
      /**
       * @description
       *
       * The value of the account’s 19th custom field.
       */
      custom19?: string;
      /**
       * @description
       *
       * The value of the account’s 20th custom field.
       */
      custom20?: string;
      /**
       * @description
       *
       * The value of the account’s 21st custom field.
       */
      custom21?: string;
      /**
       * @description
       *
       * The value of the account’s 22nd custom field.
       */
      custom22?: string;
      /**
       * @description
       *
       * The value of the account’s 23rd custom field.
       */
      custom23?: string;
      /**
       * @description
       *
       * The value of the account’s 24th custom field.
       */
      custom24?: string;
      /**
       * @description
       *
       * The value of the account’s 25th custom field.
       */
      custom25?: string;
      /**
       * @description
       *
       * The value of the account’s 26th custom field.
       */
      custom26?: string;
      /**
       * @description
       *
       * The value of the account’s 27th custom field.
       */
      custom27?: string;
      /**
       * @description
       *
       * The value of the account’s 28th custom field.
       */
      custom28?: string;
      /**
       * @description
       *
       * The value of the account’s 29th custom field.
       */
      custom29?: string;
      /**
       * @description
       *
       * The value of the account’s 30th custom field.
       */
      custom30?: string;
      /**
       * @description
       *
       * The value of the account’s 31st custom field.
       */
      custom31?: string;
      /**
       * @description
       *
       * The value of the account’s 32nd custom field.
       */
      custom32?: string;
      /**
       * @description
       *
       * The value of the account’s 33rd custom field.
       */
      custom33?: string;
      /**
       * @description
       *
       * The value of the account’s 34th custom field.
       */
      custom34?: string;
      /**
       * @description
       *
       * The value of the account’s 35th custom field.
       */
      custom35?: string;
      /**
       * @description
       *
       * The value of the account's 36th custom field.
       */
      custom36?: string;
      /**
       * @description
       *
       * The value of the account's 37th custom field.
       */
      custom37?: string;
      /**
       * @description
       *
       * The value of the account's 38th custom field.
       */
      custom38?: string;
      /**
       * @description
       *
       * The value of the account's 39th custom field.
       */
      custom39?: string;
      /**
       * @description
       *
       * The value of the account's 40th custom field.
       */
      custom40?: string;
      /**
       * @description
       *
       * The value of the account's 41st custom field.
       */
      custom41?: string;
      /**
       * @description
       *
       * The value of the account's 42nd custom field.
       */
      custom42?: string;
      /**
       * @description
       *
       * The value of the account's 43rd custom field.
       */
      custom43?: string;
      /**
       * @description
       *
       * The value of the account's 44th custom field.
       */
      custom44?: string;
      /**
       * @description
       *
       * The value of the account's 45th custom field.
       */
      custom45?: string;
      /**
       * @description
       *
       * The value of the account's 46th custom field.
       */
      custom46?: string;
      /**
       * @description
       *
       * The value of the account's 47th custom field.
       */
      custom47?: string;
      /**
       * @description
       *
       * The value of the account's 48th custom field.
       */
      custom48?: string;
      /**
       * @description
       *
       * The value of the account's 49th custom field.
       */
      custom49?: string;
      /**
       * @description
       *
       * The value of the account's 50th custom field.
       */
      custom50?: string;
      /**
       * @description
       *
       * The value of the account's 51st custom field.
       */
      custom51?: string;
      /**
       * @description
       *
       * The value of the account's 52nd custom field.
       */
      custom52?: string;
      /**
       * @description
       *
       * The value of the account's 53rd custom field.
       */
      custom53?: string;
      /**
       * @description
       *
       * The value of the account's 54th custom field.
       */
      custom54?: string;
      /**
       * @description
       *
       * The value of the account's 55th custom field.
       */
      custom55?: string;
      /**
       * @description
       *
       * The value of the account's 56th custom field.
       */
      custom56?: string;
      /**
       * @description
       *
       * The value of the account's 57th custom field.
       */
      custom57?: string;
      /**
       * @description
       *
       * The value of the account's 58th custom field.
       */
      custom58?: string;
      /**
       * @description
       *
       * The value of the account's 59th custom field.
       */
      custom59?: string;
      /**
       * @description
       *
       * The value of the account's 60th custom field.
       */
      custom60?: string;
      /**
       * @description
       *
       * The value of the account's 61st custom field.
       */
      custom61?: string;
      /**
       * @description
       *
       * The value of the account's 62nd custom field.
       */
      custom62?: string;
      /**
       * @description
       *
       * The value of the account's 63rd custom field.
       */
      custom63?: string;
      /**
       * @description
       *
       * The value of the account's 64th custom field.
       */
      custom64?: string;
      /**
       * @description
       *
       * The value of the account's 65th custom field.
       */
      custom65?: string;
      /**
       * @description
       *
       * The value of the account's 66th custom field.
       */
      custom66?: string;
      /**
       * @description
       *
       * The value of the account's 67th custom field.
       */
      custom67?: string;
      /**
       * @description
       *
       * The value of the account's 68th custom field.
       */
      custom68?: string;
      /**
       * @description
       *
       * The value of the account's 69th custom field.
       */
      custom69?: string;
      /**
       * @description
       *
       * The value of the account's 70th custom field.
       */
      custom70?: string;
      /**
       * @description
       *
       * The value of the account's 71st custom field.
       */
      custom71?: string;
      /**
       * @description
       *
       * The value of the account's 72nd custom field.
       */
      custom72?: string;
      /**
       * @description
       *
       * The value of the account's 73rd custom field.
       */
      custom73?: string;
      /**
       * @description
       *
       * The value of the account's 74th custom field.
       */
      custom74?: string;
      /**
       * @description
       *
       * The value of the account's 75th custom field.
       */
      custom75?: string;
      /**
       * @description
       *
       * The value of the account's 76th custom field.
       */
      custom76?: string;
      /**
       * @description
       *
       * The value of the account's 77th custom field.
       */
      custom77?: string;
      /**
       * @description
       *
       * The value of the account's 78th custom field.
       */
      custom78?: string;
      /**
       * @description
       *
       * The value of the account's 79th custom field.
       */
      custom79?: string;
      /**
       * @description
       *
       * The value of the account's 80th custom field.
       */
      custom80?: string;
      /**
       * @description
       *
       * The value of the account's 81st custom field.
       */
      custom81?: string;
      /**
       * @description
       *
       * The value of the account's 82nd custom field.
       */
      custom82?: string;
      /**
       * @description
       *
       * The value of the account's 83rd custom field.
       */
      custom83?: string;
      /**
       * @description
       *
       * The value of the account's 84th custom field.
       */
      custom84?: string;
      /**
       * @description
       *
       * The value of the account's 85th custom field.
       */
      custom85?: string;
      /**
       * @description
       *
       * The value of the account's 86th custom field.
       */
      custom86?: string;
      /**
       * @description
       *
       * The value of the account's 87th custom field.
       */
      custom87?: string;
      /**
       * @description
       *
       * The value of the account's 88th custom field.
       */
      custom88?: string;
      /**
       * @description
       *
       * The value of the account's 89th custom field.
       */
      custom89?: string;
      /**
       * @description
       *
       * The value of the account's 90th custom field.
       */
      custom90?: string;
      /**
       * @description
       *
       * The value of the account's 91st custom field.
       */
      custom91?: string;
      /**
       * @description
       *
       * The value of the account's 92nd custom field.
       */
      custom92?: string;
      /**
       * @description
       *
       * The value of the account's 93rd custom field.
       */
      custom93?: string;
      /**
       * @description
       *
       * The value of the account's 94th custom field.
       */
      custom94?: string;
      /**
       * @description
       *
       * The value of the account's 95th custom field.
       */
      custom95?: string;
      /**
       * @description
       *
       * The value of the account's 96th custom field.
       */
      custom96?: string;
      /**
       * @description
       *
       * The value of the account's 97th custom field.
       */
      custom97?: string;
      /**
       * @description
       *
       * The value of the account's 98th custom field.
       */
      custom98?: string;
      /**
       * @description
       *
       * The value of the account's 99th custom field.
       */
      custom99?: string;
      /**
       * @description
       *
       * The value of the account’s 100th custom field.
       */
      custom100?: string;
      /**
       * @description
       *
       * The value of the account’s 101st custom field.
       */
      custom101?: string;
      /**
       * @description
       *
       * The value of the account’s 102nd custom field.
       */
      custom102?: string;
      /**
       * @description
       *
       * The value of the account’s 103rd custom field.
       */
      custom103?: string;
      /**
       * @description
       *
       * The value of the account’s 104th custom field.
       */
      custom104?: string;
      /**
       * @description
       *
       * The value of the account’s 105th custom field.
       */
      custom105?: string;
      /**
       * @description
       *
       * The value of the account’s 106th custom field.
       */
      custom106?: string;
      /**
       * @description
       *
       * The value of the account’s 107th custom field.
       */
      custom107?: string;
      /**
       * @description
       *
       * The value of the account’s 108th custom field.
       */
      custom108?: string;
      /**
       * @description
       *
       * The value of the account’s 109th custom field.
       */
      custom109?: string;
      /**
       * @description
       *
       * The value of the account’s 110th custom field.
       */
      custom110?: string;
      /**
       * @description
       *
       * The value of the account’s 111th custom field.
       */
      custom111?: string;
      /**
       * @description
       *
       * The value of the account’s 112th custom field.
       */
      custom112?: string;
      /**
       * @description
       *
       * The value of the account’s 113th custom field.
       */
      custom113?: string;
      /**
       * @description
       *
       * The value of the account’s 114th custom field.
       */
      custom114?: string;
      /**
       * @description
       *
       * The value of the account’s 115th custom field.
       */
      custom115?: string;
      /**
       * @description
       *
       * The value of the account’s 116th custom field.
       */
      custom116?: string;
      /**
       * @description
       *
       * The value of the account’s 117th custom field.
       */
      custom117?: string;
      /**
       * @description
       *
       * The value of the account’s 118th custom field.
       */
      custom118?: string;
      /**
       * @description
       *
       * The value of the account’s 119th custom field.
       */
      custom119?: string;
      /**
       * @description
       *
       * The value of the account’s 120th custom field.
       */
      custom120?: string;
      /**
       * @description
       *
       * The value of the account’s 121st custom field.
       */
      custom121?: string;
      /**
       * @description
       *
       * The value of the account’s 122nd custom field.
       */
      custom122?: string;
      /**
       * @description
       *
       * The value of the account’s 123rd custom field.
       */
      custom123?: string;
      /**
       * @description
       *
       * The value of the account’s 124th custom field.
       */
      custom124?: string;
      /**
       * @description
       *
       * The value of the account’s 125th custom field.
       */
      custom125?: string;
      /**
       * @description
       *
       * The value of the account’s 126th custom field.
       */
      custom126?: string;
      /**
       * @description
       *
       * The value of the account’s 127th custom field.
       */
      custom127?: string;
      /**
       * @description
       *
       * The value of the account’s 128th custom field.
       */
      custom128?: string;
      /**
       * @description
       *
       * The value of the account’s 129th custom field.
       */
      custom129?: string;
      /**
       * @description
       *
       * The value of the account’s 130th custom field.
       */
      custom130?: string;
      /**
       * @description
       *
       * The value of the account’s 131st custom field.
       */
      custom131?: string;
      /**
       * @description
       *
       * The value of the account’s 132nd custom field.
       */
      custom132?: string;
      /**
       * @description
       *
       * The value of the account’s 133rd custom field.
       */
      custom133?: string;
      /**
       * @description
       *
       * The value of the account’s 134th custom field.
       */
      custom134?: string;
      /**
       * @description
       *
       * The value of the account’s 135th custom field.
       */
      custom135?: string;
      /**
       * @description
       *
       * The value of the account’s 136th custom field.
       */
      custom136?: string;
      /**
       * @description
       *
       * The value of the account’s 137th custom field.
       */
      custom137?: string;
      /**
       * @description
       *
       * The value of the account’s 138th custom field.
       */
      custom138?: string;
      /**
       * @description
       *
       * The value of the account’s 139th custom field.
       */
      custom139?: string;
      /**
       * @description
       *
       * The value of the account’s 140th custom field.
       */
      custom140?: string;
      /**
       * @description
       *
       * The value of the account’s 141st custom field.
       */
      custom141?: string;
      /**
       * @description
       *
       * The value of the account’s 142nd custom field.
       */
      custom142?: string;
      /**
       * @description
       *
       * The value of the account’s 143rd custom field.
       */
      custom143?: string;
      /**
       * @description
       *
       * The value of the account’s 144th custom field.
       */
      custom144?: string;
      /**
       * @description
       *
       * The value of the account’s 145th custom field.
       */
      custom145?: string;
      /**
       * @description
       *
       * The value of the account’s 146th custom field.
       */
      custom146?: string;
      /**
       * @description
       *
       * The value of the account’s 147th custom field.
       */
      custom147?: string;
      /**
       * @description
       *
       * The value of the account’s 148th custom field.
       */
      custom148?: string;
      /**
       * @description
       *
       * The value of the account’s 149th custom field.
       */
      custom149?: string;
      /**
       * @description
       *
       * The value of the account’s 150th custom field.
       */
      custom150?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A custom ID for the account, often referencing an ID in an external system.
       */
      customId?: string;
      /**
       * @description
       *
       * A custom description of the account.
       */
      description?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The company’s website domain (e.g. "`www.acme.com`").
       */
      domain?: string;
      /**
       * @description
       *
       * The source of the resource’s creation (e.g. "outreach-api").
       */
      externalSource?: string;
      /**
       * @description
       *
       * The number of followers the company has listed on social media.
       */
      followers?: number;
      /**
       * Format: date-time
       * @description
       *
       * The founding date of the company.
       */
      foundedAt?: string;
      /**
       * @description
       *
       * A description of the company’s industry (e.g. "Manufacturing").
       */
      industry?: string;
      /**
       * @description
       *
       * The number of employees listed on the company’s LinkedIn URL.
       */
      linkedInEmployees?: number;
      /**
       * @description
       *
       * The company’s LinkedIn URL.
       */
      linkedInUrl?: string;
      /**
       * @description
       *
       * The company’s primary geographic region (e.g. "Eastern USA").
       */
      locality?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the company (e.g. "Acme Corporation").
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A boolean value determining whether this is a "named" account or not. Only named accounts will show up on the collection index.
       */
      named?: boolean;
      /**
       * @description
       *
       * The natural name of the company (e.g. "Acme").
       */
      naturalName?: string;
      /**
       * @description
       *
       * The number of employees working at the company.
       */
      numberOfEmployees?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The ID of the sharing team associated with this object. Access is currently in beta.
       */
      sharingTeamId?: string;
      /**
       * @description
       *
       * A list of tag values associated with the account (e.g. ["Enterprise", "Tier 1"]).
       */
      tags?: string[];
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the account was last touched.
       */
      touchedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the account was last updated.
       */
      updatedAt?: string;
      /**
       * @description
       *
       * The company’s website URL (e.g. "`https://www.acme.com/contact`").
       */
      websiteUrl?: string;
    };
    accountRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the account. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The owner of the account. You can use only the attribute id to filter accounts by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The account's associated prospects. Relationship prospects cannot be used as a filter.
       */
      prospects?: {
          links?: {
            /** @enum {string} */
            related?: "prospect";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated tasks. Relationship tasks cannot be used as a filter.
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the account. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    accountResponse: {
      attributes?: components["schemas"]["account"];
      id?: number;
      relationships?: components["schemas"]["accountRelationships"];
      type?: string;
    };
    addressRelationships: Record<string, never>;
    attachmentRelationships: Record<string, never>;
    /** @description Events that happen during the day. Things like login, plugin mapping changes, etc. */
    audit: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Name of the event
       */
      eventName?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * When the event happened
       */
      timestamp?: string;
      /**
       * Format: email
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Email of the user who perfomed the action
       */
      userEmail?: string;
    };
    auditRelationships: Record<string, never>;
    auditResponse: {
      attributes?: components["schemas"]["audit"];
      id?: number;
      relationships?: components["schemas"]["auditRelationships"];
      type?: string;
    };
    batchItemRelationships: Record<string, never>;
    batchRelationships: Record<string, never>;
    blockedNumberRelationships: Record<string, never>;
    calendarEventAttendeeRelationships: {
      /** prospect */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /** user */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    calendarEventRelationships: {
      /** @description <img src=https://developers.outreach.io/badges/readonly.svg> */
      accounts?: {
          links?: {
            /** @enum {string} */
            related?: "account";
          };
        }[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The user who booked this event.
       */
      booker?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the event.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * opportunity
       * @description The opportunity associated with the event.
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /** @description <img src=https://developers.outreach.io/badges/readonly.svg> */
      prospects?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "prospect";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "prospect";
          };
        }]>[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The user associated with the calendar.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      users?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "user";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "user";
          };
        }]>[];
    };
    calendarRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the calendar.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the calendar.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The user associated with the calendar.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    calendarUrlRelationships: Record<string, never>;
    /** @description A log of an inbound or outbound call made with a prospect. */
    call: {
      /**
       * Format: date-time
       * @description
       *
       * The date and time the call was answered.
       */
      answeredAt?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date and time the call was completed.
       */
      completedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date and time the call was dialed.
       */
      dialedAt?: string;
      /**
       * @description
       *
       * The call direction from the user’s point of view; must be either "inbound" or "outbound".
       */
      direction?: string;
      /**
       * @description
       *
       * The voice provider of the call. Can be blank.
       */
      externalVendor?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The phone number used to place the call.
       */
      from?: string;
      /**
       * @description
       *
       * A custom note associated with this call.
       */
      note?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The call’s outcome; must be either "Answered" or "Not Answered".
       */
      outcome?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The URL of the call’s audio recording.
       */
      recordingUrl?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date and time the call was returned.
       */
      returnedAt?: string;
      /**
       * @description
       *
       * The action to take on the associated sequence; must be either "Advance", "Finish", "Finish - No Reply", or "Finish - Replied".
       */
      sequenceAction?: string;
      /**
       * @description
       *
       * Indicated whether or not the call is recorded.
       */
      shouldRecordCall?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The call’s current state.
       */
      state?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the call’s state last changed.
       */
      stateChangedAt?: string;
      /**
       * @description
       *
       * A list of tag values associated with the call (e.g. ["Interested", "Meeting Booked"]).
       */
      tags?: string[];
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The phone number that the call was placed to.
       */
      to?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The Outreach voice trace id.
       */
      uid?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call was last updated.
       */
      updatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The type of call placed within the Outreach client; must be either "bridge" or "voip".
       */
      userCallType?: string;
      /**
       * @description
       *
       * The call-id as recoreded by the voice provider. Can be blank.
       */
      vendorCallId?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The URL of the call’s voicemail audio recording.
       */
      voicemailRecordingUrl?: string;
    };
    /** @description A ready-made collection of call dispositions that help categorize your call logs. */
    callDisposition: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call disposition was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The disposition’s name (e.g. "Meeting Scheduled").
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The disposition’s display order within the collection.
       */
      order?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The disposition’s call outcome; must be either "Answered" or "Not Answered".
       */
      outcome?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call disposition was last updated.
       */
      updatedAt?: string;
    };
    callDispositionRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The calls made with this disposition. Relationship calls cannot be used as a filter.
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the call disposition. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    callDispositionResponse: {
      attributes?: components["schemas"]["callDisposition"];
      id?: number;
      relationships?: components["schemas"]["callDispositionRelationships"];
      type?: string;
    };
    /** @description A ready-made collection of call purposes that help categorize your call logs. */
    callPurpose: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call purpose was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The purpose’s name (e.g. "Initial Contact").
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The purpose’s display order within the collection.
       */
      order?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the call purpose was last updated.
       */
      updatedAt?: string;
    };
    callPurposeRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The calls made with this purpose. Relationship calls cannot be used as a filter.
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the call purpose. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    callPurposeResponse: {
      attributes?: components["schemas"]["callPurpose"];
      id?: number;
      relationships?: components["schemas"]["callPurposeRelationships"];
      type?: string;
    };
    callRelationships: {
      /**
       * callDisposition
       * @description The associated call disposition. You can use only the attribute id to filter calls by callDisposition (e.g. filter[callDisposition][id]=X).
       */
      callDisposition?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "callDisposition";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "callDisposition";
        };
      }]>;
      /**
       * callPurpose
       * @description The associated call purpose. You can use only the attribute id to filter calls by callPurpose (e.g. filter[callPurpose][id]=X).
       */
      callPurpose?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "callPurpose";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "callPurpose";
        };
      }]>;
      /**
       * opportunity
       * @description The associated opportunity. You can use only the attribute id to filter calls by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * phoneNumber
       * @description The associated phone number of the prospect. You can use only the attribute id to filter calls by phoneNumber (e.g. filter[phoneNumber][id]=X).
       */
      phoneNumber?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "phoneNumber";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "phoneNumber";
        };
      }]>;
      /**
       * prospect
       * @description The associated prospect. You can use only the attribute id to filter calls by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequence
       * @description The associated sequence. You can use only the attribute id to filter calls by sequence (e.g. filter[sequence][id]=X).
       */
      sequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * sequenceState
       * @description The associated sequence state. You can use only the attribute id to filter calls by sequenceState (e.g. filter[sequenceState][id]=X).
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
      /**
       * sequenceStep
       * @description The associated sequence step. You can use only the attribute id to filter calls by sequenceStep (e.g. filter[sequenceStep][id]=X).
       */
      sequenceStep?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceStep";
        };
      }]>;
      /**
       * task
       * @description The associated task. You can use only the attribute id to filter calls by task (e.g. filter[task][id]=X).
       */
      task?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "task";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "task";
        };
      }]>;
      /**
       * user
       * @description The associated user. You can use only the attribute id to filter calls by user (e.g. filter[user][id]=X).
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    callResponse: {
      attributes?: components["schemas"]["call"];
      id?: number;
      relationships?: components["schemas"]["callRelationships"];
      type?: string;
    };
    /** @description A regulatory request to delete or export an individual's PII. */
    complianceRequest: {
      /**
       * @description
       *
       * The UUID of the batch the compliance request belongs to.
       */
      batchComplianceRequestUuid?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the compliance request was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * The type of record to process, can be 'Prospect' or 'Recipient' for e-mail addresses unassociated with a prospect.
       */
      objectType?: string;
      /**
       * @description
       *
       * A JSON object of personal information required for processing the compliance request.
       */
      pii?: Record<string, never>;
      /**
       * @description
       *
       * The identifier for the record processed, for Prospects this is the Prospect ID, for Recipients this is an e-mail address.
       */
      requestObjectId?: string;
      /**
       * @description
       *
       * The type of compliance request (only 'Delete' is supported at this time).
       */
      requestType?: string;
      /**
       * @description
       *
       * The ID of the Outreach user who submitted the compliance request.
       */
      requesterId?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The current state of the compliance request, can be 'pending', 'running', 'failed', or 'done'. The states on the higher level abstraction, the batch compliance request, do not map 1:1 to these states. The only states that the batch compliance request will report are either 'pending' or 'done'.
       */
      state?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time at which the compliance request was last updated.
       */
      updatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The UUID of the compliance request.
       */
      uuid?: string;
    };
    complianceRequestRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The Outreach user who submitted the compliance request. Relationship requester cannot be used as a filter.
       */
      requester?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    complianceRequestResponse: {
      attributes?: components["schemas"]["complianceRequest"];
      id?: number;
      relationships?: components["schemas"]["complianceRequestRelationships"];
      type?: string;
    };
    /** @description Content can be grouped into content categories to help discoverability. */
    contentCategory: {
      /**
       * @description
       *
       * Can this category be used to group sequences?
       */
      allowSequences?: boolean;
      /**
       * @description
       *
       * Can this category be used to group snippets?
       */
      allowSnippets?: boolean;
      /**
       * @description
       *
       * Can this category be used to group templates?
       */
      allowTemplates?: boolean;
      /**
       * @description
       *
       * Color of the content category to be used as a background
       */
      color?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the content category.
       */
      name?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category was last updated.
       */
      updatedAt?: string;
    };
    /** @description A record that maps content (e.g. a sequence) to a content category. */
    contentCategoryMembership: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category membership was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category membership was last updated.
       */
      updatedAt?: string;
    };
    contentCategoryMembershipRelationships: {
      /** @description The record in the content category. Must be a sequence, snippet, or template. Relationship content cannot be used as a filter. */
      content?: OneOf<[OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "snippet" | "template" | "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "snippet" | "template" | "sequence";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "snippet" | "template" | "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "snippet" | "template" | "sequence";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "snippet" | "template" | "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "snippet" | "template" | "sequence";
        };
      }]>]>;
      /**
       * contentCategory
       * @description The content category the record is part of. You can use only the attribute id to filter contentCategoryMemberships by contentCategory (e.g. filter[contentCategory][id]=X).
       */
      contentCategory?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "contentCategory";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "contentCategory";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the content category membership. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    contentCategoryMembershipResponse: {
      attributes?: components["schemas"]["contentCategoryMembership"];
      id?: number;
      relationships?: components["schemas"]["contentCategoryMembershipRelationships"];
      type?: string;
    };
    /** @description A record that maps content categories to owners. This allows categories to be linked to one or more teams. */
    contentCategoryOwnership: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category ownership was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the content category ownership was last updated.
       */
      updatedAt?: string;
    };
    contentCategoryOwnershipRelationships: {
      /**
       * contentCategory
       * @description The content category the owner is linked to. You can use only the attribute id to filter contentCategoryOwnerships by contentCategory (e.g. filter[contentCategory][id]=X).
       */
      contentCategory?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "contentCategory";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "contentCategory";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the content category ownership. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** @description The record the content category is tied to. Must a team for now. Relationship owner cannot be used as a filter. */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "team";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "team";
        };
      }]>;
    };
    contentCategoryOwnershipResponse: {
      attributes?: components["schemas"]["contentCategoryOwnership"];
      id?: number;
      relationships?: components["schemas"]["contentCategoryOwnershipRelationships"];
      type?: string;
    };
    contentCategoryRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the content category. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    contentCategoryResponse: {
      attributes?: components["schemas"]["contentCategory"];
      id?: number;
      relationships?: components["schemas"]["contentCategoryRelationships"];
      type?: string;
    };
    /** @description A freeform user-specified role or job duty played by a user in their organization. */
    customDuty: {
      /**
       * @description
       *
       * The polymorphic type of the duty (not the Ruby type, the duty type).
       */
      dutyType?: string;
      /**
       * @description
       *
       * The name of the role.
       */
      name?: string;
    };
    customDutyRelationships: Record<string, never>;
    customDutyResponse: {
      attributes?: components["schemas"]["customDuty"];
      id?: number;
      relationships?: components["schemas"]["customDutyRelationships"];
      type?: string;
    };
    customValidationRelationships: {
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the custom validation.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the custom validation.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description An Outreach-suggested role or job duty played by a user in their organization. */
    duty: {
      /**
       * @description
       *
       * The polymorphic type of the duty (not the Ruby type, the duty type).
       */
      dutyType?: string;
      /**
       * @description
       *
       * The string constant used to refer to this duty which can be internationalized on the client.
       */
      symbolicName?: string;
    };
    dutyRelationships: Record<string, never>;
    dutyResponse: {
      attributes?: components["schemas"]["duty"];
      id?: number;
      relationships?: components["schemas"]["dutyRelationships"];
      type?: string;
    };
    /** @description A prospect's email address */
    emailAddress: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the email address was created.
       */
      createdAt?: string;
      /**
       * Format: email
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The raw email address value
       */
      email?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Type of email address (work or personal)
       */
      emailType?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Ordered position in list of emails
       */
      order?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The status of the email
       */
      status?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Time the status was updated
       */
      statusChangedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Time a mailing was unsubscribed using this address
       */
      unsubscribedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email address was last updated.
       */
      updatedAt?: string;
    };
    emailAddressRelationships: {
      /**
       * prospect
       * @description The owning prospect You can use only the attribute id to filter emailAddresses by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
    };
    emailAddressResponse: {
      attributes?: components["schemas"]["emailAddress"];
      id?: number;
      relationships?: components["schemas"]["emailAddressRelationships"];
      type?: string;
    };
    /** @description Application events, capturing details around the initiator, recipient, etc. */
    event: {
      /**
       * @description
       *
       * The event body (for external events only)
       */
      body?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the event was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the event occurred.
       */
      eventAt?: string;
      /**
       * @description
       *
       * The external URL associated with this event (for external events only)
       */
      externalUrl?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The name of the event that took place (e.g. "mailbox_created").
       */
      name?: string;
      /**
       * @description
       *
       * The transmitted data for the event (cannot be updated once an event has been created)
       */
      payload?: Record<string, never>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The city where the request that created the event was made.
       */
      requestCity?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The type of device on which the request that created the event was made.
       */
      requestDevice?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Name of the host from which the request was made.
       */
      requestHost?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value whether the request was proxied. For example, when true the request city refers to the location of the email server and not the prospect.
       */
      requestProxied?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Name of the region from which the request was made.
       */
      requestRegion?: string;
    };
    eventRelationships: {
      /**
       * account
       * @description The account associated with this event. You can use only the attribute id to filter events by account (e.g. filter[account][id]=X).
       */
      account?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
      /**
       * call
       * @description The call associated with this event. You can use only the attribute id to filter events by call (e.g. filter[call][id]=X).
       */
      call?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "call";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "call";
        };
      }]>;
      /**
       * mailing
       * @description The mailing associated with this event. You can use only the attribute id to filter events by mailing (e.g. filter[mailing][id]=X).
       */
      mailing?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailing";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailing";
        };
      }]>;
      /**
       * opportunity
       * @description The opportunity associated with this event. You can use only the attribute id to filter events by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * prospect
       * @description The prospect associated with this event. You can use only the attribute id to filter events by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * task
       * @description The task associated with this event. You can use only the attribute id to filter events by task (e.g. filter[task][id]=X).
       */
      task?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "task";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "task";
        };
      }]>;
      /**
       * user
       * @description The user associated with this event. You can use only the attribute id to filter events by user (e.g. filter[user][id]=X).
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    eventResponse: {
      attributes?: components["schemas"]["event"];
      id?: number;
      relationships?: components["schemas"]["eventRelationships"];
      type?: string;
    };
    experimentRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the experiment.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** @description The user who owns the experiment. */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** @description The "target" sequence, Sequence A, of this experiment. When the experiment is enabled, this sequence will be probabilistically replaced with the "alternate" sequence, Sequence B, based on the percentage attribute. */
      sequenceA?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /** @description The "alternate" sequence of this experiment. */
      sequenceB?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
    };
    exportRelationships: {
      /** @description <img src=https://developers.outreach.io/badges/readonly.svg> */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description A record (Prospect, Account, Sequence, etc.) favorited by a particular user. */
    favorite: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the favorite was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The type of record that was favorited.
       */
      targetType?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the favorite was last updated.
       */
      updatedAt?: string;
    };
    favoriteRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The user who created the favorite. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The user who's favorite this is. You can use only the attribute id to filter favorites by user (e.g. filter[user][id]=X).
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    favoriteResponse: {
      attributes?: components["schemas"]["favorite"];
      id?: number;
      relationships?: components["schemas"]["favoriteRelationships"];
      type?: string;
    };
    featureFlagParticipationRelationships: Record<string, never>;
    featureFlagRelationships: Record<string, never>;
    gmailMessageMetadatumRelationships: {
      mailings?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "mailing";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }]>[];
    };
    importRelationships: {
      /** @description <img src=https://developers.outreach.io/badges/readonly.svg> */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    inboxSettingRelationships: {
      /**
       * user
       * @description The associated user to whom this settings belong.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    jobRoleRelationships: Record<string, never>;
    /** @description Alternative email name for a mailbox. */
    mailAlias: {
      /**
       * @description
       *
       * Can this alias send email.
       */
      canSend?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date the alias was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * The email alias.
       */
      email?: string;
      /**
       * @description
       *
       * Hashed email address of the alias.
       */
      emailHash?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date the alias was last updated.
       */
      updatedAt?: string;
    };
    mailAliasRelationships: {
      /**
       * mailbox
       * @description The parent mailbox for this alias. You can use only the attribute id to filter mailAliases by mailbox (e.g. filter[mailbox][id]=X).
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
    };
    mailAliasResponse: {
      attributes?: components["schemas"]["mailAlias"];
      id?: number;
      relationships?: components["schemas"]["mailAliasRelationships"];
      type?: string;
    };
    /** @description A representation of an email mailbox, used within the application for sending and syncing emails. */
    mailbox: {
      /**
       * @description
       *
       * The auth id associated with the mailbox.
       */
      authId?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the mailbox was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value to indicate if the user has the permission to edit mailbox fields.
       */
      editable?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The email address of the mailbox.
       */
      email?: string;
      /**
       * @description
       *
       * Hashed email address of the mailbox.
       */
      emailHash?: string;
      /**
       * @description
       *
       * The mail service provider. While not a required field, it is strongly recommended to use one of 'exchange_online', 'exchange_server', 'gmail', 'gmail_api', 'google_oauth2', 'intermedia', 'office365_oauth2', 'microsoft_hma_oauth2', 'office_365', 'rackspace'. If no value is provided, send and sync will make assumptions based on the ews, imap, and smtp values provided.
       */
      emailProvider?: string;
      /**
       * @description
       *
       * The default signature, in HTML, to be appended to sent email messages.
       */
      emailSignature?: string;
      /**
       * @description
       *
       * The url of the Exchange Web Service.
       */
      ewsEndpoint?: string;
      /**
       * @description
       *
       * The SSL verify mode, represented as an integer, the EWS connection will used. (verify none=0, verify peer=1, verify client once=4, verify fail if no peer cert=2)
       */
      ewsSslVerifyMode?: number;
      /**
       * @description
       *
       * The version of Exchange. Must be one of 'Exchange2007', 'Exchange2007_SP1', 'Exchange2010', 'Exchange2010_SP1', 'Exchange2010_SP2', 'Exchange2013', 'Exchange2013_SP1'.
       */
      exchangeVersion?: string;
      /**
       * @description
       *
       * The address of the IMAP host, used for syncing (e.g. 'imap.gmail.com').
       */
      imapHost?: string;
      /**
       * @description
       *
       * The port number the IMAP server is using (e.g. '993').
       */
      imapPort?: number;
      /**
       * @description
       *
       * A boolean value whether the IMAP connection will use SSL.
       */
      imapSsl?: boolean;
      /**
       * @description
       *
       * The maximum number of in/out emails per day.
       */
      maxEmailsPerDay?: number;
      /**
       * @description
       *
       * The maximum number of emails the application can send in a day from this mailbox. Recommended value is 500.
       */
      maxMailingsPerDay?: number;
      /**
       * @description
       *
       * The maximum number of emails the application can send within a week from this mailbox. Recommended value is 5000.
       */
      maxMailingsPerWeek?: number;
      /**
       * @description
       *
       * The message displayed on the unsubscribe confirmation page, seen after clicking the unsubscribe link in the email (e.g. "To unsubscribe, click the button below.").
       */
      optOutMessage?: string;
      /**
       * @description
       *
       * The message below the signature, in HTML, when the sequence requires an unsubscribe link (e.g. "If you'd like me to stop sending you emails, please `<a href='%unsubscribe_url%'>click here</a>`").
       */
      optOutSignature?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/writeonly.svg>
       *
       * The password of the mailbox. This attribute can be used to set the password, but is not available for read.
       */
      password?: string;
      /**
       * @description
       *
       * A list (provided as a string, newline-delimited) of email address patterns to be excluded from syncing (e.g. "`*@outreach.io
       * daniel@example.com`").
       */
      prospectEmailExclusions?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The id of the provider associated with this calendar.
       */
      providerId?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Email provider type.
       */
      providerType?: string;
      /**
       * @description
       *
       * A boolean value whether sending is disabled from this mailbox.
       */
      sendDisabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the most recent send error occurred.
       */
      sendErroredAt?: string;
      /**
       * @description
       *
       * The maximum number of times to auto-retry a delivery when it fails.
       */
      sendMaxRetries?: number;
      /**
       * @description
       *
       * The method used for sending email. Must be either 'ews', 'sendgrid', or 'smtp'.
       */
      sendMethod?: string;
      /**
       * @description
       *
       * The amount of time in seconds that the number of sendThreshold emails can be sent. Recommended value is two deliveries per minute (sendPeriod is 60).
       */
      sendPeriod?: number;
      /**
       * @description
       *
       * A boolean value whether the mailbox is required to be recently synced before sending.
       */
      sendRequiresSync?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the most recent successful email send occurred.
       */
      sendSuccessAt?: string;
      /**
       * @description
       *
       * The maximum number of email sends per the sendPeriod amount of time. Recommended value is two deliveries per minute (sendThreshold is 2).
       */
      sendThreshold?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/writeonly.svg>
       *
       * The api key of the SendGrid account used for sending.
       */
      sendgridApiKey?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The endpoint required within the SendGrid account settings to support bounce and spam-report tracking.
       */
      sendgridWebhookUrl?: string;
      /**
       * @description
       *
       * The address of the SMTP host, used for sending (e.g. 'smtp.gmail.com').
       */
      smtpHost?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/writeonly.svg>
       *
       * The password for the SMTP account. This value should be left blank unless a separate SMTP account is being used for sending (i.e. not the mailbox's main username/password).
       */
      smtpPassword?: string;
      /**
       * @description
       *
       * The port number the SMTP server is using (e.g. '587').
       */
      smtpPort?: number;
      /**
       * @description
       *
       * A boolean value whether the SMTP connection will use SSL.
       */
      smtpSsl?: boolean;
      /**
       * @description
       *
       * The username for the SMTP account. This value should be left blank unless a separate SMTP account is being used for sending (i.e. not the mailbox's main username/password).
       */
      smtpUsername?: string;
      /**
       * @description
       *
       * The amount of time in seconds between syncing when the user is actively using the application.
       */
      syncActiveFrequency?: number;
      /**
       * @description
       *
       * A boolean value whether syncing is disabled from this mailbox.
       */
      syncDisabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the most recent sync error occurred.
       */
      syncErroredAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the most recent sync finished.
       */
      syncFinishedAt?: string;
      /**
       * @description
       *
       * The method used for syncing email. Must be either 'ews', 'gmail_api', or 'imap'.
       */
      syncMethod?: string;
      /**
       * @description
       *
       * A boolean value whether the folder for syncing is named 'Outreach' instead of 'Inbox'. Only available for Exchange version 'Exchange2007_SP1'.
       */
      syncOutreachFolder?: boolean;
      /**
       * @description
       *
       * The amount of time in seconds between syncing when the user is not actively using the application.
       */
      syncPassiveFrequency?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the most recent successful email sync occurred.
       */
      syncSuccessAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the mailbox was last updated.
       */
      updatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The id of the user associated with this mailbox.
       */
      userId?: number;
      /**
       * @description
       *
       * The username of the email account. While not a required field, a username is necessary for most email providers outside of OAuth. This value is normally the same as the email address.
       */
      username?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/writeonly.svg>
       *
       * If this is set to true then the record will only save successfully if the mailbox is properly configured to send emails.
       */
      validateSend?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/writeonly.svg>
       *
       * If this is set to true then the record will only save successfully if the mailbox is properly configured to sync emails.
       */
      validateSync?: boolean;
    };
    mailboxContactRelationships: {
      /**
       * mailbox
       * @description The mailbox associated with this contact.
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
    };
    mailboxRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the mailbox. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The email aliases associated with this mailbox Relationship mailAliases cannot be used as a filter.
       */
      mailAliases?: {
          links?: {
            /** @enum {string} */
            related?: "mailAlias";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The mailings sent via this mailbox. Relationship mailings cannot be used as a filter.
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the mailbox. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The user owning this mailbox. You can use only the attribute id to filter mailboxes by user (e.g. filter[user][id]=X).
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    mailboxResponse: {
      attributes?: components["schemas"]["mailbox"];
      id?: number;
      relationships?: components["schemas"]["mailboxRelationships"];
      type?: string;
    };
    /** @description A representation of a platform-related email. */
    mailing: {
      /**
       * @description
       *
       * The mailing's custom email body, represented in HTML. If provided this field will override any associated template.
       */
      bodyHtml?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The plain-text representation of the 'bodyHTML' field.
       */
      bodyText?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email was bounced.
       */
      bouncedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total number of times links within the email were clicked (if the message is tracking links).
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The most recent date and time a link was clicked (if the message is tracking links).
       */
      clickedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the mailing was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email was delivered.
       */
      deliveredAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Technical details explaining the mailing's error.
       */
      errorBacktrace?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A summary explaining the mailing's error.
       */
      errorReason?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date and time of when a follow-up task should be due for this mailing.
       */
      followUpTaskScheduledAt?: string;
      /**
       * @description
       *
       * The type of follow-up task to create. Possible values are 'follow_up' or 'no_reply'.
       */
      followUpTaskType?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The email address the mailing was sent from.
       */
      mailboxAddress?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A description of the type of the emailing (e.g. "sequence", "single", "campaign").
       */
      mailingType?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the email was marked as spam.
       */
      markedAsSpamAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The MIME content Message-ID of the delivered message.
       */
      messageId?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The condition of when to bump this mailing to the top of the user's inbox. Possible values are 'always' or 'no_reply'.
       */
      notifyThreadCondition?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time of when this mailing should be bumped to the top of the user's inbox.
       */
      notifyThreadScheduledAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The status of the bump. Possible values are 'pending', 'sent' or 'skipped'.
       */
      notifyThreadStatus?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total number of times the email was opened (if the message is tracking opens).
       */
      openCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The most recent date and time the email was opened (if the message is tracking opens).
       */
      openedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value whether users can override submission if template variables have not all been replaced.
       */
      overrideSafetySettings?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A list of references for the mailing taken from the email header.
       */
      references?: string[];
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email was replied to.
       */
      repliedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email will rety to send.
       */
      retryAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The number of times the email has been retried to send.
       */
      retryCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The amount of time in seconds between retry attempts.
       */
      retryInterval?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the email is scheduled to send.
       */
      scheduledAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The current state of the mailing. Can be 'bounced', 'delivered', 'delivering', 'drafted', 'failed', 'opened', 'placeholder', 'queued', 'replied', or 'scheduled'.
       */
      state?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the state last changed.
       */
      stateChangedAt?: string;
      /**
       * @description
       *
       * The subject line of the email.
       */
      subject?: string;
      /**
       * @description
       *
       * A boolean value whether the mailing is tracking link clicks.
       */
      trackLinks?: boolean;
      /**
       * @description
       *
       * A boolean value whether the mailing is tracking email opens.
       */
      trackOpens?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the recepient unsubscribed from the mailing's sequence.
       */
      unsubscribedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the mailing was last updated.
       */
      updatedAt?: string;
    };
    mailingRelationships: {
      /**
       * sequence
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The followup sequence associated with this mailing. You can use only the attribute id to filter mailings by followUpSequence (e.g. filter[followUpSequence][id]=X).
       */
      followUpSequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * mailbox
       * @description The mailbox associated with this mailing. You can use only the attribute id to filter mailings by mailbox (e.g. filter[mailbox][id]=X).
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
      /**
       * opportunity
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated opportunity. You can use only the attribute id to filter mailings by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * prospect
       * @description The prospect associated with this mailing. You can use only the attribute id to filter mailings by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /** @description Recipients of the mailing. Relationship recipients cannot be used as a filter. */
      recipients?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "recipient";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "recipient";
          };
        }]>[];
      /**
       * sequence
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence. You can use only the attribute id to filter mailings by sequence (e.g. filter[sequence][id]=X).
       */
      sequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * sequenceState
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence state. You can use only the attribute id to filter mailings by sequenceState (e.g. filter[sequenceState][id]=X).
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
      /**
       * sequenceStep
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence step. You can use only the attribute id to filter mailings by sequenceStep (e.g. filter[sequenceStep][id]=X).
       */
      sequenceStep?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceStep";
        };
      }]>;
      /**
       * task
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The task this mailing will or did complete upon sending. You can use only the attribute id to filter mailings by task (e.g. filter[task][id]=X).
       */
      task?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "task";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "task";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * All tasks associated with this mailing, such as a follow-up task. Relationship tasks cannot be used as a filter.
       */
      tasks?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "task";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }]>[];
      /**
       * template
       * @description The template associated with this mailing. You can use only the attribute id to filter mailings by template (e.g. filter[template][id]=X).
       */
      template?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "template";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "template";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The user associated with this mailing. You can use only the attribute id to filter mailings by user (e.g. filter[user][id]=X).
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    mailingResponse: {
      attributes?: components["schemas"]["mailing"];
      id?: number;
      relationships?: components["schemas"]["mailingRelationships"];
      type?: string;
    };
    meetingFieldRelationships: Record<string, never>;
    meetingRelationships: Record<string, never>;
    meetingTypeRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the meeting type.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The user who owns this meeting type.
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** team */
      team?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "team";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "team";
        };
      }]>;
    };
    modelSchemaVersionRelationships: Record<string, never>;
    noteRelationships: Record<string, never>;
    /** @description An opportunity for a sale or pending deal. Requires the Opportunities SKU to be enabled in order to have access. Please contact support for more assistance. */
    opportunity: {
      /**
       * @description <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The amount the opportunity is worth.
       */
      amount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date the opportunity is expected to close.
       */
      closeDate?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date the opportunity was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * The ISO code of the currency this opportunity is in.
       */
      currencyType?: string;
      /**
       * @description
       *
       * The value of the opportunity's first custom field.
       */
      custom1?: string;
      /**
       * @description
       *
       * The value of the opportunity's second custom field.
       */
      custom2?: string;
      /**
       * @description
       *
       * The value of the opportunity's third custom field.
       */
      custom3?: string;
      /**
       * @description
       *
       * The value of the opportunity's fourth custom field.
       */
      custom4?: string;
      /**
       * @description
       *
       * The value of the opportunity's fifth custom field.
       */
      custom5?: string;
      /**
       * @description
       *
       * The value of the opportunity's sixth custom field.
       */
      custom6?: string;
      /**
       * @description
       *
       * The value of the opportunity's seventh custom field.
       */
      custom7?: string;
      /**
       * @description
       *
       * The value of the opportunity's eighth custom field.
       */
      custom8?: string;
      /**
       * @description
       *
       * The value of the opportunity's ninth custom field.
       */
      custom9?: string;
      /**
       * @description
       *
       * The value of the opportunity's 10th custom field.
       */
      custom10?: string;
      /**
       * @description
       *
       * The value of the opportunity's 11th custom field.
       */
      custom11?: string;
      /**
       * @description
       *
       * The value of the opportunity's 12th custom field.
       */
      custom12?: string;
      /**
       * @description
       *
       * The value of the opportunity's 13th custom field.
       */
      custom13?: string;
      /**
       * @description
       *
       * The value of the opportunity's 14th custom field.
       */
      custom14?: string;
      /**
       * @description
       *
       * The value of the opportunity's 15th custom field.
       */
      custom15?: string;
      /**
       * @description
       *
       * The value of the opportunity's 16th custom field.
       */
      custom16?: string;
      /**
       * @description
       *
       * The value of the opportunity's 17th custom field.
       */
      custom17?: string;
      /**
       * @description
       *
       * The value of the opportunity's 18th custom field.
       */
      custom18?: string;
      /**
       * @description
       *
       * The value of the opportunity's 19th custom field.
       */
      custom19?: string;
      /**
       * @description
       *
       * The value of the opportunity's 20th custom field.
       */
      custom20?: string;
      /**
       * @description
       *
       * The value of the opportunity's 21st custom field.
       */
      custom21?: string;
      /**
       * @description
       *
       * The value of the opportunity's 22nd custom field.
       */
      custom22?: string;
      /**
       * @description
       *
       * The value of the opportunity's 23rd custom field.
       */
      custom23?: string;
      /**
       * @description
       *
       * The value of the opportunity's 24th custom field.
       */
      custom24?: string;
      /**
       * @description
       *
       * The value of the opportunity's 25th custom field.
       */
      custom25?: string;
      /**
       * @description
       *
       * The value of the opportunity's 26th custom field.
       */
      custom26?: string;
      /**
       * @description
       *
       * The value of the opportunity's 27th custom field.
       */
      custom27?: string;
      /**
       * @description
       *
       * The value of the opportunity's 28th custom field.
       */
      custom28?: string;
      /**
       * @description
       *
       * The value of the opportunity's 29th custom field.
       */
      custom29?: string;
      /**
       * @description
       *
       * The value of the opportunity's 30th custom field.
       */
      custom30?: string;
      /**
       * @description
       *
       * The value of the opportunity's 31st custom field.
       */
      custom31?: string;
      /**
       * @description
       *
       * The value of the opportunity's 32nd custom field.
       */
      custom32?: string;
      /**
       * @description
       *
       * The value of the opportunity's 33rd custom field.
       */
      custom33?: string;
      /**
       * @description
       *
       * The value of the opportunity's 34th custom field.
       */
      custom34?: string;
      /**
       * @description
       *
       * The value of the opportunity's 35th custom field.
       */
      custom35?: string;
      /**
       * @description
       *
       * The value of the opportunity's 36th custom field.
       */
      custom36?: string;
      /**
       * @description
       *
       * The value of the opportunity's 37th custom field.
       */
      custom37?: string;
      /**
       * @description
       *
       * The value of the opportunity's 38th custom field.
       */
      custom38?: string;
      /**
       * @description
       *
       * The value of the opportunity's 39th custom field.
       */
      custom39?: string;
      /**
       * @description
       *
       * The value of the opportunity's 40th custom field.
       */
      custom40?: string;
      /**
       * @description
       *
       * The value of the opportunity's 41st custom field.
       */
      custom41?: string;
      /**
       * @description
       *
       * The value of the opportunity's 42nd custom field.
       */
      custom42?: string;
      /**
       * @description
       *
       * The value of the opportunity's 43rd custom field.
       */
      custom43?: string;
      /**
       * @description
       *
       * The value of the opportunity's 44th custom field.
       */
      custom44?: string;
      /**
       * @description
       *
       * The value of the opportunity's 45th custom field.
       */
      custom45?: string;
      /**
       * @description
       *
       * The value of the opportunity's 46th custom field.
       */
      custom46?: string;
      /**
       * @description
       *
       * The value of the opportunity's 47th custom field.
       */
      custom47?: string;
      /**
       * @description
       *
       * The value of the opportunity's 48th custom field.
       */
      custom48?: string;
      /**
       * @description
       *
       * The value of the opportunity's 49th custom field.
       */
      custom49?: string;
      /**
       * @description
       *
       * The value of the opportunity's 50th custom field.
       */
      custom50?: string;
      /**
       * @description
       *
       * The value of the opportunity's 51st custom field.
       */
      custom51?: string;
      /**
       * @description
       *
       * The value of the opportunity's 52nd custom field.
       */
      custom52?: string;
      /**
       * @description
       *
       * The value of the opportunity's 53rd custom field.
       */
      custom53?: string;
      /**
       * @description
       *
       * The value of the opportunity's 54th custom field.
       */
      custom54?: string;
      /**
       * @description
       *
       * The value of the opportunity's 55th custom field.
       */
      custom55?: string;
      /**
       * @description
       *
       * The value of the opportunity's 56th custom field.
       */
      custom56?: string;
      /**
       * @description
       *
       * The value of the opportunity's 57th custom field.
       */
      custom57?: string;
      /**
       * @description
       *
       * The value of the opportunity's 58th custom field.
       */
      custom58?: string;
      /**
       * @description
       *
       * The value of the opportunity's 59th custom field.
       */
      custom59?: string;
      /**
       * @description
       *
       * The value of the opportunity's 60th custom field.
       */
      custom60?: string;
      /**
       * @description
       *
       * The value of the opportunity's 61st custom field.
       */
      custom61?: string;
      /**
       * @description
       *
       * The value of the opportunity's 62nd custom field.
       */
      custom62?: string;
      /**
       * @description
       *
       * The value of the opportunity's 63rd custom field.
       */
      custom63?: string;
      /**
       * @description
       *
       * The value of the opportunity's 64th custom field.
       */
      custom64?: string;
      /**
       * @description
       *
       * The value of the opportunity's 65th custom field.
       */
      custom65?: string;
      /**
       * @description
       *
       * The value of the opportunity's 66th custom field.
       */
      custom66?: string;
      /**
       * @description
       *
       * The value of the opportunity's 67th custom field.
       */
      custom67?: string;
      /**
       * @description
       *
       * The value of the opportunity's 68th custom field.
       */
      custom68?: string;
      /**
       * @description
       *
       * The value of the opportunity's 69th custom field.
       */
      custom69?: string;
      /**
       * @description
       *
       * The value of the opportunity's 70th custom field.
       */
      custom70?: string;
      /**
       * @description
       *
       * The value of the opportunity's 71st custom field.
       */
      custom71?: string;
      /**
       * @description
       *
       * The value of the opportunity's 72nd custom field.
       */
      custom72?: string;
      /**
       * @description
       *
       * The value of the opportunity's 73rd custom field.
       */
      custom73?: string;
      /**
       * @description
       *
       * The value of the opportunity's 74th custom field.
       */
      custom74?: string;
      /**
       * @description
       *
       * The value of the opportunity's 75th custom field.
       */
      custom75?: string;
      /**
       * @description
       *
       * The value of the opportunity's 76th custom field.
       */
      custom76?: string;
      /**
       * @description
       *
       * The value of the opportunity's 77th custom field.
       */
      custom77?: string;
      /**
       * @description
       *
       * The value of the opportunity's 78th custom field.
       */
      custom78?: string;
      /**
       * @description
       *
       * The value of the opportunity's 79th custom field.
       */
      custom79?: string;
      /**
       * @description
       *
       * The value of the opportunity's 80th custom field.
       */
      custom80?: string;
      /**
       * @description
       *
       * The value of the opportunity's 81st custom field.
       */
      custom81?: string;
      /**
       * @description
       *
       * The value of the opportunity's 82nd custom field.
       */
      custom82?: string;
      /**
       * @description
       *
       * The value of the opportunity's 83rd custom field.
       */
      custom83?: string;
      /**
       * @description
       *
       * The value of the opportunity's 84th custom field.
       */
      custom84?: string;
      /**
       * @description
       *
       * The value of the opportunity's 85th custom field.
       */
      custom85?: string;
      /**
       * @description
       *
       * The value of the opportunity's 86th custom field.
       */
      custom86?: string;
      /**
       * @description
       *
       * The value of the opportunity's 87th custom field.
       */
      custom87?: string;
      /**
       * @description
       *
       * The value of the opportunity's 88th custom field.
       */
      custom88?: string;
      /**
       * @description
       *
       * The value of the opportunity's 89th custom field.
       */
      custom89?: string;
      /**
       * @description
       *
       * The value of the opportunity's 90th custom field.
       */
      custom90?: string;
      /**
       * @description
       *
       * The value of the opportunity's 91st custom field.
       */
      custom91?: string;
      /**
       * @description
       *
       * The value of the opportunity's 92nd custom field.
       */
      custom92?: string;
      /**
       * @description
       *
       * The value of the opportunity's 93rd custom field.
       */
      custom93?: string;
      /**
       * @description
       *
       * The value of the opportunity's 94th custom field.
       */
      custom94?: string;
      /**
       * @description
       *
       * The value of the opportunity's 95th custom field.
       */
      custom95?: string;
      /**
       * @description
       *
       * The value of the opportunity's 96th custom field.
       */
      custom96?: string;
      /**
       * @description
       *
       * The value of the opportunity's 97th custom field.
       */
      custom97?: string;
      /**
       * @description
       *
       * The value of the opportunity's 98th custom field.
       */
      custom98?: string;
      /**
       * @description
       *
       * The value of the opportunity's 99th custom field.
       */
      custom99?: string;
      /**
       * @description
       *
       * The value of the opportunity's 100th custom field.
       */
      custom100?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 101st custom field.
       */
      custom101?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 102nd custom field.
       */
      custom102?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 103rd custom field.
       */
      custom103?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 104th custom field.
       */
      custom104?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 105th custom field.
       */
      custom105?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 106th custom field.
       */
      custom106?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 107th custom field.
       */
      custom107?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 108th custom field.
       */
      custom108?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 109th custom field.
       */
      custom109?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 110th custom field.
       */
      custom110?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 111th custom field.
       */
      custom111?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 112th custom field.
       */
      custom112?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 113th custom field.
       */
      custom113?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 114th custom field.
       */
      custom114?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 115th custom field.
       */
      custom115?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 116th custom field.
       */
      custom116?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 117th custom field.
       */
      custom117?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 118th custom field.
       */
      custom118?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 119th custom field.
       */
      custom119?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 120th custom field.
       */
      custom120?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 121st custom field.
       */
      custom121?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 122nd custom field.
       */
      custom122?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 123rd custom field.
       */
      custom123?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 124th custom field.
       */
      custom124?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 125th custom field.
       */
      custom125?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 126th custom field.
       */
      custom126?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 127th custom field.
       */
      custom127?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 128th custom field.
       */
      custom128?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 129th custom field.
       */
      custom129?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 130th custom field.
       */
      custom130?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 131st custom field.
       */
      custom131?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 132nd custom field.
       */
      custom132?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 133rd custom field.
       */
      custom133?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 134th custom field.
       */
      custom134?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 135th custom field.
       */
      custom135?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 136th custom field.
       */
      custom136?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 137th custom field.
       */
      custom137?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 138th custom field.
       */
      custom138?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 139th custom field.
       */
      custom139?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 140th custom field.
       */
      custom140?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 141st custom field.
       */
      custom141?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 142nd custom field.
       */
      custom142?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 143rd custom field.
       */
      custom143?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 144th custom field.
       */
      custom144?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 145th custom field.
       */
      custom145?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 146th custom field.
       */
      custom146?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 147th custom field.
       */
      custom147?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 148th custom field.
       */
      custom148?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 149th custom field.
       */
      custom149?: string;
      /**
       * @description
       *
       * The value of the opportunity’s 150th custom field.
       */
      custom150?: string;
      /**
       * @description
       *
       * A description of the opportunity.
       */
      description?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date the opportunity was created in the external system.
       */
      externalCreatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * A link to the SamePlan MAP (Mutual Action Plan) associated with this opportunity.
       */
      mapLink?: string;
      /**
       * @description
       *
       * The next event in the timeline that has yet to be completed for the SamePlan MAP (Mutual Action Plan).
       */
      mapNextSteps?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The status of the SamePlan MAP (Mutual Action Plan) based on how well both parties are trending towards the plan.
       */
      mapStatus?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the opportunity.
       */
      name?: string;
      /**
       * @description
       *
       * The next step to take for the opportunity.
       */
      nextStep?: string;
      /**
       * @description
       *
       * The type of opportunity.
       */
      opportunityType?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The chances of the opportunity succeeding, represented as a percentage.
       */
      probability?: number;
      /**
       * @description
       *
       * The ID of the sales rep that prospects the opportunity.
       */
      prospectingRepId?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The ID of the sharing team associated with this object. Access is currently in beta.
       */
      sharingTeamId?: string;
      /**
       * @description
       *
       * Tags associated with the opportunity.
       */
      tags?: string[];
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The last time an event happened for an opportunity.
       */
      touchedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date the opportunity was last updated.
       */
      updatedAt?: string;
    };
    opportunityHealthFactorRelationships: {
      /**
       * opportunity
       * @description The opportunity the health factor apply to.
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
    };
    /** @description A prospect's role and association with an opportunity */
    opportunityProspectRole: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the role was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * A boolean value indicating if this prospect is the primary contact within an opportunity.
       */
      primary?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A string value representing the role.
       */
      role?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the role was last updated.
       */
      updatedAt?: string;
    };
    opportunityProspectRoleRelationships: {
      /**
       * opportunity
       * @description The opportunity associated with the role. You can use only the attribute id to filter opportunityProspectRoles by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * prospect
       * @description The prospect associated with the role. You can use only the attribute id to filter opportunityProspectRoles by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
    };
    opportunityProspectRoleResponse: {
      attributes?: components["schemas"]["opportunityProspectRole"];
      id?: number;
      relationships?: components["schemas"]["opportunityProspectRoleRelationships"];
      type?: string;
    };
    opportunityRelationships: {
      /**
       * account
       * @description The account the opportunity is for. You can use attributes id and name to filter opportunities by account (e.g. filter[account][id]=X).
       */
      account?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the opportunity. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * opportunityStage
       * @description The current stage of the opportunity. You can use only the attribute id to filter opportunities by stage (e.g. filter[stage][id]=X).
       */
      opportunityStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunityStage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunityStage";
        };
      }]>;
      /**
       * user
       * @description The user who owns the opportunity. You can use only the attribute id to filter opportunities by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The prospects associated with this opportunity. You can use only the attribute id to filter opportunities by prospects (e.g. filter[prospects][id]=X).
       */
      prospects?: {
          links?: {
            /** @enum {string} */
            related?: "prospect";
          };
        }[];
      /**
       * opportunityStage
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The current stage of the opportunity. You can use only the attribute id to filter opportunities by stage (e.g. filter[stage][id]=X).
       */
      stage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunityStage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunityStage";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The updater of the opportunity. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    opportunityResponse: {
      attributes?: components["schemas"]["opportunity"];
      id?: number;
      relationships?: components["schemas"]["opportunityRelationships"];
      type?: string;
    };
    /** @description The stage an opportunity is in. Requires the Opportunities SKU to be enabled in order to have access. Please contact support for more assistance. */
    opportunityStage: {
      /**
       * @description
       *
       * The color used to label and highlight the opportunity stage.
       */
      color?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the opportunity stage was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Either true or flase, whether or not the opportunity stage represents an open or closed state of an opportunity.
       */
      isClosed?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the opportunity stage.
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The order of the opportunity stage.
       */
      order?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the opportunity stage was last updated.
       */
      updatedAt?: string;
    };
    opportunityStageRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the opportunity. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The opportunities currently associated with the opportunity stage. Relationship opportunities cannot be used as a filter.
       */
      opportunities?: {
          links?: {
            /** @enum {string} */
            related?: "opportunity";
          };
        }[];
    };
    opportunityStageResponse: {
      attributes?: components["schemas"]["opportunityStage"];
      id?: number;
      relationships?: components["schemas"]["opportunityStageRelationships"];
      type?: string;
    };
    orgSettingRelationships: Record<string, never>;
    outboundVoicemailRelationships: {
      /** user */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    outlookAddInEwsItemRelationships: {
      /**
       * mailbox
       * @description The mailbox this originated from
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
    };
    permissionGrantRelationships: Record<string, never>;
    /** @description A descriptor of a person, used for categorizing Prospects. */
    persona: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the persona was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * A description of the persona.
       */
      description?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the persona (e.g. "Sales Rep").
       */
      name?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the persona was last updated.
       */
      updatedAt?: string;
    };
    personaRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The prospects with this persona. Relationship prospects cannot be used as a filter.
       */
      prospects?: {
          links?: {
            /** @enum {string} */
            related?: "prospect";
          };
        }[];
    };
    personaResponse: {
      attributes?: components["schemas"]["persona"];
      id?: number;
      relationships?: components["schemas"]["personaRelationships"];
      type?: string;
    };
    phoneIdentityRelationships: {
      /**
       * user
       * @description The owner of this identity.
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description A prospect's phone number */
    phoneNumber: {
      /**
       * @description
       *
       * The country code (e.g. US)
       */
      countryCode?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the phone number was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * Phone number extension (e.g. 123)
       */
      extension?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The phone number (e.g. +18889387356)
       */
      number?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Ordered position in list of numbers
       */
      order?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Type of phone (mobile, work, home, voip, and other)
       */
      phoneType?: string;
      /**
       * @description
       *
       * Unformatted phone number
       */
      rawNumber?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The status of the number
       */
      status?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * Time the status was updated
       */
      statusChangedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the phone number was last updated.
       */
      updatedAt?: string;
    };
    phoneNumberPredictionRelationships: Record<string, never>;
    phoneNumberRelationships: {
      /**
       * prospect
       * @description The owning prospect You can use only the attribute id to filter phoneNumbers by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
    };
    phoneNumberResponse: {
      attributes?: components["schemas"]["phoneNumber"];
      id?: number;
      relationships?: components["schemas"]["phoneNumberRelationships"];
      type?: string;
    };
    phoneRelationships: {
      /**
       * user
       * @description The User this phone belongs to.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    pluginErrorLogPreSignedUrlRelationships: Record<string, never>;
    pluginMappingRelationships: Record<string, never>;
    pluginRelationships: Record<string, never>;
    /** @description Controls what you can see and do within Outreach */
    profile: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Flag that indicates whether the profile provides admin access.
       */
      isAdmin?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the profile (e.g. "Admin").
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The special id flag assigned to the profile (i.e. admin or default)
       */
      specialId?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was last updated.
       */
      updatedAt?: string;
    };
    profileRelationships: Record<string, never>;
    profileResponse: {
      attributes?: components["schemas"]["profile"];
      id?: number;
      relationships?: components["schemas"]["profileRelationships"];
      type?: string;
    };
    /** @description A descriptor of a person. */
    prospect: {
      /**
       * Format: date-time
       * @description
       *
       * The date and time the prospect was added to any system.
       */
      addedAt?: string;
      /**
       * @description
       *
       * The prospect’s city (e.g. "Seattle").
       */
      addressCity?: string;
      /**
       * @description
       *
       * The prospect’s country (e.g. "USA").
       */
      addressCountry?: string;
      /**
       * @description
       *
       * The prospect’s state (e.g. "Washington").
       */
      addressState?: string;
      /**
       * @description
       *
       * The prospect’s street address (e.g. "1441 N 34th St").
       */
      addressStreet?: string;
      /**
       * @description
       *
       * The prospect’s second street address, if applicable.
       */
      addressStreet2?: string;
      /**
       * @description
       *
       * The prospect’s postal code (e.g. "98103").
       */
      addressZip?: string;
      /**
       * @description
       *
       * The prospect’s AngelList URL.
       */
      angelListUrl?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date and time the prospect is available to contact again.
       */
      availableAt?: string;
      /**
       * @description
       *
       * Whether the prospect is opted out of calling, or opted out in general if granular opt-out is not enabled.
       */
      callOptedOut?: boolean;
      /**
       * @description
       *
       * A string ("opted_in", "opted_out", "null") that represents whether a prospect has opted into or out of calls.
       */
      callsOptStatus?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the prospect opted in/out of calls.
       */
      callsOptedAt?: string;
      /**
       * @description
       *
       * The name of the campaign the prospect is associated with.
       */
      campaignName?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The number of clicks the prospect has made since the last touch point.
       */
      clickCount?: number;
      /**
       * @description
       *
       * The name of the company the prospect works at. If associated with an account, this is the name of the account. (e.g. Acme International).
       */
      company?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The last 12 months of email contact history with the prospect, with the current month being the last element. The format for each month is '[inboundCount, outboundCount]'. Note: Retrieving this field will slow down the queries. Unless this field is required, it is best to filter it out. See Specify Sparse Fieldsets for examples
       */
      contactHistogram?: unknown[];
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the prospect was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * The value of the prospect’s first custom field.
       */
      custom1?: string;
      /**
       * @description
       *
       * The value of the prospect’s second custom field.
       */
      custom2?: string;
      /**
       * @description
       *
       * The value of the prospect’s third custom field.
       */
      custom3?: string;
      /**
       * @description
       *
       * The value of the prospect’s fourth custom field.
       */
      custom4?: string;
      /**
       * @description
       *
       * The value of the prospect’s fifth custom field.
       */
      custom5?: string;
      /**
       * @description
       *
       * The value of the prospect’s sixth custom field.
       */
      custom6?: string;
      /**
       * @description
       *
       * The value of the prospect’s seventh custom field.
       */
      custom7?: string;
      /**
       * @description
       *
       * The value of the prospect’s eight custom field.
       */
      custom8?: string;
      /**
       * @description
       *
       * The value of the prospect’s ninth custom field.
       */
      custom9?: string;
      /**
       * @description
       *
       * The value of the prospect’s 10th custom field.
       */
      custom10?: string;
      /**
       * @description
       *
       * The value of the prospect’s 11th custom field.
       */
      custom11?: string;
      /**
       * @description
       *
       * The value of the prospect’s 12th custom field.
       */
      custom12?: string;
      /**
       * @description
       *
       * The value of the prospect’s 13th custom field.
       */
      custom13?: string;
      /**
       * @description
       *
       * The value of the prospect’s 14th custom field.
       */
      custom14?: string;
      /**
       * @description
       *
       * The value of the prospect’s 15th custom field.
       */
      custom15?: string;
      /**
       * @description
       *
       * The value of the prospect’s 16th custom field.
       */
      custom16?: string;
      /**
       * @description
       *
       * The value of the prospect’s 17th custom field.
       */
      custom17?: string;
      /**
       * @description
       *
       * The value of the prospect’s 18th custom field.
       */
      custom18?: string;
      /**
       * @description
       *
       * The value of the prospect’s 19th custom field.
       */
      custom19?: string;
      /**
       * @description
       *
       * The value of the prospect’s 20th custom field.
       */
      custom20?: string;
      /**
       * @description
       *
       * The value of the prospect’s 21st custom field.
       */
      custom21?: string;
      /**
       * @description
       *
       * The value of the prospect’s 22nd custom field.
       */
      custom22?: string;
      /**
       * @description
       *
       * The value of the prospect’s 23rd custom field.
       */
      custom23?: string;
      /**
       * @description
       *
       * The value of the prospect’s 24th custom field.
       */
      custom24?: string;
      /**
       * @description
       *
       * The value of the prospect’s 25th custom field.
       */
      custom25?: string;
      /**
       * @description
       *
       * The value of the prospect’s 26th custom field.
       */
      custom26?: string;
      /**
       * @description
       *
       * The value of the prospect’s 27th custom field.
       */
      custom27?: string;
      /**
       * @description
       *
       * The value of the prospect’s 28th custom field.
       */
      custom28?: string;
      /**
       * @description
       *
       * The value of the prospect’s 29th custom field.
       */
      custom29?: string;
      /**
       * @description
       *
       * The value of the prospect’s 30th custom field.
       */
      custom30?: string;
      /**
       * @description
       *
       * The value of the prospect’s 31st custom field.
       */
      custom31?: string;
      /**
       * @description
       *
       * The value of the prospect’s 32nd custom field.
       */
      custom32?: string;
      /**
       * @description
       *
       * The value of the prospect’s 33rd custom field.
       */
      custom33?: string;
      /**
       * @description
       *
       * The value of the prospect’s 34th custom field.
       */
      custom34?: string;
      /**
       * @description
       *
       * The value of the prospect’s 35th custom field.
       */
      custom35?: string;
      /**
       * @description
       *
       * The value of the prospect’s 36th custom field.
       */
      custom36?: string;
      /**
       * @description
       *
       * The value of the prospect’s 37th custom field.
       */
      custom37?: string;
      /**
       * @description
       *
       * The value of the prospect’s 38th custom field.
       */
      custom38?: string;
      /**
       * @description
       *
       * The value of the prospect’s 39th custom field.
       */
      custom39?: string;
      /**
       * @description
       *
       * The value of the prospect’s 40th custom field.
       */
      custom40?: string;
      /**
       * @description
       *
       * The value of the prospect’s 41st custom field.
       */
      custom41?: string;
      /**
       * @description
       *
       * The value of the prospect’s 42nd custom field.
       */
      custom42?: string;
      /**
       * @description
       *
       * The value of the prospect’s 43rd custom field.
       */
      custom43?: string;
      /**
       * @description
       *
       * The value of the prospect’s 44th custom field.
       */
      custom44?: string;
      /**
       * @description
       *
       * The value of the prospect’s 45th custom field.
       */
      custom45?: string;
      /**
       * @description
       *
       * The value of the prospect’s 46th custom field.
       */
      custom46?: string;
      /**
       * @description
       *
       * The value of the prospect’s 47th custom field.
       */
      custom47?: string;
      /**
       * @description
       *
       * The value of the prospect’s 48th custom field.
       */
      custom48?: string;
      /**
       * @description
       *
       * The value of the prospect’s 49th custom field.
       */
      custom49?: string;
      /**
       * @description
       *
       * The value of the prospect’s 50th custom field.
       */
      custom50?: string;
      /**
       * @description
       *
       * The value of the prospect’s 51st custom field.
       */
      custom51?: string;
      /**
       * @description
       *
       * The value of the prospect’s 52nd custom field.
       */
      custom52?: string;
      /**
       * @description
       *
       * The value of the prospect’s 53rd custom field.
       */
      custom53?: string;
      /**
       * @description
       *
       * The value of the prospect’s 54th custom field.
       */
      custom54?: string;
      /**
       * @description
       *
       * The value of the prospect’s 55th custom field.
       */
      custom55?: string;
      /**
       * @description
       *
       * The value of the prospect’s 56th custom field.
       */
      custom56?: string;
      /**
       * @description
       *
       * The value of the prospect’s 57th custom field.
       */
      custom57?: string;
      /**
       * @description
       *
       * The value of the prospect’s 58th custom field.
       */
      custom58?: string;
      /**
       * @description
       *
       * The value of the prospect’s 59th custom field.
       */
      custom59?: string;
      /**
       * @description
       *
       * The value of the prospect’s 60th custom field.
       */
      custom60?: string;
      /**
       * @description
       *
       * The value of the prospect’s 61st custom field.
       */
      custom61?: string;
      /**
       * @description
       *
       * The value of the prospect’s 62nd custom field.
       */
      custom62?: string;
      /**
       * @description
       *
       * The value of the prospect’s 63rd custom field.
       */
      custom63?: string;
      /**
       * @description
       *
       * The value of the prospect’s 64th custom field.
       */
      custom64?: string;
      /**
       * @description
       *
       * The value of the prospect’s 65th custom field.
       */
      custom65?: string;
      /**
       * @description
       *
       * The value of the prospect’s 66th custom field.
       */
      custom66?: string;
      /**
       * @description
       *
       * The value of the prospect’s 67th custom field.
       */
      custom67?: string;
      /**
       * @description
       *
       * The value of the prospect’s 68th custom field.
       */
      custom68?: string;
      /**
       * @description
       *
       * The value of the prospect’s 69th custom field.
       */
      custom69?: string;
      /**
       * @description
       *
       * The value of the prospect’s 70th custom field.
       */
      custom70?: string;
      /**
       * @description
       *
       * The value of the prospect’s 71st custom field.
       */
      custom71?: string;
      /**
       * @description
       *
       * The value of the prospect’s 72nd custom field.
       */
      custom72?: string;
      /**
       * @description
       *
       * The value of the prospect’s 73rd custom field.
       */
      custom73?: string;
      /**
       * @description
       *
       * The value of the prospect’s 74th custom field.
       */
      custom74?: string;
      /**
       * @description
       *
       * The value of the prospect’s 75th custom field.
       */
      custom75?: string;
      /**
       * @description
       *
       * The value of the prospect’s 76th custom field.
       */
      custom76?: string;
      /**
       * @description
       *
       * The value of the prospect’s 77th custom field.
       */
      custom77?: string;
      /**
       * @description
       *
       * The value of the prospect’s 78th custom field.
       */
      custom78?: string;
      /**
       * @description
       *
       * The value of the prospect’s 79th custom field.
       */
      custom79?: string;
      /**
       * @description
       *
       * The value of the prospect’s 80th custom field.
       */
      custom80?: string;
      /**
       * @description
       *
       * The value of the prospect’s 81st custom field.
       */
      custom81?: string;
      /**
       * @description
       *
       * The value of the prospect’s 82nd custom field.
       */
      custom82?: string;
      /**
       * @description
       *
       * The value of the prospect’s 83rd custom field.
       */
      custom83?: string;
      /**
       * @description
       *
       * The value of the prospect’s 84th custom field.
       */
      custom84?: string;
      /**
       * @description
       *
       * The value of the prospect’s 85th custom field.
       */
      custom85?: string;
      /**
       * @description
       *
       * The value of the prospect’s 86th custom field.
       */
      custom86?: string;
      /**
       * @description
       *
       * The value of the prospect’s 87th custom field.
       */
      custom87?: string;
      /**
       * @description
       *
       * The value of the prospect’s 88th custom field.
       */
      custom88?: string;
      /**
       * @description
       *
       * The value of the prospect’s 89th custom field.
       */
      custom89?: string;
      /**
       * @description
       *
       * The value of the prospect’s 90th custom field.
       */
      custom90?: string;
      /**
       * @description
       *
       * The value of the prospect’s 91st custom field.
       */
      custom91?: string;
      /**
       * @description
       *
       * The value of the prospect’s 92nd custom field.
       */
      custom92?: string;
      /**
       * @description
       *
       * The value of the prospect’s 93rd custom field.
       */
      custom93?: string;
      /**
       * @description
       *
       * The value of the prospect’s 94th custom field.
       */
      custom94?: string;
      /**
       * @description
       *
       * The value of the prospect’s 95th custom field.
       */
      custom95?: string;
      /**
       * @description
       *
       * The value of the prospect’s 96th custom field.
       */
      custom96?: string;
      /**
       * @description
       *
       * The value of the prospect’s 97th custom field.
       */
      custom97?: string;
      /**
       * @description
       *
       * The value of the prospect’s 98th custom field.
       */
      custom98?: string;
      /**
       * @description
       *
       * The value of the prospect’s 99th custom field.
       */
      custom99?: string;
      /**
       * @description
       *
       * The value of the prospect’s 100th custom field.
       */
      custom100?: string;
      /**
       * @description
       *
       * The value of the prospect’s 101st custom field.
       */
      custom101?: string;
      /**
       * @description
       *
       * The value of the prospect’s 102nd custom field.
       */
      custom102?: string;
      /**
       * @description
       *
       * The value of the prospect’s 103rd custom field.
       */
      custom103?: string;
      /**
       * @description
       *
       * The value of the prospect’s 104th custom field.
       */
      custom104?: string;
      /**
       * @description
       *
       * The value of the prospect’s 105th custom field.
       */
      custom105?: string;
      /**
       * @description
       *
       * The value of the prospect’s 106th custom field.
       */
      custom106?: string;
      /**
       * @description
       *
       * The value of the prospect’s 107th custom field.
       */
      custom107?: string;
      /**
       * @description
       *
       * The value of the prospect’s 108th custom field.
       */
      custom108?: string;
      /**
       * @description
       *
       * The value of the prospect’s 109th custom field.
       */
      custom109?: string;
      /**
       * @description
       *
       * The value of the prospect’s 110th custom field.
       */
      custom110?: string;
      /**
       * @description
       *
       * The value of the prospect’s 111th custom field.
       */
      custom111?: string;
      /**
       * @description
       *
       * The value of the prospect’s 112th custom field.
       */
      custom112?: string;
      /**
       * @description
       *
       * The value of the prospect’s 113th custom field.
       */
      custom113?: string;
      /**
       * @description
       *
       * The value of the prospect’s 114th custom field.
       */
      custom114?: string;
      /**
       * @description
       *
       * The value of the prospect’s 115th custom field.
       */
      custom115?: string;
      /**
       * @description
       *
       * The value of the prospect’s 116th custom field.
       */
      custom116?: string;
      /**
       * @description
       *
       * The value of the prospect’s 117th custom field.
       */
      custom117?: string;
      /**
       * @description
       *
       * The value of the prospect’s 118th custom field.
       */
      custom118?: string;
      /**
       * @description
       *
       * The value of the prospect’s 119th custom field.
       */
      custom119?: string;
      /**
       * @description
       *
       * The value of the prospect’s 120th custom field.
       */
      custom120?: string;
      /**
       * @description
       *
       * The value of the prospect’s 121st custom field.
       */
      custom121?: string;
      /**
       * @description
       *
       * The value of the prospect’s 122nd custom field.
       */
      custom122?: string;
      /**
       * @description
       *
       * The value of the prospect’s 123rd custom field.
       */
      custom123?: string;
      /**
       * @description
       *
       * The value of the prospect’s 124th custom field.
       */
      custom124?: string;
      /**
       * @description
       *
       * The value of the prospect’s 125th custom field.
       */
      custom125?: string;
      /**
       * @description
       *
       * The value of the prospect’s 126th custom field.
       */
      custom126?: string;
      /**
       * @description
       *
       * The value of the prospect’s 127th custom field.
       */
      custom127?: string;
      /**
       * @description
       *
       * The value of the prospect’s 128th custom field.
       */
      custom128?: string;
      /**
       * @description
       *
       * The value of the prospect’s 129th custom field.
       */
      custom129?: string;
      /**
       * @description
       *
       * The value of the prospect’s 130th custom field.
       */
      custom130?: string;
      /**
       * @description
       *
       * The value of the prospect’s 131st custom field.
       */
      custom131?: string;
      /**
       * @description
       *
       * The value of the prospect’s 132nd custom field.
       */
      custom132?: string;
      /**
       * @description
       *
       * The value of the prospect’s 133rd custom field.
       */
      custom133?: string;
      /**
       * @description
       *
       * The value of the prospect’s 134th custom field.
       */
      custom134?: string;
      /**
       * @description
       *
       * The value of the prospect’s 135th custom field.
       */
      custom135?: string;
      /**
       * @description
       *
       * The value of the prospect’s 136th custom field.
       */
      custom136?: string;
      /**
       * @description
       *
       * The value of the prospect’s 137th custom field.
       */
      custom137?: string;
      /**
       * @description
       *
       * The value of the prospect’s 138th custom field.
       */
      custom138?: string;
      /**
       * @description
       *
       * The value of the prospect’s 139th custom field.
       */
      custom139?: string;
      /**
       * @description
       *
       * The value of the prospect’s 140th custom field.
       */
      custom140?: string;
      /**
       * @description
       *
       * The value of the prospect’s 141st custom field.
       */
      custom141?: string;
      /**
       * @description
       *
       * The value of the prospect’s 142nd custom field.
       */
      custom142?: string;
      /**
       * @description
       *
       * The value of the prospect’s 143rd custom field.
       */
      custom143?: string;
      /**
       * @description
       *
       * The value of the prospect’s 144th custom field.
       */
      custom144?: string;
      /**
       * @description
       *
       * The value of the prospect’s 145th custom field.
       */
      custom145?: string;
      /**
       * @description
       *
       * The value of the prospect’s 146th custom field.
       */
      custom146?: string;
      /**
       * @description
       *
       * The value of the prospect’s 147th custom field.
       */
      custom147?: string;
      /**
       * @description
       *
       * The value of the prospect’s 148th custom field.
       */
      custom148?: string;
      /**
       * @description
       *
       * The value of the prospect’s 149th custom field.
       */
      custom149?: string;
      /**
       * @description
       *
       * The value of the prospect’s 150th custom field.
       */
      custom150?: string;
      /**
       * Format: date
       * @description
       *
       * The date the prospect was born.
       */
      dateOfBirth?: string;
      /**
       * @description
       *
       * The degree(s) the prospect has received.
       */
      degree?: string;
      /**
       * @description
       *
       * Whether the prospect is opted out of email, or opted out in general if granular opt-out is not enabled.
       */
      emailOptedOut?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * A list of email addresses associated with the prospect.
       */
      emails?: string[];
      /**
       * @description
       *
       * A string ("opted_in", "opted_out", "null") that represents whether a prospect has opted into or out of emails.
       */
      emailsOptStatus?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the prospect opted in/out of emails.
       */
      emailsOptedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the prospect last engaged.
       */
      engagedAt?: string;
      /**
       * Format: float
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A number representing the quality of the lead, based on the number of the prospect’s opens, clicks and mailing replies.
       */
      engagedScore?: number;
      /**
       * @description
       *
       * The name of the event the prospect was met at.
       */
      eventName?: string;
      /**
       * @description
       *
       * A custom ID for the prospect, often referencing an ID in an external system.
       */
      externalId?: string;
      /**
       * @description
       *
       * A custom owner for the prospect, often referencing an ownering in an external system.
       */
      externalOwner?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The source of the resource’s creation (e.g. "outreach-api").
       */
      externalSource?: string;
      /**
       * @description
       *
       * The prospect’s Facebook URL.
       */
      facebookUrl?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The first name of the prospect.
       */
      firstName?: string;
      /**
       * @description
       *
       * The gender of the prospect.
       */
      gender?: string;
      /**
       * @description
       *
       * The prospect’s GitHub URL.
       */
      githubUrl?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The prospect’s GitHub username.
       */
      githubUsername?: string;
      /**
       * @description
       *
       * The prospect’s Google+ URL.
       */
      googlePlusUrl?: string;
      /**
       * Format: date
       * @description
       *
       * The graduation date of the prospect.
       */
      graduationDate?: string;
      /**
       * @description
       *
       * A list of home phone numbers associated with the prospect.
       */
      homePhones?: string[];
      /**
       * Format: date
       * @description
       *
       * The starting date of the prospect’s current job.
       */
      jobStartDate?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The last name of the prospect.
       */
      lastName?: string;
      /**
       * @description
       *
       * The number of connections on the prospect’s LinkedIn profile.
       */
      linkedInConnections?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The prospect’s LinkedIn ID.
       */
      linkedInId?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The prospect’s LinkedIn slug.
       */
      linkedInSlug?: string;
      /**
       * @description
       *
       * The prospect’s LinkedIn URL.
       */
      linkedInUrl?: string;
      /**
       * @description
       *
       * The middle name of the prospect.
       */
      middleName?: string;
      /**
       * @description
       *
       * A list of mobile phone numbers associated with the prospect.
       */
      mobilePhones?: string[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The full name of the prospect.
       */
      name?: string;
      /**
       * @description
       *
       * The nickname of the prospect.
       */
      nickname?: string;
      /**
       * @description
       *
       * The occupation of the prospect (e.g. "Purchasing Manager").
       */
      occupation?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The number of opens the prospect has made since the last touch point.
       */
      openCount?: number;
      /**
       * @description
       *
       * A boolean value representing whether this prospect is currently opted out of all mailings. Set this value to true to opt out the prospect; the 'opted_out' timestamp will be updated to the time of the request. Set this value to false to revert the opt at and clear the opted out timestamp.
       */
      optedOut?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the prospect opted out of emails.
       */
      optedOutAt?: string;
      /**
       * @description
       *
       * A list of other phone numbers associated with the prospect.
       */
      otherPhones?: string[];
      /**
       * @description
       *
       * A custom note field related to the prospect.
       */
      personalNote1?: string;
      /**
       * @description
       *
       * A second note field related to the prospect.
       */
      personalNote2?: string;
      /**
       * @description
       *
       * The preferred contact method for the prospect.
       */
      preferredContact?: string;
      /**
       * @description
       *
       * The prospect’s Quora URL.
       */
      quoraUrl?: string;
      /**
       * @description
       *
       * The primary geographic region of the prospect.
       */
      region?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The number of replies the prospect has made since the last touch point.
       */
      replyCount?: number;
      /**
       * @description
       *
       * The school(s) the prospect has attended.
       */
      school?: string;
      /**
       * Format: float
       * @description
       *
       * A custom score given to measure the quality of the lead.
       */
      score?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The ID of the sharing team associated with this object. Access is currently in beta.
       */
      sharingTeamId?: string;
      /**
       * @description
       *
       * A custom source representing where the lead was first acquired.
       */
      source?: string;
      /**
       * @description
       *
       * A description of the prospect’s specialties.
       */
      specialties?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The prospect’s StackOverflow ID.
       */
      stackOverflowId?: string;
      /**
       * @description
       *
       * The prospect’s StackOverflow URL.
       */
      stackOverflowUrl?: string;
      /**
       * @description
       *
       * A list of tag values associated with the account (e.g. ["Interested", "2017 Expo"]).
       */
      tags?: string[];
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg>
       *
       * The prospect’s current timezone, preferably in the IANA format (e.g. "America/LosAngeles").
       */
      timeZone?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The prospect’s current IANA timezone, if available.
       */
      timeZoneIana?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The prospect’s current inferred IANA timezone, if available.
       */
      timeZoneInferred?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The title of the prospect.
       */
      title?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the prospect was last touched.
       */
      touchedAt?: string;
      /**
       * Format: date-time
       * @description
       *
       * The date a prospect was soft deleted.
       */
      trashedAt?: string;
      /**
       * @description
       *
       * The prospect’s Twitter URL.
       */
      twitterUrl?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The prospect’s Twitter username.
       */
      twitterUsername?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the prospect was last updated.
       */
      updatedAt?: string;
      /**
       * @description
       *
       * A list of voip phone numbers associated with the prospect.
       */
      voipPhones?: string[];
      /**
       * @description
       *
       * The URL of the prospect’s website.
       */
      websiteUrl1?: string;
      /**
       * @description
       *
       * The value of the prospect’s second website URL field.
       */
      websiteUrl2?: string;
      /**
       * @description
       *
       * The value of the prospect’s third website URL field.
       */
      websiteUrl3?: string;
      /**
       * @description
       *
       * A list of work phone numbers associated with the prospect.
       */
      workPhones?: string[];
    };
    prospectRelationships: {
      /**
       * account
       * @description The prospect's associated account. You can use attributes id, customId, name, named and updatedAt to filter prospects by account (e.g. filter[account][id]=X).
       */
      account?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The non-finished sequence states where this prospect is the primary recipient. This includes states of "active", "paused", "failed", "bounced", "pending" and "disabled." You can use attributes id and state to filter prospects by activeSequenceStates (e.g. filter[activeSequenceStates][id]=X).
       */
      activeSequenceStates?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "sequenceState";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "sequenceState";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The calls associated with the prospect. Relationship calls cannot be used as a filter.
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creater of the prospect. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** @description The prospect's email addresses. Relationship emailAddresses cannot be used as a filter. */
      emailAddresses?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "emailAddress";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "emailAddress";
          };
        }]>[];
      /** @description The prospect's favorites. Relationship favorites cannot be used as a filter. */
      favorites?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "favorite";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "favorite";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The mailings associated with the prospect. Relationship mailings cannot be used as a filter.
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /** @description The opportunities associated with the prospect. Requires the Opportunities SKU to be enabled in order to have access. Please contact support@outreach.io for more assistance. You can use only the attribute id to filter prospects by opportunities (e.g. filter[opportunities][id]=X). */
      opportunities?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "opportunity";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "opportunity";
          };
        }]>[];
      /** @description The roles that associate the prospect with opportunities. Relationship opportunityProspectRoles cannot be used as a filter. */
      opportunityProspectRoles?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "opportunityProspectRole";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "opportunityProspectRole";
          };
        }]>[];
      /**
       * user
       * @description The owner of the prospect. You can use only the attribute id to filter prospects by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * persona
       * @description The persona of the prospect, if it has one. You can use only the attribute id to filter prospects by persona (e.g. filter[persona][id]=X).
       */
      persona?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "persona";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "persona";
        };
      }]>;
      /** @description The prospect's phone numbers Relationship phoneNumbers cannot be used as a filter. */
      phoneNumbers?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "phoneNumber";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "phoneNumber";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The sequence states where this prospect is the primary recipient. You can use attributes id and state to filter prospects by sequenceStates (e.g. filter[sequenceStates][id]=X).
       */
      sequenceStates?: {
          links?: {
            /** @enum {string} */
            related?: "sequenceState";
          };
        }[];
      /**
       * stage
       * @description The stage the prospect is in. You can use attributes id and name to filter prospects by stage (e.g. filter[stage][id]=X).
       */
      stage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The tasks associated with the prospect. Relationship tasks cannot be used as a filter.
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the prospect. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    prospectResponse: {
      attributes?: components["schemas"]["prospect"];
      id?: number;
      relationships?: components["schemas"]["prospectRelationships"];
      type?: string;
    };
    /** @description Record for a recipient for some communication, such as email */
    recipient: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the team was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * Hash of email for recipient.
       */
      emailHash?: string;
      /**
       * @description
       *
       * The type of action for the communcation to the recipient. Must be one of 'bcc', 'cc', or 'to'.
       */
      recipientType?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the team was last updated.
       */
      updatedAt?: string;
      /**
       * @description
       *
       * The recipient contact information (i.e. email address)
       */
      value?: string;
    };
    recipientRelationships: Record<string, never>;
    recipientResponse: {
      attributes?: components["schemas"]["recipient"];
      id?: number;
      relationships?: components["schemas"]["recipientRelationships"];
      type?: string;
    };
    recordActorAssignmentRelationships: {
      actor?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      record?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
    };
    referralPredictionRelationships: {
      /**
       * prospect
       * @description The prospect this prediction belongs to.
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequenceState
       * @description The sequence state this prediction belongs to.
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
    };
    returnDatePredictionRelationships: {
      /**
       * prospect
       * @description The Prospect this prediction belongs to.
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequenceState
       * @description The sequence state this prediction belongs to.
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
    };
    /** @description Where you fall within your organization's structure. */
    role: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the role (e.g. "Vice-President").
       */
      name?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was last updated.
       */
      updatedAt?: string;
    };
    roleRelationships: {
      /**
       * role
       * @description Roles are heirarchical. This is the parent of the current role. You can use only the attribute id to filter roles by parentRole (e.g. filter[parentRole][id]=X).
       */
      parentRole?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "role";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "role";
        };
      }]>;
    };
    roleResponse: {
      attributes?: components["schemas"]["role"];
      id?: number;
      relationships?: components["schemas"]["roleRelationships"];
      type?: string;
    };
    /** @description A reusable set of behaviors to be applied to Sequences */
    ruleset: {
      /**
       * @description
       *
       * The amount of time in seconds after the sequence has completed before the "completedStage" will be applied to the Prospect.
       */
      applyCompletedStageIn?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A boolean value whether out-of-the-office Prospects will be automatically resumed. See "autoResumeOotoProspectsIn" and "autoResumeOotoProspectsExpiresIn" for more information.
       */
      autoResumeOotoProspects?: boolean;
      /**
       * @description
       *
       * The maximum amount of time in seconds to wait before opted-out Prospect will be resumed.
       */
      autoResumeOotoProspectsExpiresIn?: number;
      /**
       * @description
       *
       * The default amount of time in seconds to wait before opted-out Prospects will be resumed.
       */
      autoResumeOotoProspectsIn?: number;
      /**
       * @description
       *
       * Determines if prospect can be added to sequences if they are opted out of calling.
       */
      callOptOutAction?: string;
      /**
       * @description
       *
       * The number of email clicks needed before a call task will be automatically created. This feature will be disabled unless a value is set.
       */
      clicksNeededBeforeCallTaskCreated?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the ruleset was created.
       */
      createdAt?: string;
      /**
       * @description
       *
       * Determines if prospect can be added to sequences if they are opted out of emails.
       */
      emailOptOutAction?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A boolean value whether to include unsubscribe links within emails.
       */
      includeUnsubscribeLinks?: boolean;
      /**
       * @description
       *
       * Determines if a prospect is marked as finished when a meeting is booked.
       */
      meetingBookedAction?: string;
      /**
       * @description
       *
       * The minimum number of seconds that must elapse between when a Prospect was last contacted and when they may be added to a sequnce. This feature will be disabled unless a value is set.
       */
      minimumProspectTouchedInterval?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the ruleset.
       */
      name?: string;
      /**
       * @description
       *
       * A boolean value determining whether to use out of the office return date auto extraction.
       */
      ootoAutoExtractionEnabled?: boolean;
      /**
       * @description
       *
       * The number of email opens needed before a call task will be automatically created. This feature will be disabled unless a value is set.
       */
      opensNeededBeforeCallTaskCreated?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A value determining whether a Prospect may be added to this Sequence multiple times or not. Permitted values include "allow", "disallow" (the default) and "only_if_inactive", which indicates that Prospects may be re-added to this sequence if their existing SequenceState is inactive.
       */
      permitDuplicateProspects?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A value determining whether Prospects may be added to multiple different Sequences. Permitted values include "all_sequences", "exclusive_sequences" and "none" (the default). If the value is "all_sequences", then Prospects may only be added if they are not active in any other Sequence; likewise, a Prospect active in a Sequence with "all_sequences" exclusivity cannot be added to any other Sequence. If the value is "exclusive_sequences", then Prospects may only be added if they are not active in any other Sequence with "exclusive_sequences" exclusivity; likewise, a Prospect active in a Sequence with "exclusive_sequences" exclusivity cannot be added to any other Sequence with "exclusive_sequences" exclusivity. If the value is "none", then no additional restrictions will be applied.
       */
      sequenceExclusivity?: string;
      /**
       * @description
       *
       * Determines if prospect can be added to sequences if they are opted out of SMS.
       */
      smsOptOutAction?: string;
      /**
       * @description
       *
       * Determines if a prospect is marked as finished when a text message is received
       */
      smsReceivedAction?: string;
      /**
       * @description
       *
       * A boolean value determining whether to allow users to customize step templates when adding to sequence.
       */
      stepOverridesEnabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the ruleset was last updated.
       */
      updatedAt?: string;
    };
    rulesetRelationships: {
      /**
       * stage
       * @description The stage to assign to the prospect when a mailing in this sequence bounces. You can use only the attribute id to filter rulesets by bouncedStage (e.g. filter[bouncedStage][id]=X).
       */
      bouncedStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * taskPriority
       * @description The task priority to use when creating call tasks based on mail opens. You can use only the attribute id to filter rulesets by callTaskPriorityFromOpens (e.g. filter[callTaskPriorityFromOpens][id]=X).
       */
      callTaskPriority?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "taskPriority";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "taskPriority";
        };
      }]>;
      /**
       * taskPriority
       * @description The task priority to use when creating call tasks based on mail clicks. You can use only the attribute id to filter rulesets by callTaskPriorityFromClicks (e.g. filter[callTaskPriorityFromClicks][id]=X).
       */
      callTaskPriorityFromClicks?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "taskPriority";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "taskPriority";
        };
      }]>;
      /**
       * taskPriority
       * @description The task priority to use when creating call tasks based on mail opens. You can use only the attribute id to filter rulesets by callTaskPriorityFromOpens (e.g. filter[callTaskPriorityFromOpens][id]=X).
       */
      callTaskPriorityFromOpens?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "taskPriority";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "taskPriority";
        };
      }]>;
      /**
       * stage
       * @description The stage to assign to the prospect when this sequence completes. You can use only the attribute id to filter rulesets by completedStage (e.g. filter[completedStage][id]=X).
       */
      completedStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * stage
       * @description The stage to assign to the prospect when a mailing in this sequence is delivered. You can use only the attribute id to filter rulesets by deliveredStage (e.g. filter[deliveredStage][id]=X).
       */
      deliveredStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * stage
       * @description The stage to assign to the prospect when this sequence finishes. You can use only the attribute id to filter rulesets by finishedStage (e.g. filter[finishedStage][id]=X).
       */
      finishedStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * stage
       * @description The stage to assign to the prospect when they opt out of this sequence. You can use only the attribute id to filter rulesets by optedOutStage (e.g. filter[optedOutStage][id]=X).
       */
      optedOutStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * user
       * @description The owner of the ruleset. You can use only the attribute id to filter rulesets by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * stage
       * @description The stage to assign to the prospect when a mailing in this sequence is replied to. You can use only the attribute id to filter rulesets by repliedStage (e.g. filter[repliedStage][id]=X).
       */
      repliedStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The sequences associated with this ruleset. You can use only the attribute id to filter rulesets by sequences (e.g. filter[sequences][id]=X).
       */
      sequences?: {
          links?: {
            /** @enum {string} */
            related?: "sequence";
          };
        }[];
      /**
       * stage
       * @description The stage to assign to the prospect when this sequence starts. You can use only the attribute id to filter rulesets by startedStage (e.g. filter[startedStage][id]=X).
       */
      startedStage?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage";
        };
      }]>;
    };
    rulesetResponse: {
      attributes?: components["schemas"]["ruleset"];
      id?: number;
      relationships?: components["schemas"]["rulesetRelationships"];
      type?: string;
    };
    scheduleRelationships: {
      /**
       * user
       * @description The owner of the schedule.
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description Leverage emailing within Sequences to engage each individual persona more effectively, and queue up the right actions at the right time. */
    sequence: {
      /**
       * Format: float
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The percentage of "auto_email" sequence steps in this sequence.
       */
      automationPercentage?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of bounced mailings during this sequence.
       */
      bounceCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of clicked mailings from this sequence.
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of delivered mailings from this sequence.
       */
      deliverCount?: number;
      /**
       * @description
       *
       * A custom description for the sequence.
       */
      description?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total number of days it takes to get through this sequence.
       */
      durationInDays?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value determining whether the sequence is enabled or not.
       */
      enabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence was enabled, or null if currently disabled.
       */
      enabledAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of failed mailings from this sequence.
       */
      failureCount?: number;
      /**
       * @description
       *
       * Deprecated. This boolean value exists only to maintain backward compatibility and primaryReplyAction should be used instead. True if primaryReplyAction is "finish", false otherwise.
       */
      finishOnReply?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence was last used.
       */
      lastUsedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value determining whether the sequence is locked or not.
       */
      locked?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence was locked, or null if currently unlocked.
       */
      lockedAt?: string;
      /**
       * @description
       *
       * The maximum number of prospects that can be associated with the sequence. Only applies if the sequence type is "date".
       */
      maxActivations?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name or the sequence.
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of negative reply mailings from this sequence.
       */
      negativeReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of neutral reply mailings from this sequence.
       */
      neutralReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of prospects who have been either called or emailed.
       */
      numContactedProspects?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of prospects who have been marked as replied.
       */
      numRepliedProspects?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of opened mailings from this sequence.
       */
      openCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opted out mailings from this sequence.
       */
      optOutCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of positive reply mailings from this sequence.
       */
      positiveReplyCount?: number;
      /**
       * @description
       *
       * The action to take when the primary prospect replies. Must be one of "finish", "continue", or "pause".
       */
      primaryReplyAction?: string;
      /**
       * @description
       *
       * The duration in seconds to pause for (before automatically finishing) after a reply from the primary prospect if the primaryReplyAction is "pause".
       */
      primaryReplyPauseDuration?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of replied mailings from this sequence.
       */
      replyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of scheduled mailings from this sequence.
       */
      scheduleCount?: number;
      /**
       * @description
       *
       * The schedule interval type must be either "calendar" or "schedule"
       */
      scheduleIntervalType?: string;
      /**
       * @description
       *
       * The action to take when someone other than the primary prospect replies. Must be one of "finish", "continue", or "pause".
       */
      secondaryReplyAction?: string;
      /**
       * @description
       *
       * The duration in seconds to pause for (before automatically finishing) after a reply from anyone other than the primary prospect if the secondaryReplyAction is "pause".
       */
      secondaryReplyPauseDuration?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total number of sequence steps in this sequence.
       */
      sequenceStepCount?: number;
      /**
       * @description
       *
       * The sequence type must be either "date" or "interval".
       */
      sequenceType?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The sequence share type must be either "private", "read_only" or "shared".
       */
      shareType?: string;
      /**
       * @description
       *
       * A list of tag values associated with the sequence (e.g. ["Tier 1", "Inbound Leads"])
       */
      tags?: string[];
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The maximum number of associated sequence states per user that can be active at a one time.
       */
      throttleCapacity?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The maximum number of associated sequence states per user that can be added to the sequence each day.
       */
      throttleMaxAddsPerDay?: number;
      /**
       * @description
       *
       * A boolean value determining whether the throttling of sequence states is paused or not.
       */
      throttlePaused?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the sequence state throttling was paused, or null if not currently paused.
       */
      throttlePausedAt?: string;
      /**
       * @description
       *
       * A boolean value determining whether prospect opt out preferences are respected. Intended only for non-marketing sequences.
       */
      transactional?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence was last updated.
       */
      updatedAt?: string;
    };
    sequenceRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated calls. You can use only the attribute id to filter sequences by calls (e.g. filter[calls][id]=X).
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The content categories (collections) of the sequence. You can use only the attribute id to filter sequences by contentCategoryMemberships (e.g. filter[contentCategoryMemberships][id]=X).
       */
      contentCategoryMemberships?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "contentCategoryMembership";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "contentCategoryMembership";
          };
        }]>[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creater of the sequence. You can use only the attribute id to filter sequences by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated mailings. Relationship mailings cannot be used as a filter.
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /**
       * user
       * @description The owner of the sequence. You can use attributes id, email, firstName and lastName to filter sequences by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * ruleset
       * @description The associated ruleset. You can use only the attribute id to filter sequences by ruleset (e.g. filter[ruleset][id]=X).
       */
      ruleset?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "ruleset";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "ruleset";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence states. You can use only the attribute id to filter sequences by sequenceStates (e.g. filter[sequenceStates][id]=X).
       */
      sequenceStates?: {
          links?: {
            /** @enum {string} */
            related?: "sequenceState";
          };
        }[];
      /** @description The associated sequence steps. You can use only the attribute id to filter sequences by sequenceSteps (e.g. filter[sequenceSteps][id]=X). */
      sequenceSteps?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "sequenceStep";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "sequenceStep";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated tasks. You can use only the attribute id to filter sequences by tasks (e.g. filter[tasks][id]=X).
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the sequence. You can use only the attribute id to filter sequences by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    sequenceResponse: {
      attributes?: components["schemas"]["sequence"];
      id?: number;
      relationships?: components["schemas"]["sequenceRelationships"];
      type?: string;
    };
    /** @description A descriptor of a currently sequenced prospect, which includes relationships to its sequence, prospect and user. */
    sequenceState: {
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the sequence state was last active.
       */
      activeAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of bounced mailings during this sequence state.
       */
      bounceCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence state last had a call completed.
       */
      callCompletedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of clicked mailings from this sequence state.
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence state was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of delivered mailings from this sequence state.
       */
      deliverCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The reason for the most recent error.
       */
      errorReason?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of failed mailings from this sequence state.
       */
      failureCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of negative reply mailings from this sequence state.
       */
      negativeReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of neutral reply mailings from this sequence state.
       */
      neutralReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of opened mailings from this sequence state.
       */
      openCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opted out mailings from this sequence state.
       */
      optOutCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The reason for the most recent pause.
       */
      pauseReason?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of positive reply mailings from this sequence state.
       */
      positiveReplyCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence state last had a mailing reply.
       */
      repliedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of replied mailings from this sequence state.
       */
      replyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of scheduled mailings from this sequence state.
       */
      scheduleCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The current state of the sequence state.
       */
      state?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence state’s state last changed.
       */
      stateChangedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence state was last updated.
       */
      updatedAt?: string;
    };
    sequenceStateRecipientRelationships: {
      /**
       * prospect
       * @description The prospect that is associated with this recipient.
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequenceState
       * @description The sequence state that is associated with this recipient.
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
    };
    sequenceStateRelationships: {
      /**
       * account
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The account associated with the prospect the sequence state is targeting. You can use only the attribute id to filter sequenceStates by account (e.g. filter[account][id]=X).
       */
      account?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Any undelivered mailings associated with the current sequence step. Relationship activeStepMailings cannot be used as a filter.
       */
      activeStepMailings?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "mailing";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Any incomplete tasks associated with the current sequence step. Relationship activeStepTasks cannot be used as a filter.
       */
      activeStepTasks?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "task";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The calls associated with the sequence state. You can use only the attribute id to filter sequenceStates by calls (e.g. filter[calls][id]=X).
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the sequence state. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * mailbox
       * @description The mailbox to use for mailing steps. You can use attributes id and email to filter sequenceStates by mailbox (e.g. filter[mailbox][id]=X).
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The mailings associated with the sequence state. Relationship mailings cannot be used as a filter.
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /**
       * opportunity
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated opportunity. You can use only the attribute id to filter sequenceStates by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * prospect
       * @description The primary prospect this sequence state is targeting. You can use attributes id and emails to filter sequenceStates by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequence
       * @description The sequence this prospect is engaged in. You can use any filterable attribute of sequence.
       */
      sequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * sequenceStep
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The current sequence step the prospect is in. You can use any filterable attribute of sequenceStep.
       */
      sequenceStep?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceStep";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The tasks associated with the sequence state. You can use attributes id and dueAt to filter sequenceStates by tasks (e.g. filter[tasks][id]=X).
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
    };
    sequenceStateResponse: {
      attributes?: components["schemas"]["sequenceState"];
      id?: number;
      relationships?: components["schemas"]["sequenceStateRelationships"];
      type?: string;
    };
    /** @description A descriptor of a single step within an automated sequence. */
    sequenceStep: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of bounced mailings during this sequence step.
       */
      bounceCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of clicked mailings from this sequence step.
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence step was created.
       */
      createdAt?: string;
      /**
       * Format: date
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date this step will activate; only applicable to date-based sequences.
       */
      date?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of delivered mailings from this sequence step.
       */
      deliverCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A human-readable display name that captures the step’s type and order.
       */
      displayName?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of failed mailings from this sequence step.
       */
      failureCount?: number;
      /**
       * @description
       *
       * The interval (in seconds) until this step will activate; only applicable to interval-based sequences.
       */
      interval?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of negative reply mailings from this sequence step.
       */
      negativeReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of neutral reply mailings from this sequence step.
       */
      neutralReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opened mailings from this sequence step.
       */
      openCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opted out mailings from this sequence step.
       */
      optOutCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The step’s display order within its sequence.
       */
      order?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of positive reply mailings from this sequence step.
       */
      positiveReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of replied mailings from this sequence step.
       */
      replyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of scheduled mailings from this sequence step.
       */
      scheduleCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The step’s type; must be "auto_email", "manual_email", "call" or "task".
       */
      stepType?: string;
      /**
       * @description
       *
       * The optional interval (in seconds) from when tasks created by this sequence step are overdue until they are automatically skipped.
       */
      taskAutoskipDelay?: number;
      /**
       * @description
       *
       * An optional note to associate with created tasks.
       */
      taskNote?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the sequence step was last updated.
       */
      updatedAt?: string;
    };
    sequenceStepOverrideRelationships: Record<string, never>;
    sequenceStepRelationships: {
      /**
       * callPurpose
       * @description The default call purpose associated with the sequence step. You can use only the attribute id to filter sequenceSteps by callPurpose (e.g. filter[callPurpose][id]=X).
       */
      callPurpose?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "callPurpose";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "callPurpose";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The calls associated with the sequence step. You can use only the attribute id to filter sequenceSteps by calls (e.g. filter[calls][id]=X).
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the sequence step. You can use only the attribute id to filter sequenceSteps by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The mailings associated with the sequence step. Relationship mailings cannot be used as a filter.
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /**
       * sequence
       * @description The associated sequence. You can use attributes id, enabledAt and name to filter sequenceSteps by sequence (e.g. filter[sequence][id]=X).
       */
      sequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The sequence templates in use by this sequence step. You can use any filterable attribute of sequenceTemplates.
       */
      sequenceTemplates?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "sequenceTemplate";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "sequenceTemplate";
          };
        }]>[];
      /**
       * taskPriority
       * @description The associated task priority. You can use only the attribute id to filter sequenceSteps by taskPriority (e.g. filter[taskPriority][id]=X).
       */
      taskPriority?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "taskPriority";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "taskPriority";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The tasks associated with the sequence step. You can use only the attribute id to filter sequenceSteps by tasks (e.g. filter[tasks][id]=X).
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the sequence step. You can use only the attribute id to filter sequenceSteps by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    sequenceStepResponse: {
      attributes?: components["schemas"]["sequenceStep"];
      id?: number;
      relationships?: components["schemas"]["sequenceStepRelationships"];
      type?: string;
    };
    /** @description An object used to track which templates are in use by which sequence steps. */
    sequenceTemplate: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of bounced mailings during this sequence template.
       */
      bounceCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of clicked mailings from this sequence template.
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the sequence template was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of delivered mailings from this sequence template.
       */
      deliverCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Boolean indicating if the sequence template is currently enabled.
       */
      enabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * Datetime for when the sequence template was enabled.
       */
      enabledAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of failed mailings from this sequence template.
       */
      failureCount?: number;
      /**
       * @description
       *
       * Boolean indicating if the sequence template should be a reply email or a new thread.
       */
      isReply?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of negative reply mailings from this sequence template.
       */
      negativeReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of neutral reply mailings from this sequence template.
       */
      neutralReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opened mailings from this sequence template.
       */
      openCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opted out mailings from this sequence template.
       */
      optOutCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of positive reply mailings from this sequence template.
       */
      positiveReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of replied mailings from this sequence template.
       */
      replyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of scheduled mailings from this sequence template.
       */
      scheduleCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the sequence template was last updated.
       */
      updatedAt?: string;
    };
    sequenceTemplateRelationships: {
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * User that created the sequence template. You can use only the attribute id to filter sequenceTemplates by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * sequenceStep
       * @description The sequence step that uses the sequence template. You can use any filterable attribute of sequenceStep.
       */
      sequenceStep?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceStep";
        };
      }]>;
      /**
       * template
       * @description The template used for this sequence template. You can use only the attribute id to filter sequenceTemplates by template (e.g. filter[template][id]=X).
       */
      template?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "template";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "template";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * User that last updated the sequence template. You can use only the attribute id to filter sequenceTemplates by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    sequenceTemplateResponse: {
      attributes?: components["schemas"]["sequenceTemplate"];
      id?: number;
      relationships?: components["schemas"]["sequenceTemplateRelationships"];
      type?: string;
    };
    smartViewNotificationRelationships: {
      /**
       * user
       * @description The owner of the notificiation.
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    smartViewRelationships: {
      /**
       * user
       * @description The owner of the smart view.
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description A piece of an email to be reused in multiple messages. */
    snippet: {
      /**
       * @description
       *
       * The HTML of the snippet.
       */
      bodyHtml?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The text of the snippet.
       */
      bodyText?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the snippet was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the snippet.
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The permissions for sharing the snippet; must be "private" or "shared."
       */
      shareType?: string;
      /**
       * @description
       *
       * A list of tags associated with the snippet (e.g. ["Useful", "Prospecting"]).
       */
      tags?: string[];
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the snippet was last updated.
       */
      updatedAt?: string;
    };
    snippetRelationships: {
      /** @description The content categories (collections) of the snippet. You can use only the attribute id to filter snippets by contentCategoryMemberships (e.g. filter[contentCategoryMemberships][id]=X). */
      contentCategoryMemberships?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "contentCategoryMembership";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "contentCategoryMembership";
          };
        }]>[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the snippet. You can use only the attribute id to filter snippets by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The owner of the snippet. You can use only the attribute id to filter snippets by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The updater of the snippet. You can use only the attribute id to filter snippets by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    snippetResponse: {
      attributes?: components["schemas"]["snippet"];
      id?: number;
      relationships?: components["schemas"]["snippetRelationships"];
      type?: string;
    };
    /** @description A descriptor of the point in the process, used for categorizing Prospects. */
    stage: {
      /**
       * @description
       *
       * The color the stage label will be highlighted in the interface, specified as a hexidecimal value (e.g. "#5951ff").
       */
      color?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the stage was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the stage (e.g. "Qualified Lead").
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The stage's display order within the collection.
       */
      order?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the stage was last updated.
       */
      updatedAt?: string;
    };
    stageRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the stage. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The prospects associated to the stage. You can use only the attribute id to filter stages by prospects (e.g. filter[prospects][id]=X).
       */
      prospects?: {
          links?: {
            /** @enum {string} */
            related?: "prospect";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the stage. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    stageResponse: {
      attributes?: components["schemas"]["stage"];
      id?: number;
      relationships?: components["schemas"]["stageRelationships"];
      type?: string;
    };
    surveyQuestionOptionRelationships: Record<string, never>;
    surveyQuestionRelationships: Record<string, never>;
    surveyRelationships: Record<string, never>;
    surveyUserResponseRelationships: {
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The user who responded.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    tagRelationships: Record<string, never>;
    /** @description An item that requires action to complete. */
    task: {
      /**
       * @description
       *
       * The action type of the task. Can be 'action_item', 'call', 'email', or 'in_person'.
       */
      action?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The optional date and time when the task will automatically be skipped. Tasks with an empty autoskip_at will never be autoskipped.
       */
      autoskipAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The compiled template HTML of incomplete SMS or LinkedIn tasks associated with a sequence.
       */
      compiledSequenceTemplateHtml?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A boolean value whether the task has been completed.
       */
      completed?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the task was completed.
       */
      completedAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the task was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the task is due.
       */
      dueAt?: string;
      /**
       * @description
       *
       * An optional note for the task.
       */
      note?: string;
      /**
       * @description
       *
       * The optional opportunity rule associated with the task. Can be 'recent_created', 'recent_updated', 'noop'.
       */
      opportunityAssociation?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the pending task is scheduled for.
       */
      scheduledAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The current state of the task. Can be 'pending', 'incomplete', or 'complete'.
       */
      state?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the state last changed.
       */
      stateChangedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The type of task. Can be 'follow_up', 'manual', 'no_reply', 'sequence_open', 'sequence_click', 'sequence_step_call', 'sequence_step_email', 'sequence_step_linkedin_interact_with_post', 'sequence_step_linkedin_other', 'sequence_step_linkedin_send_connection_request', 'sequence_step_linkedin_send_message', 'sequence_step_linkedin_view_profile', 'sequence_step_sms', 'sequence_step_task', or 'touch'. Tasks created through the API will automatically be 'manual' tasks.
       */
      taskType?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the task was last updated.
       */
      updatedAt?: string;
    };
    /** @description A descriptor of importance used for categorizing Tasks. */
    taskPriority: {
      /**
       * @description
       *
       * The color the task priority label will be highlighted in the interface, specified as a hexadecimal value (e.g. "0xFF5951FF").
       */
      color?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the task priority was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the task priority (e.g. "High").
       */
      name?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the task priority was last updated.
       */
      updatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A relative value used for display order. Task priorities are listed from lowest to highest weight.
       */
      weight?: number;
    };
    taskPriorityRelationships: {
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence steps. Relationship sequenceSteps cannot be used as a filter.
       */
      sequenceSteps?: {
          links?: {
            /** @enum {string} */
            related?: "sequenceStep";
          };
        }[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated tasks. Relationship tasks cannot be used as a filter.
       */
      tasks?: {
          links?: {
            /** @enum {string} */
            related?: "task";
          };
        }[];
    };
    taskPriorityResponse: {
      attributes?: components["schemas"]["taskPriority"];
      id?: number;
      relationships?: components["schemas"]["taskPriorityRelationships"];
      type?: string;
    };
    taskRelationships: {
      /**
       * account
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated account. You can use only the attribute id to filter tasks by account (e.g. filter[account][id]=X).
       */
      account?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account";
        };
      }]>;
      /**
       * call
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated call, if a call task. You can use only the attribute id to filter tasks by call (e.g. filter[call][id]=X).
       */
      call?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "call";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "call";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated calls, if a call task. You can use only the attribute id to filter tasks by calls (e.g. filter[calls][id]=X).
       */
      calls?: {
          links?: {
            /** @enum {string} */
            related?: "call";
          };
        }[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The completer of this task. You can use only the attribute id to filter tasks by completer (e.g. filter[completer][id]=X).
       */
      completer?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of this task. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage" | "user" | "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage" | "user" | "sequenceStep";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage" | "user" | "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage" | "user" | "sequenceStep";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "stage" | "user" | "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "stage" | "user" | "sequenceStep";
        };
      }]>]>;
      /**
       * mailing
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated mailing, if a mailing task. You can use only the attribute id to filter tasks by mailing (e.g. filter[mailing][id]=X).
       */
      mailing?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailing";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailing";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated mailings, if a mailing task. You can use only the attribute id to filter tasks by mailings (e.g. filter[mailings][id]=X).
       */
      mailings?: {
          links?: {
            /** @enum {string} */
            related?: "mailing";
          };
        }[];
      /**
       * opportunity
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated opportunity. You can use only the attribute id to filter tasks by opportunity (e.g. filter[opportunity][id]=X).
       */
      opportunity?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "opportunity";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "opportunity";
        };
      }]>;
      /**
       * user
       * @description The owner of this task. You can use attributes id, email and firstName to filter tasks by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * prospect
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated prospect. You can use attributes id, byPersonaId, byStageId, createdAt, firstName, tags, title and updatedAt to filter tasks by prospect (e.g. filter[prospect][id]=X).
       */
      prospect?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "prospect";
        };
      }]>;
      /**
       * sequence
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence. You can use attributes id and tags to filter tasks by sequence (e.g. filter[sequence][id]=X).
       */
      sequence?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequence";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequence";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The sequence steps of the associated sequence. You can use only the attribute id to filter tasks by sequenceSequenceSteps (e.g. filter[sequenceSequenceSteps][id]=X).
       */
      sequenceSequenceSteps?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "sequenceStep";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "sequenceStep";
          };
        }]>[];
      /**
       * sequenceState
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence state. You can use only the attribute id to filter tasks by sequenceState (e.g. filter[sequenceState][id]=X).
       */
      sequenceState?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceState";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceState";
        };
      }]>;
      /**
       * sequenceStep
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence step. You can use attributes id and stepType to filter tasks by sequenceStep (e.g. filter[sequenceStep][id]=X).
       */
      sequenceStep?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceStep";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceStep";
        };
      }]>;
      /**
       * sequenceTemplate
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated sequence template. You can use only the attribute id to filter tasks by sequenceTemplate (e.g. filter[sequenceTemplate][id]=X).
       */
      sequenceTemplate?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "sequenceTemplate";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "sequenceTemplate";
        };
      }]>;
      /** @description The task's subject, either an account or prospect. Relationship subject cannot be used as a filter. */
      subject?: OneOf<[OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account" | "opportunity" | "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account" | "opportunity" | "prospect";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account" | "opportunity" | "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account" | "opportunity" | "prospect";
        };
      }]>, OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "account" | "opportunity" | "prospect";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "account" | "opportunity" | "prospect";
        };
      }]>]>;
      /**
       * taskPriority
       * @description The associated task priority. You can use attributes id and name to filter tasks by taskPriority (e.g. filter[taskPriority][id]=X).
       */
      taskPriority?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "taskPriority";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "taskPriority";
        };
      }]>;
      /**
       * template
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The associated template. You can use only the attribute id to filter tasks by template (e.g. filter[template][id]=X).
       */
      template?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "template";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "template";
        };
      }]>;
    };
    taskResponse: {
      attributes?: components["schemas"]["task"];
      id?: number;
      relationships?: components["schemas"]["taskRelationships"];
      type?: string;
    };
    taskThemeRelationships: Record<string, never>;
    /** @description A descriptor of a group of users. */
    team: {
      /**
       * @description
       *
       * The color used to label and highlight the team.
       */
      color?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the team (e.g. "SDRs").
       */
      name?: string;
      /**
       * @description
       *
       * The ID from the SCIM provisioning service used to create the team.
       */
      scimExternalId?: string;
      /**
       * @description
       *
       * The name of the SCIM provisioning source used to create the team.
       */
      scimSource?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the team was last updated.
       */
      updatedAt?: string;
    };
    teamMembershipRelationships: {
      /**
       * team
       * @description The team associated with the team membership.
       */
      team?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "team";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "team";
        };
      }]>;
      /**
       * user
       * @description The user associated with the team membership.
       */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    teamRelationships: {
      /** @description The content categories that are assigned to the team. Relationship contentCategories cannot be used as a filter. */
      contentCategories?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "contentCategory";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "contentCategory";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the team. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the team. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /** @description The users associated with the team. You can use only the attribute id to filter teams by users (e.g. filter[users][id]=X). */
      users?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "user";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "user";
          };
        }]>[];
    };
    teamResponse: {
      attributes?: components["schemas"]["team"];
      id?: number;
      relationships?: components["schemas"]["teamRelationships"];
      type?: string;
    };
    teamSettingsRelationships: {
      /**
       * profile
       * @description The governance profile that is applied to the team.
       */
      profile?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "profile";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "profile";
        };
      }]>;
      /**
       * team
       * @description The team the settings apply to.
       */
      team?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "team";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "team";
        };
      }]>;
    };
    /** @description A reusable template for building emails. */
    template: {
      /**
       * @description
       *
       * Boolean value indicating if the template has been archived.
       */
      archived?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the template was archived.
       */
      archivedAt?: string;
      /**
       * @description
       *
       * A list of default person and email address pairs to receive this template in the "bcc" field (e.g. [Billy Bob `<billy.bob@seattle.city>`])
       */
      bccRecipients?: string[];
      /**
       * @description
       *
       * The body HTML of the template.
       */
      bodyHtml?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The body text of the template.
       */
      bodyText?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of bounced mailings during this template.
       */
      bounceCount?: number;
      /**
       * @description
       *
       * A list of default person and email address pairs to receive this template in the "cc" field (e.g. [Billy Bob `<billy.bob@seattle.city>`])
       */
      ccRecipients?: string[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of clicked mailings from this template.
       */
      clickCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the template was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of delivered mailings from this template.
       */
      deliverCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of failed mailings from this template.
       */
      failureCount?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The last time the template was used.
       */
      lastUsedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The name of the template.
       */
      name?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of negative reply mailings from this template.
       */
      negativeReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of neutral reply mailings from this template.
       */
      neutralReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of opened mailings from this template.
       */
      openCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of opted out mailings from this template.
       */
      optOutCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of positive reply mailings from this template.
       */
      positiveReplyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The total count of replied mailings from this template.
       */
      replyCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The total count of scheduled mailings from this template.
       */
      scheduleCount?: number;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The share type must be one of "read_only," "private," or "shared".
       */
      shareType?: string;
      /**
       * @description
       *
       * The subject line for the email to be sent.
       */
      subject?: string;
      /**
       * @description
       *
       * A list of tag values associated with the template (e.g. ["Sequencing", "Quick Response"]).
       */
      tags?: string[];
      /**
       * @description
       *
       * A list of default person and email address pairs to receive this template in the "to" field (e.g. ["Billy Bob <billy.bob@seattle.city>"])
       */
      toRecipients?: string[];
      /**
       * @description
       *
       * Boolean value indicating if link tracking is on for the template.
       */
      trackLinks?: boolean;
      /**
       * @description
       *
       * Boolean value indicating if open tracking is on for the template.
       */
      trackOpens?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the template was last updated.
       */
      updatedAt?: string;
    };
    templateRelationships: {
      /** @description The content cateogories with which this template is associated. Relationship contentCategoryMemberships cannot be used as a filter. */
      contentCategoryMemberships?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "contentCategoryMembership";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "contentCategoryMembership";
          };
        }]>[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the template. You can use only the attribute id to filter templates by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description The owner of the template. You can use only the attribute id to filter templates by owner (e.g. filter[owner][id]=X).
       */
      owner?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * A list of default email addresses to receive this template. You can use only the attribute id to filter templates by recipients (e.g. filter[recipients][id]=X).
       */
      recipients?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "recipient";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "recipient";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The sequence templates using the template for their content. Relationship sequenceTemplates cannot be used as a filter.
       */
      sequenceTemplates?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "sequenceTemplate";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "sequenceTemplate";
          };
        }]>[];
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the template. You can use only the attribute id to filter templates by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    templateResponse: {
      attributes?: components["schemas"]["template"];
      id?: number;
      relationships?: components["schemas"]["templateRelationships"];
      type?: string;
    };
    /** @description The individual that uses the application. See https://developers.outreach.io/api/common-patterns/#invite-new-users for more information on inviting new users. */
    user: {
      /**
       * @description
       *
       * The default smart view to load on the account index view.
       */
      accountsViewId?: number;
      /**
       * @description
       *
       * A boolean value whether the user's activity notifications are disabled.
       */
      activityNotificationsDisabled?: boolean;
      /**
       * @description
       *
       * A boolean value whether the user's bounce warning emails are enabled.
       */
      bounceWarningEmailEnabled?: boolean;
      /**
       * @description
       *
       * The telephone number of the user's outbound bridge phone.
       */
      bridgePhone?: string;
      /**
       * @description
       *
       * The extension number of the user's outbound bridge phone.
       */
      bridgePhoneExtension?: string;
      /**
       * @description
       *
       * The default smart view to load on the calls view.
       */
      callsViewId?: number;
      /**
       * @description
       *
       * The user's preferred default tab to open when in task flow.
       */
      controlledTabDefault?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the user was created.
       */
      createdAt?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the user most recently signed in.
       */
      currentSignInAt?: string;
      /**
       * @description
       *
       * The value of the user's first custom field.
       */
      custom1?: string;
      /**
       * @description
       *
       * The value of the user's second custom field.
       */
      custom2?: string;
      /**
       * @description
       *
       * The value of the user's third custom field.
       */
      custom3?: string;
      /**
       * @description
       *
       * The value of the user's fourth custom field.
       */
      custom4?: string;
      /**
       * @description
       *
       * The value of the user's fifth custom field.
       */
      custom5?: string;
      /**
       * @description
       *
       * A boolean value whether the user's daily digest emails are enabled.
       */
      dailyDigestEmailEnabled?: boolean;
      /**
       * @description
       *
       * The id of the default ruleset assigned to the user.
       */
      defaultRulesetId?: number;
      /**
       * @description
       *
       * A collection of the user's work roles.
       */
      duties?: Record<string, never>;
      /**
       * Format: email
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The email address of the user. Cannot be updated via the API.
       */
      email?: string;
      /**
       * @description
       *
       * A boolean value whether the user has voice recordings enabled.
       */
      enableVoiceRecordings?: boolean;
      /**
       * @description
       *
       * A boolean value whether the user has engagement emails enabled.
       */
      engagementEmailsEnabled?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The first name of the user.
       */
      firstName?: string;
      /**
       * @description
       *
       * The telephone number of the user's inbound bridge phone.
       */
      inboundBridgePhone?: string;
      /**
       * @description
       *
       * The extension number of the user's inbound bridge phone.
       */
      inboundBridgePhoneExtension?: string;
      /**
       * @description
       *
       * The behavior of inbound calls. Must be either "inbound_bridge" or "inbound_voicemail".
       */
      inboundCallBehavior?: string;
      /**
       * @description
       *
       * The user's type of telephone for inbound calls. Must be either "bridge", "voip" or "bridge_and_voip".
       */
      inboundPhoneType?: string;
      /**
       * @description
       *
       * The message for inbound voicemails (e.g. "Please leave a message and I will get back to you as soon I can").
       */
      inboundVoicemailCustomMessageText?: string;
      /**
       * @description
       *
       * The gender of the voice that reads the voicemail message. Must be either "man" or "woman".
       */
      inboundVoicemailMessageTextVoice?: string;
      /**
       * @description
       *
       * The type of inbound voicemail to use. Must be either "automated", "recorded", or "off".
       */
      inboundVoicemailPromptType?: string;
      /**
       * @description
       *
       * The default smart view to load on the kaia recordings view.
       */
      kaiaRecordingsViewId?: number;
      /**
       * @description
       *
       * Whether to keep the user's bridge phone connected in-between outbound calls.
       */
      keepBridgePhoneConnected?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The last name of the user.
       */
      lastName?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the user previously signed in.
       */
      lastSignInAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A boolean value whether the user is locked out of the application.
       */
      locked?: boolean;
      /**
       * @description
       *
       * A boolean value whether the user's mailbox error emails are enabled.
       */
      mailboxErrorEmailEnabled?: boolean;
      /**
       * @description
       *
       * A boolean value whether the user's meeting engagement notifications are enabled.
       */
      meetingEngagementNotificationEnabled?: boolean;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The full name of the user.
       */
      name?: string;
      /**
       * @description
       *
       * A boolean value whether the user's notifications are enabled.
       */
      notificationsEnabled?: boolean;
      /**
       * @description
       *
       * A boolean value indicating if phone calls will launch a call from Outreach (Salesforce, Github, Gmail, LinkedIn, and Twitter).
       */
      oceClickToDialEverywhere?: boolean;
      /**
       * @description
       *
       * A boolean value indicating whether the Outreach Gmail toolbar is enabled.
       */
      oceGmailToolbar?: boolean;
      /**
       * @description
       *
       * The user's current email tracking settings when using Outreach Everywhere with GMail.
       */
      oceGmailTrackingState?: string;
      /**
       * @description
       *
       * A boolean value indicating if emails are enabled in Outreach Everywhere with Salesforce.
       */
      oceSalesforceEmailDecorating?: boolean;
      /**
       * @description
       *
       * A boolean value indicating if phone calls are enabled in Outreach Everywhere with Salesforce.
       */
      oceSalesforcePhoneDecorating?: boolean;
      /**
       * @description
       *
       * A boolean value indicating whether Outreach Everywhere universal task flow is enabled.
       */
      oceUniversalTaskFlow?: boolean;
      /**
       * @description
       *
       * A boolean value indicating whether Outreach Everywhere window mode is enabled.
       */
      oceWindowMode?: boolean;
      /**
       * @description
       *
       * The default smart view to load on the opportunity index view.
       */
      opportunitiesViewId?: number;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the current password expires.
       */
      passwordExpiresAt?: string;
      /**
       * @description
       *
       * The country code of the user's phone.
       */
      phoneCountryCode?: string;
      /**
       * @description
       *
       * The telephone number of the user's phone.
       */
      phoneNumber?: string;
      /**
       * @description
       *
       * The user's type of telephone for outbound calls. Must be either "bridge" or "voip".
       */
      phoneType?: string;
      /**
       * @description
       *
       * A boolean value whether the user's plugin related error notifications are enabled.
       */
      pluginAlertNotificationEnabled?: boolean;
      /**
       * @description
       *
       * A string that represents Twilio data center used to connect to Twilio.
       */
      preferredVoiceRegion?: string;
      /**
       * @description
       *
       * A boolean value whether the user prefers that a voice call comes from a local phone number.
       */
      prefersLocalPresence?: boolean;
      /**
       * @description
       *
       * The primary preferred timezone to use when scheduling meetings.
       */
      primaryTimezone?: string;
      /**
       * @description
       *
       * The default smart view to load on the prospect index view.
       */
      prospectsViewId?: number;
      /**
       * @description
       *
       * The default smart view to load on the team performance reports view.
       */
      reportsTeamPerfViewId?: number;
      /**
       * @description
       *
       * The default smart view to load on the reports view.
       */
      reportsViewId?: number;
      /**
       * @description
       *
       * The ID from the SCIM provisioning service used to create the user.
       */
      scimExternalId?: string;
      /**
       * @description
       *
       * The name of the SCIM provisioning source used to create the user.
       */
      scimSource?: string;
      /**
       * @description
       *
       * The secondary preferred timezone to use when scheduling meetings.
       */
      secondaryTimezone?: string;
      /**
       * @description
       *
       * A boolean value whether the user's sender notifications are excluded.
       */
      senderNotificationsExcluded?: boolean;
      /**
       * @description
       *
       * The default smart view to load on the tasks index view.
       */
      tasksViewId?: number;
      /**
       * @description
       *
       * The default smart view to load on the teams index view.
       */
      teamsViewId?: number;
      /**
       * @description
       *
       * The tertiary preferred timezone to use when scheduling meetings.
       */
      tertiaryTimezone?: string;
      /**
       * @description
       *
       * A boolean value whether to send the user email notifications when a text message is missed.
       */
      textingEmailNotifications?: boolean;
      /**
       * @description
       *
       * The user's job title (e.g. "Staff Accountant").
       */
      title?: string;
      /**
       * @description
       *
       * A boolean value whether the user's unknown reply emails are enabled.
       */
      unknownReplyEmailEnabled?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg> <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The date and time the user was last updated.
       */
      updatedAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The globally unique ID (GUID) assigned to the user.
       */
      userGuid?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A reader friendly unique identifier of the user.
       */
      username?: string;
      /**
       * @description
       *
       * The default smart view to load on the users index view.
       */
      usersViewId?: number;
      /**
       * @description
       *
       * A boolean value whether the user's voicemail notifications are enabled.
       */
      voicemailNotificationEnabled?: boolean;
      /**
       * @description
       *
       * A boolean value whether the user's weekly digest email are enabled.
       */
      weeklyDigestEmailEnabled?: boolean;
    };
    userRelationships: {
      /** @description The groupings of sequences, snippets and templates that this user has access to. Relationship contentCategories cannot be used as a filter. */
      contentCategories?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "contentCategory";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "contentCategory";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the user. Relationship creator cannot be used as a filter.
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * mailbox
       * @description The default mailbox associated with the user. Relationship mailbox cannot be used as a filter.
       */
      mailbox?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "mailbox";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "mailbox";
        };
      }]>;
      /** @description All mailboxes associated with the user. Relationship mailboxes cannot be used as a filter. */
      mailboxes?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "mailbox";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "mailbox";
          };
        }]>[];
      /**
       * profile
       * @description The user's profile in Outreach. You can use only the attribute id to filter users by profile (e.g. filter[profile][id]=X).
       */
      profile?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "profile";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "profile";
        };
      }]>;
      /** @description Recipients that will be included by default in all emails composed by user. Relationship recipients cannot be used as a filter. */
      recipients?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "recipient";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "recipient";
          };
        }]>[];
      /**
       * role
       * @description The role associated with the user. You can use only the attribute id to filter users by role (e.g. filter[role][id]=X).
       */
      role?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "role";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "role";
        };
      }]>;
      /** @description The teams the user belongs to. You can use only the attribute id to filter users by teams (e.g. filter[teams][id]=X). */
      teams?: OneOf<[{
          data?: {
            id?: number;
            /** @enum {string} */
            type?: "team";
          };
        }, {
          links?: {
            /** @enum {string} */
            related?: "team";
          };
        }]>[];
      /**
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the user. Relationship updater cannot be used as a filter.
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    userResponse: {
      attributes?: components["schemas"]["user"];
      id?: number;
      relationships?: components["schemas"]["userRelationships"];
      type?: string;
    };
    voicePluginRelationships: Record<string, never>;
    voicemailPromptRelationships: {
      /** user */
      user?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    /** @description A configurable notification that submits external JSON-API-formatted HTTP requests whenever resources are modified. */
    webhook: {
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The action that will trigger this webhook (e.g. "*", "created", "updated", "destroyed"). Webhooks will only execute if both the action and resource match.
       */
      action?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * A boolean value indicating whether the webhook is active.
       */
      active?: boolean;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the webhook was created.
       */
      createdAt?: string;
      /**
       * @description <img src=https://developers.outreach.io/badges/filterable.svg> <img src=https://developers.outreach.io/badges/sortable.svg>
       *
       * The resource that will trigger this webhook (e.g. "*", "prospect", "sequenceState"). Webhooks will only execute if both the action and resource match.
       */
      resource?: string;
      /**
       * @description
       *
       * A private token used to verify the authenticity of incoming webhook payloads.
       */
      secret?: string;
      /**
       * Format: date-time
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The date and time the webhook was last updated.
       */
      updatedAt?: string;
      /**
       * @description
       *
       * The URL where the webhook will route its POST HTTP request.
       */
      url?: string;
    };
    webhookRelationships: {
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The authorizer of the webhook. The webhook will not deliver results if the authorizer does not have permission to read the resource being returned. Relationship authorizer cannot be used as a filter.
       */
      authorizer?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The creator of the webhook. You can use only the attribute id to filter webhooks by creator (e.g. filter[creator][id]=X).
       */
      creator?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
      /**
       * user
       * @description <img src=https://developers.outreach.io/badges/readonly.svg>
       *
       * The most recent updater of the webhook. You can use only the attribute id to filter webhooks by updater (e.g. filter[updater][id]=X).
       */
      updater?: OneOf<[{
        data?: {
          id?: number;
          /** @enum {string} */
          type?: "user";
        };
      }, {
        links?: {
          /** @enum {string} */
          related?: "user";
        };
      }]>;
    };
    webhookResponse: {
      attributes?: components["schemas"]["webhook"];
      id?: number;
      relationships?: components["schemas"]["webhookRelationships"];
      type?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
