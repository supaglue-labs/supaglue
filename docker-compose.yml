x-common-env:
  &common-env
  NODE_ENV: production
  SUPAGLUE_DATABASE_URL: ${SUPAGLUE_DATABASE_URL:-postgres://postgres:supaglue@postgres:5432/postgres?schema=api}
  SUPAGLUE_PRETTY_LOGS: 1
  SUPAGLUE_POSTHOG_API_KEY: ${SUPAGLUE_POSTHOG_API_KEY:-phc_thv3N2dFQcJDh2vPz6FtGE9oKDiBSdYp5oKS1Cu9U8j}
  SUPAGLUE_API_ENCRYPTION_SECRET: ${SUPAGLUE_API_ENCRYPTION_SECRET:-some-per-customer-secret-salt}
  SUPAGLUE_DISABLE_ANALYTICS:
  SUPAGLUE_DISABLE_ERROR_REPORTING:
  SUPAGLUE_DEPLOYMENT_ID:
  IS_CLOUD:


x-fe-api-common-env:
  &fe-api-common-env
  SUPAGLUE_INTERNAL_TOKEN: some-internal-token
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-some-key}
  CLERK_SECRET_KEY: ${CLERK_SECRET_KEY:-some-key}
  NEXT_PUBLIC_IS_CLOUD:


services:
  postgres:
    image: postgres:15
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-supaglue}

  api:
    image: supaglue/api:0.7.2
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_started
      init:
        condition: service_completed_successfully
    volumes:
      - ${SUPAGLUE_CONFIG_DIR:-~/.supaglue}:/root/.supaglue
    environment:
      <<: [ *common-env, *fe-api-common-env ]
      SUPAGLUE_API_PORT: ${SUPAGLUE_API_PORT:-8080}
      SUPAGLUE_CORS_ORIGIN: ${SUPAGLUE_CORS_ORIGIN:-http://localhost:3000}
      SUPAGLUE_SYNC_PERIOD_MS:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
    restart: on-failure

  sync-worker:
    image: supaglue/sync-worker:0.7.2
    depends_on:
      postgres:
        condition: service_started
      init:
        condition: service_completed_successfully
    volumes:
      - ${SUPAGLUE_CONFIG_DIR:-~/.supaglue}:/root/.supaglue
    environment:
      <<: *common-env
    restart: on-failure

  mgmt-ui:
    image: supaglue/mgmt-ui:0.7.2
    ports:
      - '3000:3000'
    depends_on:
      api:
        condition: service_started
    environment:
      <<: *fe-api-common-env
      SUPAGLUE_API_HOST: ${SUPAGLUE_API_HOST:-http://api:8080}
      SUPAGLUE_JWT_SECRET: ${SUPAGLUE_JWT_SECRET:-a-secret-to-change}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      SUPAGLUE_DEPLOYMENT_ID:
    restart: on-failure

  temporal:
    image: slamdev/temporalite:0.3.0 # TODO: we should replace this with one hosted by us later
    ports:
      - 7233:7233
      - 8233:8233
    entrypoint: temporalite start -n default --ip 0.0.0.0 -f /data/temporal.db
    restart: on-failure
    volumes:
      - temporalitedata:/data

  init:
    image: supaglue/api:0.7.2
    environment:
      <<: *common-env
      SUPAGLUE_QUICKSTART_API_KEY: ${SUPAGLUE_QUICKSTART_API_KEY:-some-api-key}
    depends_on:
      postgres:
        condition: service_started
      temporal:
        condition: service_started
    volumes:
      - .env:/app/.env
    command: sh -c 'npx prisma migrate deploy && node node_modules/@supaglue/db/prisma/seed.js && node init_scripts/init_temporal.js'

volumes:
  pgdata:
  temporalitedata:
