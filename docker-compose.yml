x-common-env: &common-env
  NODE_ENV: development
  SUPAGLUE_ENVIRONMENT: development
  SUPAGLUE_DATABASE_URL: ${SUPAGLUE_DATABASE_URL:-postgres://postgres:supaglue@postgres:5432/postgres?schema=api}
  SUPAGLUE_MANAGED_DATABASE_URL: ${SUPAGLUE_MANAGED_DATABASE_URL:-postgres://postgres:supaglue@postgres:5432/postgres}
  SUPAGLUE_PRETTY_LOGS: 1
  SUPAGLUE_POSTHOG_API_KEY: ${SUPAGLUE_POSTHOG_API_KEY:-phc_thv3N2dFQcJDh2vPz6FtGE9oKDiBSdYp5oKS1Cu9U8j}
  SUPAGLUE_API_ENCRYPTION_SECRET: ${SUPAGLUE_API_ENCRYPTION_SECRET:-some-per-customer-secret-salt}
  SVIX_API_TOKEN: ${SVIX_API_TOKEN:-testsk_sLr_YXpHsUKnVZFQSPH17YIXbBGn9Nl3.us}
  SUPAGLUE_LOG_LEVEL: debug
  SUPAGLUE_DISABLE_ERROR_REPORTING: 1
  SUPAGLUE_DISABLE_ANALYTICS:
  SUPAGLUE_DEPLOYMENT_ID:
  SALESFORCE_CLIENT_ID:
  SALESFORCE_CLIENT_SECRET:
  HUBSPOT_CLIENT_ID:
  HUBSPOT_CLIENT_SECRET:
  GONG_CLIENT_ID:
  GONG_CLIENT_SECRET:
  OUTREACH_CLIENT_ID:
  OUTREACH_CLIENT_SECRET:
  SALESLOFT_CLIENT_ID:
  SALESLOFT_CLIENT_SECRET:
  # Edit this when using ngrok
  SUPAGLUE_SERVER_URL: ${SUPAGLUE_SERVER_URL:-http://localhost:8080}
  SUPAGLUE_MAGIC_LINK_URL:

x-fe-api-common-env: &fe-api-common-env
  SUPAGLUE_INTERNAL_TOKEN: some-internal-token
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:-some-key}
  CLERK_SECRET_KEY: ${CLERK_SECRET_KEY:-some-key}
  NEXT_PUBLIC_SUPAGLUE_ENVIRONMENT: docker
  NEXT_PUBLIC_SUPAGLUE_DISABLE_ERROR_REPORTING: 1

services:
  postgres:
    image: postgres:15
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: on-failure
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-supaglue}

  api:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
      args:
        - APP=api
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_started
      init:
        condition: service_completed_successfully
    working_dir: /workspace
    develop:
      watch:
        - action: sync
          path: ./apps/api
          target: /workspace/apps/api
          ignore:
            - node_modules/
        - action: sync
          path: ./packages
          target: /workspace/packages
        - action: sync
          path: ./openapi
          target: /workspace/openapi
        - action: rebuild
          path: package.json
        - action: rebuild
          path: ./apps/api/package.json
        - action: rebuild
          path: ./yarn.lock
    environment:
      <<: [*common-env, *fe-api-common-env]
      SUPAGLUE_API_PORT: ${SUPAGLUE_API_PORT:-8080}
      SUPAGLUE_CORS_ORIGIN: ${SUPAGLUE_CORS_ORIGIN:-http://localhost:3000}
      SUPAGLUE_SYNC_PERIOD_MS:
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin}
    restart: on-failure
    command: /bin/sh -c "yarn workspace api start"

  sync-worker:
    build:
      context: .
      dockerfile: ./Dockerfile.dev
      args:
        - APP=sync-worker
    depends_on:
      postgres:
        condition: service_started
      init:
        condition: service_completed_successfully
    working_dir: /workspace
    develop:
      watch:
        - action: sync
          path: ./apps/sync-worker
          target: /workspace/apps/sync-worker
          ignore:
            - node_modules/
        - action: sync
          path: ./packages
          target: /workspace/packages
        - action: rebuild
          path: package.json
        - action: rebuild
          path: ./apps/sync-worker/package.json
        - action: rebuild
          path: ./yarn.lock
    environment:
      <<: *common-env
    restart: on-failure
    command: /bin/sh -c "yarn workspace sync-worker start"

  temporal:
    image: alpine:3.18.0
    ports:
      - 7233:7233
      - 8233:8233
    restart: on-failure
    command:
      - /bin/sh
      - -c
      - |
        apk add --update curl
        rm -rf /var/cache/apk/*
        curl -sSf https://temporal.download/cli.sh | sh
        /root/.temporalio/bin/temporal server start-dev -n default --ip 0.0.0.0 -f /data/temporal.db
    volumes:
      - temporalitedata:/data

  init:
    image: node:18-bullseye-slim
    environment:
      <<: *common-env
      DO_SEED: '0'
    volumes:
      - .:/app
    working_dir: /app
    command:
      - sh
      - -c
      - |
        yarn workspace @supaglue/db prisma migrate dev
        yarn workspace @supaglue/db prisma db seed
        yarn workspace api init-temporal

volumes:
  pgdata:
  temporalitedata:
